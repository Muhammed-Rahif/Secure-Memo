{"version":3,"sources":["Components/SignIn.js","Components/SignUp.js","Components/TemporaryDrawer.js","Components/CreateMemo.js","Components/HomeViewMemos.js","Components/AboutUs.js","Components/EditMemo.js","Components/ViewMemo.js","App.js","index.js"],"names":["Copyright","Typography","variant","color","align","Link","href","Date","getFullYear","createMuiTheme","palette","type","useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","secondary","main","form","width","submit","SignIn","props","classes","useForm","reValidateMode","register","handleSubmit","errors","formState","Container","component","maxWidth","CssBaseline","className","Avatar","onSubmit","formData","signInUser","TextField","fullWidth","id","label","autoComplete","autoFocus","required","pattern","error","email","helperText","minLength","password","Button","Grid","container","justify","item","Box","mt","SignUp","signUpUser","xs","sm","firstName","lastName","list","fullList","profileSection","height","justifyContent","padding","bgImage","backgroundImage","filter","profileIconStyles","root","orange","getContrastText","deepOrange","purple","deepPurple","small","large","TemporaryDrawer","anchor","profileIconClasses","React","useState","top","left","bottom","right","state","setState","history","useHistory","toggleDrawer","open","event","key","useEffect","active","document","getElementById","click","Fragment","style","hidden","onClick","Drawer","onClose","clsx","role","onKeyDown","List","Divider","ListItem","button","ListItemIcon","ListItemText","primary","push","appBar","position","title","marginLeft","flex","devider","Transition","forwardRef","ref","Slide","direction","FullScreenDialog","setOpen","textAreaHeight","setTextAreaHeight","mdScrollable","setMdScrollable","textAreaContent","setTextAreaContent","defaultValues","memoType","setValue","setTimeout","clientHeight","handleClose","console","log","Dialog","fullScreen","TransitionComponent","createUserMemo","AppBar","Toolbar","Tooltip","arrow","IconButton","edge","aria-label","startIcon","paddingBottom","memoTitle","onChange","e","target","value","shouldValidate","textAlign","rows","multiline","$","val","updateMarkdown","memoBody","Switch","checked","overflowY","changePreviewScrollable","Paper","minHeight","overflowX","paddingLeft","children","FormControl","formControl","InputLabel","Select","defaultValue","labelId","MenuItem","messages","person","text","marginBottom","subheader","background","grow","flexGrow","fabButton","zIndex","BottomAppBar","drawer","setDrawer","createMemo","setCreateMemo","anchorEl","setAnchorEl","handleMenuClose","square","gutterBottom","map","ListSubheader","ListItemAvatar","alt","charAt","toUpperCase","window","location","Fab","aria-controls","aria-aria-haspopup","currentTarget","keepMounted","Boolean","logoutUser","footer","grey","StickyFooter","prefersDarkMode","useMediaQuery","useMemo","ThemeProvider","addMemoTo","setAddMemoTo","memoHeading","setMemoHeading","showSnackBar","Alert","elevation","message","severity","snackBar","setSnackBar","handleSnackBarClose","reason","fontSize","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","CryptoJS","require","clientStorageKey","encKey","App","BackdropClose","backdropOpen","backdropToggle","encryptObj","obj","encObj","Object","keys","itm","AES","encrypt","toString","encUnSaltStr","str","enc","Utf8","parse","iv","words","sigBytes","decryptToOrgObj","decObj","decrypt","replace","userData","userEmail","ajax","method","url","data","success","response","status","userLoggedIn","verifyUserLogin","snackbar","openSnackbar","msg","errorMsg","localStorage","setItem","reload","getLoggedInUserData","JSON","getItem","memoData","assign","firstMemo","updateUserMemo","userId","memoId","alert","getUserMemo","dltUserMemo","editUserMemo","SnackbarClose","userLocalStorage","stringify","componentDidMount","myMemos","this","Backdrop","CircularProgress","exact","path","to","Component","ReactDOM","render"],"mappings":"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","file":"static/js/main.a19a67df.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Link from \"@material-ui/core/Link\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\n\nimport { useForm } from \"react-hook-form\";\nimport { createMuiTheme } from \"@material-ui/core/styles\";\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {\"Copyright © \"}\n      <Link color=\"inherit\" href=\"./\">\n        Secure Memo\n      </Link>{\" \"}\n      {new Date().getFullYear()}\n      {\".\"}\n    </Typography>\n  );\n}\n\nconst darkTheme = createMuiTheme({\n  palette: {\n    type: \"dark\",\n  },\n});\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport default function SignIn(props) {\n  const classes = useStyles();\n  var emailPattern = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm({ reValidateMode: \"onChange\" });\n  const onSubmit = (formData) => {\n    props.signInUser(formData);\n  };\n  \n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign in\n        </Typography>\n        <form className={classes.form} onSubmit={handleSubmit(onSubmit)}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            fullWidth\n            id=\"email\"\n            label=\"Email Address\"\n            autoComplete=\"off\"\n            autoFocus\n            {...register(\"email\", {\n              required: true,\n              pattern: emailPattern,\n            })}\n            error={errors.email ? true : false}\n            helperText={\n              errors.email\n                ? errors.email.type === \"required\"\n                  ? \"Email address is required.\"\n                  : \"Type a valid email address.\"\n                : \"Type your email address.\"\n            }\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            fullWidth\n            label=\"Password\"\n            type=\"password\"\n            id=\"password\"\n            autoComplete=\"off\"\n            {...register(\"password\", { required: true, minLength: 8 })}\n            error={errors.password ? true : false}\n            helperText={\n              errors.password\n                ? errors.password.type === \"required\"\n                  ? \"Password is required.\"\n                  : \"Minimum lenght is 8.\"\n                : \"Type your password.\"\n            }\n          />\n          {/* <FormControlLabel\n            control={<Checkbox value=\"remember\" color=\"primary\" />}\n            label=\"Remember me\"\n          /> */}\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Sign In\n          </Button>\n          <Grid container justify=\"flex-end\">\n            {/* <Grid item xs>\n              <Link href=\"\" aria-disabled variant=\"body2\">\n                Forgot password?\n              </Link>\n            </Grid> */}\n            <Grid item>\n              <Link href=\"/signup\" variant=\"body2\">\n                {\"Don't have an account? Sign Up\"}\n              </Link>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n      <Box mt={8}>\n        <Copyright />\n      </Box>\n    </Container>\n  );\n}\n","import React, { useState } from \"react\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Link from \"@material-ui/core/Link\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\n\nimport { useForm } from \"react-hook-form\";\nimport { FormatIndentIncreaseTwoTone } from \"@material-ui/icons\";\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {\"Copyright © \"}\n      <Link color=\"inherit\" href=\"./\">\n        Secure Memo\n      </Link>{\" \"}\n      {new Date().getFullYear()}\n      {\".\"}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\n\nexport default function SignUp(props) {\n  const classes = useStyles();\n  var emailPattern = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm({ reValidateMode: \"onChange\" });\n\n  const onSubmit = (formData) => {\n    props.signUpUser(formData)\n  };\n  \n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign up\n        </Typography>\n        <form className={classes.form} onSubmit={handleSubmit(onSubmit)}>\n          <Grid container spacing={2}>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                autoComplete=\"fname\"\n                variant=\"outlined\"\n                fullWidth\n                id=\"firstName\"\n                label=\"First Name\"\n                autoFocus\n                autoComplete=\"off\"\n                {...register(\"firstName\", { required: true, minLength: 3 })}\n                error={errors.firstName ? true : false}\n                helperText={\n                  errors.firstName\n                    ? errors.firstName.type === \"required\"\n                      ? \"First name is required.\"\n                      : \" Minimum lenght 3.\"\n                    : \"Type your first name.\"\n                }\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                variant=\"outlined\"\n                fullWidth\n                id=\"lastName\"\n                label=\"Last Name\"\n                autoComplete=\"off\"\n                {...register(\"lastName\", { required: true, minLength: 3 })}\n                error={errors.lastName ? true : false}\n                helperText={\n                  errors.lastName\n                    ? errors.lastName.type === \"required\"\n                      ? \"Last name is required.\"\n                      : \" Minimum lenght 3.\"\n                    : \"Type your last name.\"\n                }\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                fullWidth\n                id=\"email\"\n                label=\"Email Address\"\n                autoComplete=\"off\"\n                {...register(\"email\", {\n                  required: true,\n                  pattern: emailPattern,\n                })}\n                error={errors.email ? true : false}\n                helperText={\n                  errors.email\n                    ? errors.email.type === \"required\"\n                      ? \"Email address is required.\"\n                      : \"Type a valid email address.\"\n                    : \"Type your email address.\"\n                }\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                fullWidth\n                label=\"Password\"\n                type=\"password\"\n                id=\"password\"\n                autoComplete=\"off\"\n                {...register(\"password\", { required: true, minLength: 8 })}\n                error={errors.password ? true : false}\n                helperText={\n                  errors.password\n                    ? errors.password.type === \"required\"\n                      ? \"Password is required.\"\n                      : \"Minimum lenght is 8.\"\n                    : \"Type your password.\"\n                }\n              />\n            </Grid>\n            {/* <Grid item xs={12}>\n              <FormControlLabel\n                control={<Checkbox value=\"allowExtraEmails\" color=\"primary\" />}\n                label=\"I want to receive inspiration, marketing promotions and updates via email.\"\n              />\n            </Grid> */}\n          </Grid>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Sign Up\n          </Button>\n          <Grid container justify=\"flex-end\">\n            <Grid item>\n              <Link href=\"/signin\" variant=\"body2\">\n                Already have an account? Sign in\n              </Link>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n      <Box mt={5}>\n        <Copyright />\n      </Box>\n    </Container>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport clsx from \"clsx\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport Button from \"@material-ui/core/Button\";\nimport List from \"@material-ui/core/List\";\nimport Divider from \"@material-ui/core/Divider\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport InboxIcon from \"@material-ui/icons/MoveToInbox\";\nimport MailIcon from \"@material-ui/icons/Mail\";\nimport AllInboxIcon from \"@material-ui/icons/AllInbox\";\nimport VisibilityOffIcon from \"@material-ui/icons/VisibilityOff\";\nimport LockIcon from \"@material-ui/icons/Lock\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport { deepOrange, deepPurple } from \"@material-ui/core/colors\";\nimport InfoIcon from '@material-ui/icons/Info';\nimport {useHistory} from 'react-router-dom';\n\nconst useStyles = makeStyles({\n  list: {\n    width: 250,\n  },\n  fullList: {\n    width: \"auto\",\n  },\n  profileSection: {\n    width: \"100%\",\n    height: \"10rem\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    padding: \"0 !important\",\n  },\n  bgImage: {\n    backgroundImage: \"url('https://picsum.photos/300/200')\",\n    filter: \"opacity(75%)\",\n    height: \"100%\",\n    width: \"100%\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    display: \"flex\",\n  },\n});\n\nconst profileIconStyles = makeStyles((theme) => ({\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(1),\n    },\n  },\n  orange: {\n    color: theme.palette.getContrastText(deepOrange[500]),\n    backgroundColor: deepOrange[500],\n  },\n  purple: {\n    color: theme.palette.getContrastText(deepPurple[500]),\n    backgroundColor: deepPurple[500],\n  },\n  small: {\n    width: theme.spacing(3),\n    height: theme.spacing(3),\n  },\n  large: {\n    width: theme.spacing(7),\n    height: theme.spacing(7),\n  },\n}));\n\nexport default function TemporaryDrawer(props) {\n  const anchor = props.anchor;\n  const classes = useStyles();\n  const profileIconClasses = profileIconStyles();\n  const [state, setState] = React.useState({\n    top: false,\n    left: false,\n    bottom: false,\n    right: false,\n  });\n  const history = useHistory();\n\n  const toggleDrawer = (anchor, open) => (event) => {\n    if (\n      event.type === \"keydown\" &&\n      (event.key === \"Tab\" || event.key === \"Shift\")\n    ) {\n      return;\n    }\n\n    setState({ ...state, [anchor]: open });\n  };\n\n  const list = (anchor) => (\n    <div\n      className={clsx(classes.list, {\n        [classes.fullList]: anchor === \"top\" || anchor === \"bottom\",\n      })}\n      role=\"presentation\"\n      onClick={toggleDrawer(anchor, false)}\n      onKeyDown={toggleDrawer(anchor, false)}\n    >\n      <List className={classes.profileSection}>\n        <div className={classes.bgImage}>\n          <Avatar className={[profileIconClasses.orange,profileIconClasses.large]}>OP</Avatar>\n        </div>\n      </List>\n      <Divider />\n      <List>\n        <ListItem button key=\"All Memos\">\n          <ListItemIcon>\n            <AllInboxIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"All Memos\" />\n        </ListItem>\n        <ListItem button key=\"Hidden Memos\">\n          <ListItemIcon>\n            <VisibilityOffIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Hidden Memos\" />\n        </ListItem>\n        <ListItem button key=\"Secure Memos\">\n          <ListItemIcon>\n            <LockIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Secure Memos\" />\n        </ListItem>\n      <Divider/>\n        <ListItem onClick={()=>{history.push('/about-us')}} button key=\"Secure Memos\">\n          <ListItemIcon>\n            <InfoIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"About Us\" />\n        </ListItem>\n      </List>\n    </div>\n  );\n  useEffect(() => {\n    if (props.active) {\n      document.getElementById(\"openDrawer\").click();\n    }\n  }, []);\n  return (\n    <div>\n      {\n        <React.Fragment key={anchor}>\n          <Button\n          style={{display:\"none\"}}\n            hidden\n            id=\"openDrawer\"\n            onClick={toggleDrawer(anchor, true)}\n          >\n            {anchor}\n          </Button>\n          <Drawer\n            anchor={anchor}\n            open={state[anchor]}\n            onClose={toggleDrawer(anchor, false)}\n          >\n            {list(anchor)}\n          </Drawer>\n        </React.Fragment>\n      }\n    </div>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport List from \"@material-ui/core/List\";\nimport Divider from \"@material-ui/core/Divider\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport Slide from \"@material-ui/core/Slide\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport AllInboxIcon from \"@material-ui/icons/AllInbox\";\nimport VisibilityOffIcon from \"@material-ui/icons/VisibilityOff\";\nimport LockIcon from \"@material-ui/icons/Lock\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport Paper from \"@material-ui/core/Paper\";\nimport ReactMarkdown from \"react-markdown\";\nimport Switch from \"@material-ui/core/Switch\";\nimport $ from \"jquery\";\n\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    position: \"relative\",\n  },\n  title: {\n    marginLeft: theme.spacing(2),\n    flex: 1,\n  },\n  devider: {\n    maxWidth: \"95%\",\n    margin: \"auto\",\n  },\n}));\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport default function FullScreenDialog(props) {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const [textAreaHeight, setTextAreaHeight] = React.useState(null);\n  const [mdScrollable, setMdScrollable] = React.useState(false);\n  const [textAreaContent, setTextAreaContent] = React.useState(\"\");\n  const {\n    register,\n    setValue,\n    handleSubmit,\n    formState: { errors },\n  } = useForm({\n    reValidateMode: \"onChange\",\n    defaultValues: { memoType: \"allMemos\" },\n  });\n\n  const onSubmit = (formData) => {\n    console.log(formData);\n    props.createUserMemo(formData);\n    handleClose();\n  };\n\n  const changePreviewScrollable = (event) => {\n    setMdScrollable(event.target.checked);\n    if (mdScrollable) {\n      document.getElementById(\"markdown-preview\").style.overflowY = \"visible\";\n      document.getElementById(\"markdown-preview\").style.height = \"auto\";\n    } else {\n      document.getElementById(\"markdown-preview\").style.overflowY = \"scroll\";\n      document.getElementById(\"markdown-preview\").style.height = textAreaHeight;\n    }\n  };\n\n  useEffect(() => {\n    setOpen(true);\n    setTimeout(() => {\n      setTextAreaHeight(\n        document.getElementById(\"bodyTextarea\").clientHeight +\n          (document.getElementById(\"bodyTextarea\").clientHeight * 2.5) / 10 +\n          \"px\"\n      );\n    }, 500);\n  }, []);\n\n  const handleClose = () => {\n    document.getElementById(\"addBtn\").click();\n    setOpen(false);\n  };\n\n  const updateMarkdown = (e) => {\n    setTextAreaContent($(\"#bodyTextarea\").val());\n    setTextAreaContent(e.target.value);\n  };\n\n  const switchHandler = (event) => {\n    setMdScrollable(document.getElementById(\"mdSwitch\").checked);\n    changePreviewScrollable(event);\n  };\n\n  console.log(errors);\n  console.log(textAreaContent);\n  return (\n    <div>\n      <Dialog\n        fullScreen\n        open={open}\n        onClose={handleClose}\n        TransitionComponent={Transition}\n      >\n        <form\n          className={classes.form}\n          autoComplete=\"off\"\n          onSubmit={handleSubmit(onSubmit)}\n        >\n          <AppBar className={classes.appBar}>\n            <Toolbar>\n              <Tooltip title=\"Cancel\" arrow>\n                <IconButton\n                  edge=\"start\"\n                  color=\"inherit\"\n                  onClick={handleClose}\n                  aria-label=\"close\"\n                >\n                  <CloseIcon />\n                </IconButton>\n              </Tooltip>\n              <Typography variant=\"h6\" className={classes.title}>\n                Create a new Memo\n              </Typography>\n              <Tooltip title=\"Save Memo\" arrow>\n                <Button\n                  autoFocus\n                  color=\"inherit\"\n                  variant=\"outlined\"\n                  startIcon={<SaveIcon />}\n                  type=\"submit\"\n                >\n                  save\n                </Button>\n              </Tooltip>\n            </Toolbar>\n          </AppBar>\n          <List>\n            <ListItem style={{ paddingBottom: 0 }}>\n              <ListItemText primary=\"Memo Heading\" />\n            </ListItem>\n            <ListItem>\n              <TextField\n                id=\"outlined-basic\"\n                label=\"Memo Heading\"\n                variant=\"outlined\"\n                fullWidth\n                ref={register(\"memoTitle\", { required: true, minLength: 10 })}\n                error={errors.memoTitle ? true : false}\n                autoFocus={errors.memoTitle ? true : false}\n                onChange={(e) => {\n                  setValue(\"memoTitle\", e.target.value, {\n                    shouldValidate: true,\n                  });\n                }}\n                helperText={\n                  errors.memoTitle\n                    ? errors.memoTitle.type === \"required\"\n                      ? \"Memo Title is required.\"\n                      : \"Memo Title minimum lenght is 10.\"\n                    : \"Memo Title here.\"\n                }\n              />\n            </ListItem>\n            <Divider className={classes.devider} />\n            <ListItem style={{ paddingBottom: 0 }}>\n              <ListItemText primary=\"Memo Body\" />\n              <p style={{ textAlign: \"right\" }}>\n                <small>* Markdown enabled</small>\n              </p>\n            </ListItem>\n            <ListItem>\n              <TextField\n                id=\"bodyTextarea\"\n                label=\"Memo Body\"\n                variant=\"outlined\"\n                rows=\"7\"\n                multiline={true}\n                value={textAreaContent}\n                fullWidth\n                aria-label=\"textarea\"\n                onChange={(e) => {\n                  updateMarkdown(e);\n                  setValue(\"memoBody\", e.target.value, {\n                    shouldValidate: true,\n                  });\n                }}\n                ref={register(\"memoBody\", {\n                  required: true,\n                  minLength: 12,\n                })}\n                autoFocus={errors.memoBody ? true : false}\n                error={errors.memoBody ? true : false}\n                helperText={\n                  errors.memoBody\n                    ? errors.memoBody.type === \"required\"\n                      ? \"Memo body is required.\"\n                      : \"Memo body Minimum lenght is 12.\"\n                    : \"Memo Body here.\"\n                }\n              />\n            </ListItem>\n            <ListItem style={{ paddingBottom: 0 }}>\n              <ListItemText primary=\"Memo Body Preview\" />\n              <p style={{ textAlign: \"right\" }}>\n                Scrollable\n                <Switch\n                  id=\"mdSwitch\"\n                  onChange={switchHandler}\n                  color=\"primary\"\n                  checked={mdScrollable}\n                />\n              </p>\n            </ListItem>\n            <ListItem>\n              <Paper\n                id=\"markdown-preview\"\n                variant=\"outlined\"\n                style={{\n                  minHeight: textAreaHeight,\n                  margin: \".13rem\",\n                  width: \"100vw\",\n                  overflowX: \"scroll\",\n                  overflowY: \"visible\",\n                  paddingLeft: \".7rem\",\n                }}\n              >\n                <ReactMarkdown children={textAreaContent} />\n              </Paper>\n            </ListItem>\n            <Divider className={classes.devider} />\n            <ListItem style={{ paddingBottom: 0 }}>\n              <ListItemText primary=\"Add Memo to\" />\n            </ListItem>\n            <ListItem>\n              <FormControl\n                variant=\"outlined\"\n                fullWidth\n                className={classes.formControl}\n              >\n                <InputLabel id=\"demo-simple-select-outlined-label\">\n                  Add to\n                </InputLabel>\n                <Select\n                  defaultValue=\"allMemos\"\n                  labelId=\"demo-simple-select-outlined-label\"\n                  id=\"demo-simple-select-outlined\"\n                  label=\"Add to\"\n                  onChange={(e) => {\n                    setValue(\"memoType\", e.target.value, {\n                      shouldValidate: true,\n                    });\n                  }}\n                  {...register(\"memoType\", { required: true })}\n                  autoFocus={errors.memoType ? true : false}\n                  error={errors.memoType ? true : false}\n                  helperText=\"Memo will add to all memos section by default.\"\n                >\n                  <MenuItem value=\"allMemos\">\n                    <AllInboxIcon /> All Memos\n                  </MenuItem>\n                  <MenuItem value=\"hiddenMemos\">\n                    <VisibilityOffIcon /> Hidden\n                  </MenuItem>\n                  <MenuItem value=\"secureMemos\">\n                    <LockIcon /> Secure\n                  </MenuItem>\n                </Select>\n              </FormControl>\n            </ListItem>\n            <Divider className={classes.devider} />\n          </List>\n        </form>\n      </Dialog>\n    </div>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Fab from \"@material-ui/core/Fab\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport MoreIcon from \"@material-ui/icons/MoreVert\";\nimport TemporaryDrawer from \"./TemporaryDrawer\";\nimport CreateMemo from \"./CreateMemo\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\n\nconst messages = [\n  {\n    id: 1,\n    primary: \"Brunch this week?\",\n    secondary:\n      \"I'll be in the neighbourhood this week. Let's grab a bite to eat\",\n    person: \"/static/images/avatar/5.jpg\",\n  },\n  {\n    id: 2,\n    primary: \"Birthday Gift\",\n    secondary: `Do you have a suggestion for a good present for John on his work\n      anniversary. I am really confused & would love your thoughts on it.`,\n    person: \"/static/images/avatar/1.jpg\",\n  },\n  {\n    id: 3,\n    primary: \"Recipe to try\",\n    secondary:\n      \"I am try out this new BBQ recipe, I think this might be amazing\",\n    person: \"/static/images/avatar/2.jpg\",\n  },\n  {\n    id: 4,\n    primary: \"Yes!\",\n    secondary: \"I have the tickets to the ReactConf for this year.\",\n    person: \"/static/images/avatar/3.jpg\",\n  },\n  {\n    id: 5,\n    primary: \"Doctor's Appointment\",\n    secondary:\n      \"My appointment for the doctor was rescheduled for next Saturday.\",\n    person: \"/static/images/avatar/4.jpg\",\n  },\n  {\n    id: 6,\n    primary: \"Discussion\",\n    secondary: `Menus that are generated by the bottom app bar (such as a bottom\n      navigation drawer or overflow menu) open as bottom sheets at a higher elevation\n      than the bar.`,\n    person: \"/static/images/avatar/5.jpg\",\n  },\n  {\n    id: 7,\n    primary: \"Summer BBQ\",\n    secondary: `Who wants to have a cookout this weekend? I just got some furniture\n      for my backyard and would love to fire up the grill.`,\n    person: \"/static/images/avatar/1.jpg\",\n  },\n];\n\nconst useStyles = makeStyles((theme) => ({\n  text: {\n    padding: theme.spacing(2, 2, 0),\n  },\n  paper: {\n    paddingBottom: 50,\n  },\n  list: {\n    marginBottom: theme.spacing(2),\n    minHeight: \"80vh\",\n  },\n  subheader: {\n    backgroundColor: theme.palette.background.paper,\n  },\n  appBar: {\n    top: \"auto\",\n    bottom: 0,\n  },\n  grow: {\n    flexGrow: 1,\n  },\n  fabButton: {\n    position: \"absolute\",\n    zIndex: 1,\n    top: -30,\n    left: 0,\n    right: 0,\n    margin: \"0 auto\",\n  },\n}));\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nexport default function BottomAppBar(props) {\n  const classes = useStyles();\n  const [drawer, setDrawer] = useState(false);\n  const [createMemo, setCreateMemo] = useState(false);\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const handleMenuClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleMenuClose = () => {\n    setAnchorEl(null);\n  };\n\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <Paper square className={classes.paper}>\n        <Typography className={classes.text} variant=\"h5\" gutterBottom>\n          Inbox\n        </Typography>\n        <List className={classes.list}>\n          {messages.map(({ id, primary, secondary, person }) => (\n            <React.Fragment key={id}>\n              {id === 1 && (\n                <ListSubheader className={classes.subheader}>\n                  Today\n                </ListSubheader>\n              )}\n              {id === 3 && (\n                <ListSubheader className={classes.subheader}>\n                  Yesterday\n                </ListSubheader>\n              )}\n              <ListItem button>\n                <ListItemAvatar>\n                  <Avatar alt=\"Profile Picture\">\n                    {primary.charAt(0).toUpperCase()}\n                  </Avatar>\n                </ListItemAvatar>\n                <ListItemText\n                  onClick={() => {\n                    window.location.href = \"./view-memo/1234\";\n                  }}\n                  primary={primary}\n                  secondary={secondary}\n                />\n              </ListItem>\n            </React.Fragment>\n          ))}\n        </List>\n      </Paper>\n      <AppBar position=\"fixed\" color=\"primary\" className={classes.appBar}>\n        <Toolbar>\n          <IconButton\n            onClick={() => {\n              drawer ? setDrawer(false) : setDrawer(true);\n              document.getElementById(\"openDrawer\").click();\n            }}\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n          >\n            <MenuIcon />\n          </IconButton>\n          <Tooltip title=\"Create new Memo\" arrow>\n            <Fab\n              id=\"addBtn\"\n              color=\"secondary\"\n              aria-label=\"add\"\n              className={classes.fabButton}\n              onClick={() => {\n                createMemo\n                  ? setTimeout(() => {\n                      setCreateMemo(false);\n                    }, 500)\n                  : setCreateMemo(true);\n              }}\n            >\n              <AddIcon />\n            </Fab>\n          </Tooltip>\n          <div className={classes.grow} />\n          <Tooltip title=\"Search\" arrow>\n            <IconButton color=\"inherit\">\n              <SearchIcon />\n            </IconButton>\n          </Tooltip>\n          <Tooltip title=\"Options\" arrow>\n            <IconButton\n              aria-controls=\"simple-menu\"\n              edge=\"end\"\n              color=\"inherit\"\n              aria-aria-haspopup=\"true\"\n              onClick={handleMenuClick}\n            >\n              <MoreIcon />\n            </IconButton>\n          </Tooltip>\n          <Menu\n            id=\"simple-menu\"\n            anchorEl={anchorEl}\n            keepMounted\n            open={Boolean(anchorEl)}\n            onClose={handleMenuClose}\n          >\n            <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\n            <MenuItem onClick={handleMenuClose}>My account</MenuItem>\n            <MenuItem\n              onClick={() => {\n                handleMenuClose();\n                props.logoutUser();\n              }}\n            >\n              Logout\n            </MenuItem>\n          </Menu>\n        </Toolbar>\n      </AppBar>\n      <TemporaryDrawer anchor=\"left\" active={drawer} />\n      {createMemo ? <CreateMemo createUserMemo={props.createUserMemo} /> : null}\n    </React.Fragment>\n  );\n}\n","import React from \"react\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport Link from \"@material-ui/core/Link\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\">\n      {\"Copyright © \"}\n      <Link color=\"inherit\" href=\"./\">\n        Secure Memo\n      </Link>{\" \"}\n      {new Date().getFullYear()}\n      {\".\"}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    minHeight: \"100vh\",\n  },\n  main: {\n    marginTop: theme.spacing(8),\n    marginBottom: theme.spacing(2),\n  },\n  footer: {\n    padding: theme.spacing(3, 2),\n    marginTop: \"auto\",\n    backgroundColor:\n      theme.palette.type === \"dark\"\n        ? theme.palette.grey[200]\n        : theme.palette.grey[800],\n  },\n}));\n\nexport default function StickyFooter() {\n  const classes = useStyles();\n\n  const prefersDarkMode = useMediaQuery(\"(prefers-color-scheme: dark)\");\n\n  const theme = React.useMemo(\n    () =>\n      createMuiTheme({\n        palette: {\n          type: prefersDarkMode ? \"dark\" : \"light\",\n        },\n      }),\n    [prefersDarkMode]\n  );\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <div className={classes.root}>\n        <CssBaseline />\n        <Container component=\"main\" className={classes.main} maxWidth=\"sm\">\n          <Typography variant=\"h2\" component=\"h1\" gutterBottom>\n            <Link href=\"./\" style={{color:\"white\"}}>Secure Memo</Link>\n          </Typography>\n          <Typography variant=\"h5\" component=\"h2\" gutterBottom>\n            {\"This website created and maintained by \"}\n            <Link href=\"https://github.com/Muhammed-Rahif\" variant=\"h5\" style={{color:\"white\"}}>\n              <b>Muhammed Rahif.</b>\n            </Link>\n            <br />\n          </Typography>\n          <Typography variant=\"subtitle1\" component=\"h3\">\n            {\"I hope you will contact me for any inquiries...\"}\n          </Typography>\n          <Typography variant=\"body1\">Have a nice day.</Typography>\n        </Container>\n        <footer className={classes.footer}>\n          <Container maxWidth=\"sm\">\n            <Typography variant=\"body1\">\n              Made with{\" \"}\n              <Link variant=\"body1\" href=\"https://material-ui.com/\" style={{color:\"white\"}}>\n                React Material UI\n              </Link>\n            </Typography>\n            <Copyright />\n          </Container>\n        </footer>\n      </div>\n    </ThemeProvider>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport List from \"@material-ui/core/List\";\nimport Divider from \"@material-ui/core/Divider\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport Slide from \"@material-ui/core/Slide\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport AllInboxIcon from \"@material-ui/icons/AllInbox\";\nimport VisibilityOffIcon from \"@material-ui/icons/VisibilityOff\";\nimport LockIcon from \"@material-ui/icons/Lock\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport PublishIcon from \"@material-ui/icons/Publish\";\nimport Paper from \"@material-ui/core/Paper\";\nimport ReactMarkdown from \"react-markdown\";\nimport Switch from \"@material-ui/core/Switch\";\n\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    position: \"relative\",\n  },\n  title: {\n    marginLeft: theme.spacing(2),\n    flex: 1,\n  },\n  devider: {\n    maxWidth: \"95%\",\n    margin: \"auto\",\n  },\n}));\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport default function FullScreenDialog(props) {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  //   const [openSuccesSnackBar, setOpenSuccesSnackBar] = React.useState(false);\n  const [addMemoTo, setAddMemoTo] = React.useState(\"allMemos\");\n  const [textAreaHeight, setTextAreaHeight] = React.useState(null);\n  const [mdScrollable, setMdScrollable] = React.useState(false);\n  const [memoHeading, setMemoHeading] = React.useState(\n    \"Some memo heading content\"\n  );\n  const [textAreaContent, setTextAreaContent] = React.useState(\n    \"Some memo body content\"\n  );\n\n  const changePreviewScrollable = (event) => {\n    setMdScrollable(event.target.checked);\n    if (mdScrollable) {\n      document.getElementById(\"markdown-preview\").style.overflowY = \"visible\";\n      document.getElementById(\"markdown-preview\").style.height = \"auto\";\n    } else {\n      document.getElementById(\"markdown-preview\").style.overflowY = \"scroll\";\n      document.getElementById(\"markdown-preview\").style.height = textAreaHeight;\n    }\n  };\n\n  useEffect(() => {\n    setOpen(true);\n    setAddMemoTo(\"hiddenMemos\");\n    setTimeout(() => {\n      setTextAreaHeight(\n        document.getElementById(\"bodyTextarea\").clientHeight +\n          (document.getElementById(\"bodyTextarea\").clientHeight * 2.5) / 10 +\n          \"px\"\n      );\n    }, 500);\n  }, []);\n\n  const handleClose = () => {\n    document.getElementById(\"editBtn\").click();\n    setOpen(false);\n  };\n\n  const handleSelectChange = (event) => {\n    setAddMemoTo(event.target.value);\n  };\n\n  const updateMarkdown = () => {\n    setTextAreaContent(document.getElementById(\"bodyTextarea\").value);\n  };\n\n  const switchHandler = (event) => {\n    setMdScrollable(document.getElementById(\"mdSwitch\").checked);\n    changePreviewScrollable(event);\n  };\n\n  return (\n    <div>\n      <Dialog\n        fullScreen\n        open={open}\n        onClose={handleClose}\n        TransitionComponent={Transition}\n      >\n        <AppBar className={classes.appBar}>\n          <Toolbar>\n            <Tooltip title=\"Cancel\" arrow>\n              <IconButton\n                edge=\"start\"\n                color=\"inherit\"\n                onClick={handleClose}\n                aria-label=\"close\"\n              >\n                <CloseIcon />\n              </IconButton>\n            </Tooltip>\n            <Typography variant=\"h6\" className={classes.title}>\n              Edit Memo\n            </Typography>\n            <Tooltip title=\"Save Memo\" arrow>\n              <Button\n                autoFocus\n                color=\"inherit\"\n                onClick={() => {\n                  handleClose();\n                  props.showSnackBar(true);\n                }}\n                variant=\"outlined\"\n                startIcon={<PublishIcon />}\n              >\n                update\n              </Button>\n            </Tooltip>\n          </Toolbar>\n        </AppBar>\n        <List>\n          <form className={classes.form} autoComplete=\"off\">\n            <ListItem style={{ paddingBottom: 0 }}>\n              <ListItemText primary=\"Memo Heading\" />\n            </ListItem>\n            <ListItem>\n              <TextField\n                id=\"outlined-basic\"\n                label=\"Memo Heading\"\n                variant=\"outlined\"\n                fullWidth\n                value={memoHeading}\n                onChange={() => {\n                  setMemoHeading(event.target.value);\n                }}\n              />\n            </ListItem>\n            <Divider className={classes.devider} />\n            <ListItem style={{ paddingBottom: 0 }}>\n              <ListItemText primary=\"Memo Body\" />\n              <p style={{ textAlign: \"right\" }}>\n                <small>* Markdown enabled</small>\n              </p>\n            </ListItem>\n            <ListItem>\n              <TextField\n                id=\"bodyTextarea\"\n                label=\"Memo Body\"\n                variant=\"outlined\"\n                rows=\"7\"\n                multiline={true}\n                fullWidth\n                aria-label=\"textarea\"\n                value={textAreaContent}\n                onChange={updateMarkdown}\n              />\n            </ListItem>\n            <Divider className={classes.devider} />\n            <ListItem style={{ paddingBottom: 0 }}>\n              <ListItemText primary=\"Memo Body Preview\" />\n              <p style={{ textAlign: \"right\" }}>\n                Scrollable\n                <Switch\n                  id=\"mdSwitch\"\n                  onChange={switchHandler}\n                  color=\"primary\"\n                  style={{ paddingBottom: 0 }}\n                  checked={mdScrollable}\n                />\n              </p>\n            </ListItem>\n            <ListItem>\n              <Paper\n                id=\"markdown-preview\"\n                variant=\"outlined\"\n                style={{\n                  minHeight: textAreaHeight,\n                  margin: \".13rem\",\n                  width: \"100vw\",\n                  overflowY: \"visible\",\n                  paddingLeft: \".7rem\",\n                }}\n              >\n                <ReactMarkdown children={textAreaContent} />\n              </Paper>\n            </ListItem>\n            <Divider className={classes.devider} />\n            <ListItem style={{ paddingBottom: 0 }}>\n              <ListItemText primary=\"Add Memo to\" />\n            </ListItem>\n            <ListItem>\n              <FormControl\n                variant=\"outlined\"\n                fullWidth\n                className={classes.formControl}\n              >\n                <InputLabel id=\"demo-simple-select-outlined-label\">\n                  Add to\n                </InputLabel>\n                <Select\n                  labelId=\"demo-simple-select-outlined-label\"\n                  id=\"demo-simple-select-outlined\"\n                  value={addMemoTo}\n                  onChange={handleSelectChange}\n                  label=\"Add to\"\n                >\n                  <MenuItem value=\"allMemos\">\n                    <AllInboxIcon /> All Memos\n                  </MenuItem>\n                  <MenuItem value=\"hiddenMemos\">\n                    <VisibilityOffIcon /> Hidden\n                  </MenuItem>\n                  <MenuItem value=\"secureMemos\">\n                    <LockIcon /> Secure\n                  </MenuItem>\n                </Select>\n              </FormControl>\n            </ListItem>\n            <Divider className={classes.devider} />\n          </form>\n        </List>\n      </Dialog>\n    </div>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Fab from \"@material-ui/core/Fab\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport MoreIcon from \"@material-ui/icons/MoreVert\";\nimport TemporaryDrawer from \"./TemporaryDrawer\";\nimport EditMemo from \"./EditMemo\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport ReactMarkdown from \"react-markdown\";\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\n\n\nconst useStyles = makeStyles((theme) => ({\n  text: {\n    padding: theme.spacing(2, 2, 0),\n  },\n  paper: {\n    paddingBottom: 50,\n  },\n  list: {\n    marginBottom: theme.spacing(2),\n    minHeight: \"80vh\",\n    padding: \"1.5rem\",\n  },\n  subheader: {\n    backgroundColor: theme.palette.background.paper,\n  },\n  appBar: {\n    top: \"auto\",\n    bottom: 0,\n  },\n  grow: {\n    flexGrow: 1,\n  },\n  fabButton: {\n    position: \"absolute\",\n    zIndex: 1,\n    top: -30,\n    left: 0,\n    right: 0,\n    margin: \"0 auto\",\n  },\n}));\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nexport default function BottomAppBar() {\n  const classes = useStyles();\n  const [drawer, setDrawer] = useState(false);\n  const [createMemo, setCreateMemo] = useState(false);\n  const [snackBar, setSnackBar] = useState(false);\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const handleMenuClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleMenuClose = () => {\n    setAnchorEl(null);\n  };\n\n  const handleSnackBarClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n\n    setSnackBar(false);\n  };\n\n  const showSnackBar = (message, severity) => {\n    return (\n      <Snackbar\n        anchorOrigin={{ vertical: \"bottom\", horizontal: \"left\" }}\n        open={snackBar}\n        autoHideDuration={6000}\n        onClose={handleSnackBarClose}\n      >\n        <Alert onClose={handleSnackBarClose} severity={severity}>\n          {message}\n        </Alert>\n      </Snackbar>\n    );\n  };\n\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <Paper square className={classes.paper}>\n        <Typography className={classes.text} variant=\"h5\" gutterBottom>\n          Your Memo Heading\n        </Typography>\n        <List className={classes.list}>\n          <ReactMarkdown />\n        </List>\n      </Paper>\n      <AppBar position=\"fixed\" color=\"primary\" className={classes.appBar}>\n        <Toolbar>\n          <IconButton\n            onClick={() => {\n              drawer ? setDrawer(false) : setDrawer(true);\n              document.getElementById(\"openDrawer\").click();\n            }}\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n          >\n            <MenuIcon />\n          </IconButton>\n          <Tooltip title=\"Edit this Memo\" arrow>\n            <Fab\n              id=\"addBtn\"\n              color=\"secondary\"\n              aria-label=\"add\"\n              className={classes.fabButton}\n              onClick={() => {\n                createMemo\n                  ? setTimeout(() => {\n                      setCreateMemo(false);\n                    }, 500)\n                  : setCreateMemo(true);\n              }}\n            >\n              <EditIcon />\n            </Fab>\n          </Tooltip>\n          <div className={classes.grow} />\n          <Tooltip title=\"Search\" arrow>\n            <IconButton color=\"inherit\">\n              <SearchIcon />\n            </IconButton>\n          </Tooltip>\n          <Tooltip title=\"Options\" arrow>\n            <IconButton\n              aria-controls=\"simple-menu\"\n              edge=\"end\"\n              color=\"inherit\"\n              aria-aria-haspopup=\"true\"\n              onClick={handleMenuClick}\n            >\n              <MoreIcon />\n            </IconButton>\n          </Tooltip>\n          <Menu\n            id=\"simple-menu\"\n            anchorEl={anchorEl}\n            keepMounted\n            open={Boolean(anchorEl)}\n            onClose={handleMenuClose}\n          >\n            <MenuItem\n            id=\"editBtn\"\n              onClick={() => {\n                handleMenuClose();\n                createMemo\n                  ? setTimeout(() => {\n                      setCreateMemo(false);\n                    }, 500)\n                  : setCreateMemo(true);\n              }}\n            >\n              <EditIcon fontSize=\"small\" />\n              Edit\n            </MenuItem>\n            <MenuItem onClick={handleMenuClose}>\n              <DeleteIcon fontSize=\"small\" />\n              Delete\n            </MenuItem>\n            <MenuItem onClick={handleMenuClose}>\n              <HomeIcon fontSize=\"small\" />\n              Home\n            </MenuItem>\n          </Menu>\n        </Toolbar>\n      </AppBar>\n      <TemporaryDrawer anchor=\"left\" active={drawer} />\n      {snackBar ? showSnackBar(\"Memo updated successsfully..!\", \"success\") : null}\n      {createMemo ? <EditMemo showSnackBar={setSnackBar} /> : null}\n    </React.Fragment>\n  );\n}\n","import React, { Component, useEffect } from \"react\";\n// import logo from './logo.svg';\nimport \"./App.css\";\n\nimport $ from \"jquery\";\nconst CryptoJS = require(\"crypto-js\");\n\nimport SignIn from \"./Components/SignIn\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport SignUp from \"./Components/SignUp\";\nimport HomeViewMemos from \"./Components/HomeViewMemos\";\nimport MyProfile from \"./Components/MyProfile\";\nimport AboutUs from \"./Components/AboutUs\";\nimport ViewMemo from \"./Components/ViewMemo\";\nimport EditMemo from \"./Components/EditMemo\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport { Redirect } from \"react-router\";\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nconst clientStorageKey = \"SecureMemoStorage\";\nconst encKey = \"secure memo key\";\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userData: null,\n      userLoggedIn: false,\n      myMemos: [],\n      snackbar: {\n        openSnackbar: false,\n        msg: \"\",\n        type: \"success\",\n        position: { vertical: \"left\", horizontal: \"bottom\" },\n      },\n      backdropOpen: false,\n    };\n  }\n\n  BackdropClose = () => {\n    this.setState({ backdropOpen: false });\n  };\n  backdropToggle = () => {\n    this.setState({ backdropOpen: !this.state.backdropOpen });\n  };\n\n  encryptObj = (obj) => {\n    let encObj = {};\n    Object.keys(obj).map((itm) => {\n      encObj[itm] = CryptoJS.AES.encrypt(obj[itm], encKey).toString();\n    });\n    return encObj;\n  };\n\n  encUnSaltStr = (str) => {\n    return CryptoJS.AES.encrypt(str, CryptoJS.enc.Utf8.parse(encKey), {\n      iv: { words: [0, 0, 0, 0], sigBytes: 16 },\n    }).toString();\n  };\n\n  decryptToOrgObj = (obj) => {\n    let decObj = {};\n    Object.keys(obj).map((itm) => {\n      console.log(obj[itm]);\n      decObj[itm] = CryptoJS.AES.decrypt(obj[itm], encKey).toString(\n        CryptoJS.enc.Utf8\n      );\n      decObj[itm] = decObj[itm].replace(/['\"]+/g, \"\");\n    });\n    return decObj;\n  };\n\n  signUpUser = (userData) => {\n    this.backdropToggle();\n    var userEmail = userData.email;\n    delete userData.email;\n    userData = this.encryptObj(userData);\n    userData.email = this.encUnSaltStr(userEmail);\n    $.ajax({\n      method: \"post\",\n      url: \"./signup-user\",\n      data: userData,\n      success: (response) => {\n        if (response.status) {\n          this.backdropToggle();\n          this.setState({ userData: response.userData });\n          this.setState({ userLoggedIn: true });\n          this.verifyUserLogin();\n          <Redirect push to=\"./\" />;\n        } else {\n          this.backdropToggle();\n          this.setState({\n            snackbar: {\n              openSnackbar: true,\n              msg: `Can't sign up : ${response.errorMsg}`,\n              type: \"error\",\n              position: {\n                vertical: \"center\",\n                horizontal: \"top\",\n              },\n            },\n          });\n        }\n      },\n    });\n  };\n\n  signInUser = (userData) => {\n    this.backdropToggle();\n    var userEmail = userData.email;\n    delete userData.email;\n    userData = this.encryptObj(userData);\n    userData.email = this.encUnSaltStr(userEmail);\n    console.log(userData);\n    $.ajax({\n      method: \"post\",\n      url: \"./signin-user\",\n      data: userData,\n      success: (response) => {\n        if (response.status) {\n          this.backdropToggle();\n          this.setState({ userData: response.userData });\n          this.setState({ userLoggedIn: true });\n          this.verifyUserLogin();\n          <Redirect push to=\"./\" />;\n        } else {\n          this.backdropToggle();\n          this.setState({\n            snackbar: {\n              openSnackbar: true,\n              msg: `Can't sign in : ${response.errorMsg}`,\n              type: \"error\",\n              position: {\n                vertical: \"center\",\n                horizontal: \"top\",\n              },\n            },\n          });\n        }\n      },\n    });\n  };\n\n  logoutUser = () => {\n    this.setState({ userLoggedIn: false, userData: null });\n    window.localStorage.setItem(clientStorageKey, \"null\");\n    window.location.reload();\n  };\n\n  getLoggedInUserData = () => {\n    return JSON.parse(window.localStorage.getItem(clientStorageKey));\n  };\n\n  createUserMemo = (memoData) => {\n    this.backdropToggle();\n    memoData = this.encryptObj(memoData);\n    var userData = this.getLoggedInUserData();\n    Object.assign(userData, memoData);\n    console.log(userData);\n    $.ajax({\n      method: \"post\",\n      url: \"./create-user-memo\",\n      data: userData,\n      success: (response) => {\n        this.backdropToggle();\n        if (response.status) {\n          this.setState({\n            snackbar: {\n              openSnackbar: true,\n              msg: response.firstMemo ? \"Successfully saved your first memo.!\":\"Successfully saved your memo.!\",\n              type: \"success\",\n              position: {\n                vertical: \"left\",\n                horizontal: \"bottom\",\n              },\n            },\n          });\n        } else {\n          this.setState({\n            snackbar: {\n              openSnackbar: true,\n              msg: \"Oops..! Something went wrong, Try again.\",\n              type: \"error\",\n              position: {\n                vertical: \"left\",\n                horizontal: \"bottom\",\n              },\n            },\n          });\n        }\n      },\n    });\n  };\n\n  updateUserMemo = (userId, memoId, memoData) => {\n    alert(\"updateUserMemo\");\n  };\n\n  getUserMemo = (userId, memoId) => {\n    alert(\"editUserMemo\");\n  };\n\n  dltUserMemo = (userId, memoId) => {\n    alert(\"dltUserMemo\");\n  };\n\n  editUserMemo = (userId, memoId) => {\n    alert(\"editUserMemo\");\n  };\n\n  SnackbarClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n\n    this.setState({ snackbar: { openSnackbar: false } });\n  };\n\n  verifyUserLogin = () => {\n    let userData = this.state.userData;\n    let userLocalStorage = JSON.parse(\n      window.localStorage.getItem(clientStorageKey)\n    );\n    console.log(userData);\n    if (userLocalStorage) {\n      console.log(userData);\n      this.setState({\n        userData: userLocalStorage,\n        userLoggedIn: true,\n      });\n      console.log(\"seting state\");\n    } else {\n      window.localStorage.setItem(clientStorageKey, JSON.stringify(userData));\n    }\n    console.log(this.state.userData);\n  };\n\n  componentDidMount = () => {\n    this.verifyUserLogin();\n  };\n\n  render() {\n    console.log(JSON.parse(window.localStorage.getItem(clientStorageKey)));\n    console.log(this.state.userLoggedIn);\n\n    return (\n      <Router>\n        {/* Backdrop */}\n        <Backdrop style={{ zIndex: 999999 }} open={this.state.backdropOpen}>\n          <CircularProgress color=\"inherit\" />\n        </Backdrop>\n        {/* Alert a snackbar */}\n        {this.state.snackbar.openSnackbar ? (\n          <Snackbar\n            open={this.state.snackbar.openSnackbar}\n            autoHideDuration={6000}\n            onClose={this.SnackbarClose}\n            anchorOrigin={this.state.snackbar.position}\n          >\n            <Alert\n              onClose={this.SnackbarClose}\n              severity={this.state.snackbar.type}\n            >\n              {this.state.snackbar.msg}\n            </Alert>\n          </Snackbar>\n        ) : null}\n        <Switch>\n          <Route exact path=\"/\" component={SignIn}>\n            {this.state.userLoggedIn ? (\n              <HomeViewMemos\n                createUserMemo={this.createUserMemo}\n                logoutUser={this.logoutUser}\n              />\n            ) : (\n              <Redirect push to=\"./signup\" />\n            )}\n          </Route>\n          <Route path=\"/signin\">\n            {this.state.userLoggedIn ? (\n              <Redirect push to=\"./\" />\n            ) : (\n              <SignIn signInUser={this.signInUser} />\n            )}\n          </Route>\n          <Route path=\"/signup\">\n            {this.state.userLoggedIn ? (\n              <Redirect push to=\"./\" />\n            ) : (\n              <SignUp signUpUser={this.signUpUser} />\n            )}\n          </Route>\n          <Route path=\"/my-memos\">\n            <HomeViewMemos logoutUser={this.logoutUser} />\n          </Route>\n          <Route path=\"/my-profile\">\n            <MyProfile />\n          </Route>\n          <Route path=\"/about-us\">\n            <AboutUs />\n          </Route>\n          <Route path=\"/view-memo/:id\">\n            <ViewMemo />\n          </Route>\n          <Route path=\"/edit-memo/:id\">\n            <EditMemo />\n          </Route>\n        </Switch>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}