{"version":3,"sources":["Components/SignIn.js","Components/SignUp.js","Components/TemporaryDrawer.js","Components/CreateMemo.js","Components/HomeViewMemos.js","Components/AboutUs.js","Components/EditMemo.js","Components/ViewMemo.js","Components/NotFound.js","App.js","index.js"],"names":["Copyright","Typography","variant","color","align","Link","href","Date","getFullYear","createMuiTheme","palette","type","useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","secondary","main","form","width","submit","SignIn","props","classes","useForm","reValidateMode","register","handleSubmit","errors","formState","Container","component","maxWidth","CssBaseline","className","Avatar","onSubmit","formData","signInUser","TextField","fullWidth","id","label","autoComplete","autoFocus","required","pattern","error","email","helperText","minLength","password","Button","Grid","container","justify","item","Box","mt","SignUp","signUpUser","xs","sm","firstName","lastName","list","fullList","profileSection","height","justifyContent","padding","bgImage","backgroundImage","filter","backgroundPosition","backgroundRepeat","backgroundSize","profileIconStyles","root","orange","getContrastText","deepOrange","purple","deepPurple","small","large","TemporaryDrawer","anchor","profileIconClasses","React","useState","top","left","bottom","right","state","setState","history","useHistory","toggleDrawer","open","event","key","useEffect","active","document","getElementById","click","Fragment","style","hidden","onClick","Drawer","onClose","clsx","role","onKeyDown","List","Divider","ListItem","push","button","ListItemIcon","ListItemText","primary","disabled","Badge","badgeContent","appBar","position","title","marginLeft","flex","devider","Transition","forwardRef","ref","Slide","direction","FullScreenDialog","setOpen","textAreaHeight","setTextAreaHeight","mdScrollable","setMdScrollable","textAreaContent","setTextAreaContent","defaultValues","memoType","modified","setValue","setTimeout","clientHeight","handleClose","Dialog","fullScreen","TransitionComponent","createUserMemo","AppBar","Toolbar","Tooltip","arrow","IconButton","edge","aria-label","startIcon","paddingBottom","memoTitle","onChange","e","target","value","shouldValidate","textAlign","rows","multiline","$","val","updateMarkdown","memoBody","Switch","checked","overflowY","changePreviewScrollable","Paper","minHeight","overflowX","paddingLeft","children","FormControl","formControl","InputLabel","Select","defaultValue","labelId","MenuItem","text","marginBottom","subheader","background","grow","flexGrow","fabButton","zIndex","BottomAppBar","drawer","setDrawer","createMemo","setCreateMemo","anchorEl","setAnchorEl","Array","memos","setMemos","handleMenuClose","userData","getLoggedInUserData","ajax","url","data","userId","method","success","allMemos","square","gutterBottom","ListSubheader","map","itm","memoId","memoDate","decryptToOrgObj","substring","window","location","ListItemAvatar","alt","charAt","toUpperCase","whiteSpace","overflow","textOverflow","Fab","aria-controls","aria-aria-haspopup","currentTarget","keepMounted","Boolean","logoutUser","footer","grey","StickyFooter","prefersDarkMode","useMediaQuery","useMemo","ThemeProvider","addMemoTo","setAddMemoTo","memoHeading","setMemoHeading","switchHandler","console","log","updateUserMemo","Alert","elevation","message","severity","editMemo","setEditMemo","snackBar","setSnackBar","memoData","setMemoData","openAlert","setOpenAlert","handleAlertClose","handleSnackBarClose","reason","lastIndexOf","fontSize","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","showSnackBar","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","dltUserMemo","wrapper","NotFound","CryptoJS","require","store","clientStorageKey","encKey","App","BackdropClose","backdropOpen","backdropToggle","encryptObj","obj","encObj","Object","keys","AES","encrypt","toString","encUnSaltStr","str","enc","Utf8","parse","iv","words","sigBytes","decObj","decrypt","replace","userEmail","response","status","userLoggedIn","verifyUserLogin","snackbar","openSnackbar","msg","errorMsg","remove","reload","get","assign","firstMemo","getUserMemo","alert","SnackbarClose","userLocalStorage","set","componentDidMount","myMemos","Backdrop","this","CircularProgress","exact","path","to","Component","ReactDOM","render"],"mappings":"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","file":"static/js/main.f0c75512.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Link from \"@material-ui/core/Link\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\n\nimport { useForm } from \"react-hook-form\";\nimport { createMuiTheme } from \"@material-ui/core/styles\";\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {\"Copyright © \"}\n      <Link color=\"inherit\" href=\"./\">\n        Secure Memo\n      </Link>{\" \"}\n      {new Date().getFullYear()}\n      {\".\"}\n    </Typography>\n  );\n}\n\nconst darkTheme = createMuiTheme({\n  palette: {\n    type: \"dark\",\n  },\n});\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport default function SignIn(props) {\n  const classes = useStyles();\n  var emailPattern = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm({ reValidateMode: \"onChange\" });\n  const onSubmit = (formData) => {\n    props.signInUser(formData);\n  };\n  \n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign in\n        </Typography>\n        <form className={classes.form} onSubmit={handleSubmit(onSubmit)}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            fullWidth\n            id=\"email\"\n            label=\"Email Address\"\n            autoComplete=\"off\"\n            autoFocus\n            {...register(\"email\", {\n              required: true,\n              pattern: emailPattern,\n            })}\n            error={errors.email ? true : false}\n            helperText={\n              errors.email\n                ? errors.email.type === \"required\"\n                  ? \"Email address is required.\"\n                  : \"Type a valid email address.\"\n                : \"Type your email address.\"\n            }\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            fullWidth\n            label=\"Password\"\n            type=\"password\"\n            id=\"password\"\n            autoComplete=\"off\"\n            {...register(\"password\", { required: true, minLength: 8 })}\n            error={errors.password ? true : false}\n            helperText={\n              errors.password\n                ? errors.password.type === \"required\"\n                  ? \"Password is required.\"\n                  : \"Minimum lenght is 8.\"\n                : \"Type your password.\"\n            }\n          />\n          {/* <FormControlLabel\n            control={<Checkbox value=\"remember\" color=\"primary\" />}\n            label=\"Remember me\"\n          /> */}\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Sign In\n          </Button>\n          <Grid container justify=\"flex-end\">\n            {/* <Grid item xs>\n              <Link href=\"\" aria-disabled variant=\"body2\">\n                Forgot password?\n              </Link>\n            </Grid> */}\n            <Grid item>\n              <Link href=\"/signup\" variant=\"body2\">\n                {\"Don't have an account? Sign Up\"}\n              </Link>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n      <Box mt={8}>\n        <Copyright />\n      </Box>\n    </Container>\n  );\n}\n","import React, { useState } from \"react\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Link from \"@material-ui/core/Link\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\n\nimport { useForm } from \"react-hook-form\";\nimport { FormatIndentIncreaseTwoTone } from \"@material-ui/icons\";\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {\"Copyright © \"}\n      <Link color=\"inherit\" href=\"./\">\n        Secure Memo\n      </Link>{\" \"}\n      {new Date().getFullYear()}\n      {\".\"}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\n\nexport default function SignUp(props) {\n  const classes = useStyles();\n  var emailPattern = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm({ reValidateMode: \"onChange\" });\n\n  const onSubmit = (formData) => {\n    props.signUpUser(formData)\n  };\n  \n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign up\n        </Typography>\n        <form className={classes.form} onSubmit={handleSubmit(onSubmit)}>\n          <Grid container spacing={2}>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                autoComplete=\"fname\"\n                variant=\"outlined\"\n                fullWidth\n                id=\"firstName\"\n                label=\"First Name\"\n                autoFocus\n                autoComplete=\"off\"\n                {...register(\"firstName\", { required: true, minLength: 3 })}\n                error={errors.firstName ? true : false}\n                helperText={\n                  errors.firstName\n                    ? errors.firstName.type === \"required\"\n                      ? \"First name is required.\"\n                      : \" Minimum lenght 3.\"\n                    : \"Type your first name.\"\n                }\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                variant=\"outlined\"\n                fullWidth\n                id=\"lastName\"\n                label=\"Last Name\"\n                autoComplete=\"off\"\n                {...register(\"lastName\", { required: true, minLength: 3 })}\n                error={errors.lastName ? true : false}\n                helperText={\n                  errors.lastName\n                    ? errors.lastName.type === \"required\"\n                      ? \"Last name is required.\"\n                      : \" Minimum lenght 3.\"\n                    : \"Type your last name.\"\n                }\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                fullWidth\n                id=\"email\"\n                label=\"Email Address\"\n                autoComplete=\"off\"\n                {...register(\"email\", {\n                  required: true,\n                  pattern: emailPattern,\n                })}\n                error={errors.email ? true : false}\n                helperText={\n                  errors.email\n                    ? errors.email.type === \"required\"\n                      ? \"Email address is required.\"\n                      : \"Type a valid email address.\"\n                    : \"Type your email address.\"\n                }\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                fullWidth\n                label=\"Password\"\n                type=\"password\"\n                id=\"password\"\n                autoComplete=\"off\"\n                {...register(\"password\", { required: true, minLength: 8 })}\n                error={errors.password ? true : false}\n                helperText={\n                  errors.password\n                    ? errors.password.type === \"required\"\n                      ? \"Password is required.\"\n                      : \"Minimum lenght is 8.\"\n                    : \"Type your password.\"\n                }\n              />\n            </Grid>\n            {/* <Grid item xs={12}>\n              <FormControlLabel\n                control={<Checkbox value=\"allowExtraEmails\" color=\"primary\" />}\n                label=\"I want to receive inspiration, marketing promotions and updates via email.\"\n              />\n            </Grid> */}\n          </Grid>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Sign Up\n          </Button>\n          <Grid container justify=\"flex-end\">\n            <Grid item>\n              <Link href=\"/signin\" variant=\"body2\">\n                Already have an account? Sign in\n              </Link>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n      <Box mt={5}>\n        <Copyright />\n      </Box>\n    </Container>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport clsx from \"clsx\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport Button from \"@material-ui/core/Button\";\nimport List from \"@material-ui/core/List\";\nimport Divider from \"@material-ui/core/Divider\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport InboxIcon from \"@material-ui/icons/MoveToInbox\";\nimport MailIcon from \"@material-ui/icons/Mail\";\nimport AllInboxIcon from \"@material-ui/icons/AllInbox\";\nimport VisibilityOffIcon from \"@material-ui/icons/VisibilityOff\";\nimport LockIcon from \"@material-ui/icons/Lock\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport { deepOrange, deepPurple } from \"@material-ui/core/colors\";\nimport InfoIcon from \"@material-ui/icons/Info\";\nimport { useHistory } from \"react-router-dom\";\nimport Badge from \"@material-ui/core/Badge\";\n\nconst useStyles = makeStyles({\n  list: {\n    width: 250,\n  },\n  fullList: {\n    width: \"auto\",\n  },\n  profileSection: {\n    width: \"100%\",\n    height: \"10rem\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    padding: \"0 !important\",\n  },\n  bgImage: {\n    backgroundImage: \"url('../profile-bg.jpg')\",\n    filter: \"opacity(75%)\",\n    height: \"100%\",\n    width: \"100%\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    display: \"flex\",\n    backgroundPosition: \"center\",\n    backgroundRepeat: \"no-repeat\",\n    backgroundSize: \"cover\",\n  },\n});\n\nconst profileIconStyles = makeStyles((theme) => ({\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(1),\n    },\n  },\n  orange: {\n    color: theme.palette.getContrastText(deepOrange[500]),\n    backgroundColor: deepOrange[500],\n  },\n  purple: {\n    color: theme.palette.getContrastText(deepPurple[500]),\n    backgroundColor: deepPurple[500],\n  },\n  small: {\n    width: theme.spacing(3),\n    height: theme.spacing(3),\n  },\n  large: {\n    width: theme.spacing(7),\n    height: theme.spacing(7),\n  },\n}));\n\nexport default function TemporaryDrawer(props) {\n  const anchor = props.anchor;\n  const classes = useStyles();\n  const profileIconClasses = profileIconStyles();\n  const [state, setState] = React.useState({\n    top: false,\n    left: false,\n    bottom: false,\n    right: false,\n  });\n  const history = useHistory();\n\n  const toggleDrawer = (anchor, open) => (event) => {\n    if (\n      event.type === \"keydown\" &&\n      (event.key === \"Tab\" || event.key === \"Shift\")\n    ) {\n      return;\n    }\n\n    setState({ ...state, [anchor]: open });\n  };\n\n  const list = (anchor) => (\n    <div\n      className={clsx(classes.list, {\n        [classes.fullList]: anchor === \"top\" || anchor === \"bottom\",\n      })}\n      role=\"presentation\"\n      onClick={toggleDrawer(anchor, false)}\n      onKeyDown={toggleDrawer(anchor, false)}\n    >\n      <List className={classes.profileSection}>\n        <div className={classes.bgImage}>\n          <Avatar\n            className={[profileIconClasses.orange, profileIconClasses.large]}\n          >\n            OP\n          </Avatar>\n        </div>\n      </List>\n      <Divider />\n      <List>\n        <ListItem onClick={()=>{ history.push(\"/all-memos\") }} button key=\"All Memos\">\n          <ListItemIcon>\n            <AllInboxIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"All Memos\" />\n        </ListItem>\n        <ListItem disabled=\"true\" button key=\"Hidden Memos\">\n          <ListItemIcon>\n            <VisibilityOffIcon />\n          </ListItemIcon>\n          <Badge\n            badgeContent={\"Coming soon\"}\n            color=\"primary\"\n            variant=\"standard\"\n          >\n            <ListItemText primary=\"Hidden Memos\" />\n          </Badge>\n        </ListItem>\n        <ListItem disabled=\"true\" button key=\"Secure Memos\">\n          <ListItemIcon>\n            <LockIcon />\n          </ListItemIcon>\n          <Badge\n            badgeContent={\"Coming soon\"}\n            color=\"primary\"\n            variant=\"standard\"\n          >\n            <ListItemText primary=\"Secure Memos\" />\n          </Badge>\n        </ListItem>\n        <Divider />\n        <ListItem\n          onClick={() => {\n            history.push(\"/about-us\");\n          }}\n          button\n          key=\"Secure Memos\"\n        >\n          <ListItemIcon>\n            <InfoIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"About Us\" />\n        </ListItem>\n      </List>\n    </div>\n  );\n  useEffect(() => {\n    if (props.active) {\n      document.getElementById(\"openDrawer\").click();\n    }\n  }, []);\n  return (\n    <div>\n      {\n        <React.Fragment key={anchor}>\n          <Button\n            style={{ display: \"none\" }}\n            hidden\n            id=\"openDrawer\"\n            onClick={toggleDrawer(anchor, true)}\n          >\n            {anchor}\n          </Button>\n          <Drawer\n            anchor={anchor}\n            open={state[anchor]}\n            onClose={toggleDrawer(anchor, false)}\n          >\n            {list(anchor)}\n          </Drawer>\n        </React.Fragment>\n      }\n    </div>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport List from \"@material-ui/core/List\";\nimport Divider from \"@material-ui/core/Divider\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport Slide from \"@material-ui/core/Slide\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport AllInboxIcon from \"@material-ui/icons/AllInbox\";\nimport VisibilityOffIcon from \"@material-ui/icons/VisibilityOff\";\nimport LockIcon from \"@material-ui/icons/Lock\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport Paper from \"@material-ui/core/Paper\";\nimport ReactMarkdown from \"react-markdown\";\nimport Switch from \"@material-ui/core/Switch\";\nimport $ from \"jquery\";\nimport { Badge } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    position: \"relative\",\n  },\n  title: {\n    marginLeft: theme.spacing(2),\n    flex: 1,\n  },\n  devider: {\n    maxWidth: \"95%\",\n    margin: \"auto\",\n  },\n}));\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport default function FullScreenDialog(props) {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const [textAreaHeight, setTextAreaHeight] = React.useState(null);\n  const [mdScrollable, setMdScrollable] = React.useState(false);\n  const [textAreaContent, setTextAreaContent] = React.useState(\"\");\n  const {\n    register,\n    setValue,\n    handleSubmit,\n    formState: { errors },\n  } = useForm({\n    reValidateMode: \"onChange\",\n    defaultValues: { memoType: \"allMemos\", modified: \"false\" },\n  });\n\n  const onSubmit = (formData) => {\n    props.createUserMemo(formData);\n    handleClose();\n  };\n\n  const changePreviewScrollable = (event) => {\n    setMdScrollable(event.target.checked);\n    if (mdScrollable) {\n      document.getElementById(\"markdown-preview\").style.overflowY = \"visible\";\n      document.getElementById(\"markdown-preview\").style.height = \"auto\";\n    } else {\n      document.getElementById(\"markdown-preview\").style.overflowY = \"scroll\";\n      document.getElementById(\"markdown-preview\").style.height = textAreaHeight;\n    }\n  };\n\n  useEffect(() => {\n    setOpen(true);\n    setTimeout(() => {\n      setTextAreaHeight(\n        document.getElementById(\"bodyTextarea\").clientHeight +\n          (document.getElementById(\"bodyTextarea\").clientHeight * 2.5) / 10 +\n          \"px\"\n      );\n    }, 500);\n  }, []);\n\n  const handleClose = () => {\n    document.getElementById(\"addBtn\").click();\n    setOpen(false);\n  };\n\n  const updateMarkdown = (e) => {\n    setTextAreaContent($(\"#bodyTextarea\").val());\n    setTextAreaContent(e.target.value);\n  };\n\n  const switchHandler = (event) => {\n    setMdScrollable(document.getElementById(\"mdSwitch\").checked);\n    changePreviewScrollable(event);\n  };\n\n  return (\n    <div>\n      <Dialog\n        fullScreen\n        open={open}\n        onClose={handleClose}\n        TransitionComponent={Transition}\n      >\n        <form\n          className={classes.form}\n          autoComplete=\"off\"\n          onSubmit={handleSubmit(onSubmit)}\n        >\n          <input hidden=\"true\" ref={register(\"modified\")} />\n          <AppBar className={classes.appBar}>\n            <Toolbar>\n              <Tooltip title=\"Cancel\" arrow>\n                <IconButton\n                  edge=\"start\"\n                  color=\"inherit\"\n                  onClick={handleClose}\n                  aria-label=\"close\"\n                >\n                  <CloseIcon />\n                </IconButton>\n              </Tooltip>\n              <Typography variant=\"h6\" className={classes.title}>\n                Create a new Memo\n              </Typography>\n              <Tooltip title=\"Save Memo\" arrow>\n                <Button\n                  autoFocus\n                  color=\"inherit\"\n                  variant=\"outlined\"\n                  startIcon={<SaveIcon />}\n                  type=\"submit\"\n                >\n                  save\n                </Button>\n              </Tooltip>\n            </Toolbar>\n          </AppBar>\n          <List>\n            <ListItem style={{ paddingBottom: 0 }}>\n              <ListItemText primary=\"Memo Heading\" />\n            </ListItem>\n            <ListItem>\n              <TextField\n                id=\"outlined-basic\"\n                label=\"Memo Heading\"\n                variant=\"outlined\"\n                fullWidth\n                ref={register(\"memoTitle\", { required: true, minLength: 10 })}\n                error={errors.memoTitle ? true : false}\n                autoFocus={errors.memoTitle ? true : false}\n                onChange={(e) => {\n                  setValue(\"memoTitle\", e.target.value, {\n                    shouldValidate: true,\n                  });\n                }}\n                helperText={\n                  errors.memoTitle\n                    ? errors.memoTitle.type === \"required\"\n                      ? \"Memo Title is required.\"\n                      : \"Memo Title minimum lenght is 10.\"\n                    : \"Memo Title here.\"\n                }\n              />\n            </ListItem>\n            <Divider className={classes.devider} />\n            <ListItem style={{ paddingBottom: 0 }}>\n              <ListItemText primary=\"Memo Body\" />\n              <p style={{ textAlign: \"right\" }}>\n                <small>* Markdown enabled</small>\n              </p>\n            </ListItem>\n            <ListItem>\n              <TextField\n                id=\"bodyTextarea\"\n                label=\"Memo Body\"\n                variant=\"outlined\"\n                rows=\"7\"\n                multiline={true}\n                value={textAreaContent}\n                fullWidth\n                aria-label=\"textarea\"\n                onChange={(e) => {\n                  updateMarkdown(e);\n                  setValue(\"memoBody\", e.target.value, {\n                    shouldValidate: true,\n                  });\n                }}\n                ref={register(\"memoBody\", {\n                  required: true,\n                  minLength: 12,\n                })}\n                autoFocus={errors.memoBody ? true : false}\n                error={errors.memoBody ? true : false}\n                helperText={\n                  errors.memoBody\n                    ? errors.memoBody.type === \"required\"\n                      ? \"Memo body is required.\"\n                      : \"Memo body Minimum lenght is 12.\"\n                    : \"Memo Body here.\"\n                }\n              />\n            </ListItem>\n            <ListItem style={{ paddingBottom: 0 }}>\n              <ListItemText primary=\"Memo Body Preview\" />\n              <p style={{ textAlign: \"right\" }}>\n                Scrollable\n                <Switch\n                  id=\"mdSwitch\"\n                  onChange={switchHandler}\n                  color=\"primary\"\n                  checked={mdScrollable}\n                />\n              </p>\n            </ListItem>\n            <ListItem>\n              <Paper\n                id=\"markdown-preview\"\n                variant=\"outlined\"\n                style={{\n                  minHeight: textAreaHeight,\n                  margin: \".13rem\",\n                  width: \"100vw\",\n                  overflowX: \"scroll\",\n                  overflowY: \"visible\",\n                  paddingLeft: \".7rem\",\n                }}\n              >\n                <ReactMarkdown children={textAreaContent} />\n              </Paper>\n            </ListItem>\n            <Divider className={classes.devider} />\n            <ListItem style={{ paddingBottom: 0 }}>\n              <ListItemText primary=\"Add Memo to\" />\n            </ListItem>\n            <ListItem>\n              <FormControl\n                variant=\"outlined\"\n                fullWidth\n                className={classes.formControl}\n              >\n                <InputLabel id=\"demo-simple-select-outlined-label\">\n                  Add to\n                </InputLabel>\n                <Select\n                  defaultValue=\"allMemos\"\n                  labelId=\"demo-simple-select-outlined-label\"\n                  id=\"demo-simple-select-outlined\"\n                  label=\"Add to\"\n                  onChange={(e) => {\n                    setValue(\"memoType\", e.target.value, {\n                      shouldValidate: true,\n                    });\n                  }}\n                  {...register(\"memoType\", { required: true })}\n                  autoFocus={errors.memoType ? true : false}\n                  error={errors.memoType ? true : false}\n                  helperText=\"Memo will add to all memos section by default.\"\n                >\n                  <MenuItem value=\"allMemos\">\n                    <AllInboxIcon /> All Memos\n                  </MenuItem>\n                  <MenuItem disabled=\"true\" value=\"hiddenMemos\">\n                    <Badge\n                      badgeContent={\"Coming soon\"}\n                      color=\"primary\"\n                      variant=\"standard\"\n                    >\n                      <VisibilityOffIcon /> Hidden\n                    </Badge>\n                  </MenuItem>\n                  <MenuItem disabled=\"true\" value=\"secureMemos\">\n                    <Badge\n                      badgeContent={\"Coming soon\"}\n                      color=\"primary\"\n                      variant=\"standard\"\n                    >\n                      <LockIcon /> Secure\n                    </Badge>\n                  </MenuItem>\n                </Select>\n              </FormControl>\n            </ListItem>\n            <Divider className={classes.devider} />\n          </List>\n        </form>\n      </Dialog>\n    </div>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Fab from \"@material-ui/core/Fab\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport MoreIcon from \"@material-ui/icons/MoreVert\";\nimport TemporaryDrawer from \"./TemporaryDrawer\";\nimport CreateMemo from \"./CreateMemo\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nconst clientStorageKey = \"SecureMemoStorage\";\nimport $ from \"jquery\";\n\n// {messages.map(({ id, primary, secondary, person }) => (\n//   <React.Fragment key={id}>\n//     {id === 1 && (\n//       <ListSubheader className={classes.subheader}>\n//         Today\n//       </ListSubheader>\n//     )}\n//     {id === 3 && (\n//       <ListSubheader className={classes.subheader}>\n//         Yesterday\n//       </ListSubheader>\n//     )}\n//     <ListItem button>\n//       <ListItemAvatar>\n//         <Avatar alt=\"Profile Picture\">\n//           {primary.charAt(0).toUpperCase()}\n//         </Avatar>\n//       </ListItemAvatar>\n//       <ListItemText\n//         onClick={() => {\n//           window.location.href = \"./view-memo/1234\";\n//         }}\n//         primary={primary}\n//         secondary={secondary}\n//       />\n//     </ListItem>\n//   </React.Fragment>\n// ))}\n\nconst useStyles = makeStyles((theme) => ({\n  text: {\n    padding: theme.spacing(2, 2, 0),\n  },\n  paper: {\n    paddingBottom: 50,\n  },\n  list: {\n    marginBottom: theme.spacing(2),\n    minHeight: \"80vh\",\n  },\n  subheader: {\n    backgroundColor: theme.palette.background.paper,\n  },\n  appBar: {\n    top: \"auto\",\n    bottom: 0,\n  },\n  grow: {\n    flexGrow: 1,\n  },\n  fabButton: {\n    position: \"absolute\",\n    zIndex: 1,\n    top: -30,\n    left: 0,\n    right: 0,\n    margin: \"0 auto\",\n  },\n}));\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nexport default function BottomAppBar(props) {\n  const classes = useStyles();\n  const [drawer, setDrawer] = useState(false);\n  const [createMemo, setCreateMemo] = useState(false);\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [memos, setMemos] = useState(new Array());\n\n  const handleMenuClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleMenuClose = () => {\n    setAnchorEl(null);\n  };\n\n  React.useEffect(() => {\n    let userData = props.getLoggedInUserData();\n    $.ajax({\n      url: \"./get-user-memos\",\n      data: {\n        userId: userData.userId,\n        memoType: \"allMemos\",\n      },\n      method: \"post\",\n      success: (allMemos) => {\n        setMemos(allMemos);\n      },\n    });\n  });\n\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <Paper square className={classes.paper}>\n        <Typography className={classes.text} variant=\"h5\" gutterBottom>\n          All Memos\n        </Typography>\n        <List className={classes.list}>\n          <ListSubheader className={classes.subheader}>Today</ListSubheader>\n          {memos.map((itm) => {\n            let memoId = itm.memoId;\n            let memoDate = itm.memoDate;\n            delete itm.memoId;\n            delete itm.memoDate;\n            itm = props.decryptToOrgObj(itm);\n            itm.memoBody = itm.memoBody.substring(0, 45);\n            return (\n              <ListItem\n                onClick={() => {\n                  window.location.href = `./view-memo/${memoId}`;\n                }}\n                button\n              >\n                <ListItemAvatar>\n                  <Avatar alt=\"Profile Picture\">\n                    {itm.memoTitle.charAt(0).toUpperCase()}\n                  </Avatar>\n                </ListItemAvatar>\n                <ListItemText\n                  style={{\n                    whiteSpace: \"nowrap\",\n                    overflow: \"hidden\",\n                    textOverflow: \"ellipsis\",\n                    maxWidth: \"65vw\",\n                  }}\n                  primary={itm.memoTitle}\n                  secondary={itm.memoBody}\n                />\n              </ListItem>\n            );\n          })}\n        </List>\n      </Paper>\n      <AppBar position=\"fixed\" color=\"primary\" className={classes.appBar}>\n        <Toolbar>\n          <IconButton\n            onClick={() => {\n              drawer ? setDrawer(false) : setDrawer(true);\n              document.getElementById(\"openDrawer\").click();\n            }}\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n          >\n            <MenuIcon />\n          </IconButton>\n          <Tooltip title=\"Create new Memo\" arrow>\n            <Fab\n              id=\"addBtn\"\n              color=\"secondary\"\n              aria-label=\"add\"\n              className={classes.fabButton}\n              onClick={() => {\n                createMemo\n                  ? setTimeout(() => {\n                      setCreateMemo(false);\n                    }, 500)\n                  : setCreateMemo(true);\n              }}\n            >\n              <AddIcon />\n            </Fab>\n          </Tooltip>\n          <div className={classes.grow} />\n          <Tooltip title=\"Search\" arrow>\n            <IconButton color=\"inherit\">\n              <SearchIcon />\n            </IconButton>\n          </Tooltip>\n          <Tooltip title=\"Options\" arrow>\n            <IconButton\n              aria-controls=\"simple-menu\"\n              edge=\"end\"\n              color=\"inherit\"\n              aria-aria-haspopup=\"true\"\n              onClick={handleMenuClick}\n            >\n              <MoreIcon />\n            </IconButton>\n          </Tooltip>\n          <Menu\n            id=\"simple-menu\"\n            anchorEl={anchorEl}\n            keepMounted\n            open={Boolean(anchorEl)}\n            onClose={handleMenuClose}\n          >\n            <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\n            <MenuItem onClick={handleMenuClose}>My account</MenuItem>\n            <MenuItem\n              onClick={() => {\n                handleMenuClose();\n                props.logoutUser();\n              }}\n            >\n              Logout\n            </MenuItem>\n          </Menu>\n        </Toolbar>\n      </AppBar>\n      <TemporaryDrawer anchor=\"left\" active={drawer} />\n      {createMemo ? <CreateMemo createUserMemo={props.createUserMemo} /> : null}\n    </React.Fragment>\n  );\n}\n","import React from \"react\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport Link from \"@material-ui/core/Link\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\">\n      {\"Copyright © \"}\n      <Link color=\"inherit\" href=\"./\">\n        Secure Memo\n      </Link>{\" \"}\n      {new Date().getFullYear()}\n      {\".\"}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    minHeight: \"100vh\",\n  },\n  main: {\n    marginTop: theme.spacing(8),\n    marginBottom: theme.spacing(2),\n  },\n  footer: {\n    padding: theme.spacing(3, 2),\n    marginTop: \"auto\",\n    backgroundColor:\n      theme.palette.type === \"dark\"\n        ? theme.palette.grey[200]\n        : theme.palette.grey[800],\n  },\n}));\n\nexport default function StickyFooter() {\n  const classes = useStyles();\n\n  const prefersDarkMode = useMediaQuery(\"(prefers-color-scheme: dark)\");\n\n  const theme = React.useMemo(\n    () =>\n      createMuiTheme({\n        palette: {\n          type: prefersDarkMode ? \"dark\" : \"light\",\n        },\n      }),\n    [prefersDarkMode]\n  );\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <div className={classes.root}>\n        <CssBaseline />\n        <Container component=\"main\" className={classes.main} maxWidth=\"sm\">\n          <Typography variant=\"h2\" component=\"h1\" gutterBottom>\n            <Link href=\"./\" style={{color:\"white\"}}>Secure Memo</Link>\n          </Typography>\n          <Typography variant=\"h5\" component=\"h2\" gutterBottom>\n            {\"This website created and maintained by \"}\n            <Link href=\"https://github.com/Muhammed-Rahif\" variant=\"h5\" style={{color:\"white\"}}>\n              <b>Muhammed Rahif.</b>\n            </Link>\n            <br />\n          </Typography>\n          <Typography variant=\"subtitle1\" component=\"h3\">\n            {\"I hope you will contact me for any inquiries...\"}\n          </Typography>\n          <Typography variant=\"body1\">Have a nice day.</Typography>\n        </Container>\n        <footer className={classes.footer}>\n          <Container maxWidth=\"sm\">\n            <Typography variant=\"body1\">\n              Made with{\" \"}\n              <Link variant=\"body1\" href=\"https://material-ui.com/\" style={{color:\"white\"}}>\n                React Material UI\n              </Link>\n            </Typography>\n            <Copyright />\n          </Container>\n        </footer>\n      </div>\n    </ThemeProvider>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport List from \"@material-ui/core/List\";\nimport Divider from \"@material-ui/core/Divider\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport Slide from \"@material-ui/core/Slide\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport AllInboxIcon from \"@material-ui/icons/AllInbox\";\nimport VisibilityOffIcon from \"@material-ui/icons/VisibilityOff\";\nimport LockIcon from \"@material-ui/icons/Lock\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport PublishIcon from \"@material-ui/icons/Publish\";\nimport Paper from \"@material-ui/core/Paper\";\nimport ReactMarkdown from \"react-markdown\";\nimport Switch from \"@material-ui/core/Switch\";\nimport { Badge } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    position: \"relative\",\n  },\n  title: {\n    marginLeft: theme.spacing(2),\n    flex: 1,\n  },\n  devider: {\n    maxWidth: \"95%\",\n    margin: \"auto\",\n  },\n}));\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport default function FullScreenDialog(props) {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  //   const [openSuccesSnackBar, setOpenSuccesSnackBar] = React.useState(false);\n  const [addMemoTo, setAddMemoTo] = React.useState(props.memoType);\n  const [textAreaHeight, setTextAreaHeight] = React.useState(null);\n  const [mdScrollable, setMdScrollable] = React.useState(false);\n  const [memoHeading, setMemoHeading] = React.useState(props.memoTitle);\n  const [textAreaContent, setTextAreaContent] = React.useState(props.memoBody);\n  const {\n    register,\n    setValue,\n    handleSubmit,\n    formState: { errors },\n  } = useForm({\n    reValidateMode: \"onChange\",\n    defaultValues: {\n      memoBody: props.memoBody,\n      memoTitle: props.memoTitle,\n      memoType: props.memoType,\n      modified: \"true\",\n      memoId: props.memoId,\n    },\n  });\n\n  const onSubmit = (formData) => {\n    console.log(formData);\n    props.updateUserMemo(formData);\n    handleClose();\n  };\n\n  const changePreviewScrollable = (event) => {\n    setMdScrollable(event.target.checked);\n    if (mdScrollable) {\n      document.getElementById(\"markdown-preview\").style.overflowY = \"visible\";\n      document.getElementById(\"markdown-preview\").style.height = \"auto\";\n    } else {\n      document.getElementById(\"markdown-preview\").style.overflowY = \"scroll\";\n      document.getElementById(\"markdown-preview\").style.height = textAreaHeight;\n    }\n  };\n\n  useEffect(() => {\n    setOpen(true);\n    setTimeout(() => {\n      setTextAreaHeight(\n        document.getElementById(\"bodyTextarea\").clientHeight +\n          (document.getElementById(\"bodyTextarea\").clientHeight * 2.5) / 10 +\n          \"px\"\n      );\n    }, 500);\n  }, []);\n\n  const handleClose = () => {\n    document.getElementById(\"editBtn\").click();\n    setOpen(false);\n  };\n\n  const handleSelectChange = (event) => {\n    setAddMemoTo(event.target.value);\n  };\n\n  const updateMarkdown = () => {\n    setTextAreaContent(document.getElementById(\"bodyTextarea\").value);\n  };\n\n  const switchHandler = (event) => {\n    setMdScrollable(document.getElementById(\"mdSwitch\").checked);\n    changePreviewScrollable(event);\n  };\n\n  return (\n    <div>\n      <Dialog\n        fullScreen\n        open={open}\n        onClose={handleClose}\n        TransitionComponent={Transition}\n      >\n        <form\n          className={classes.form}\n          autoComplete=\"off\"\n          onSubmit={handleSubmit(onSubmit)}\n        >\n          <input hidden=\"true\" ref={register(\"modified\")} />\n          <input hidden=\"true\" ref={register(\"memoId\")} />\n          <AppBar className={classes.appBar}>\n            <Toolbar>\n              <Tooltip title=\"Cancel\" arrow>\n                <IconButton\n                  edge=\"start\"\n                  color=\"inherit\"\n                  onClick={handleClose}\n                  aria-label=\"close\"\n                >\n                  <CloseIcon />\n                </IconButton>\n              </Tooltip>\n              <Typography variant=\"h6\" className={classes.title}>\n                Edit Memo\n              </Typography>\n              <Tooltip title=\"Update Memo\" arrow>\n                <Button\n                  autoFocus\n                  color=\"inherit\"\n                  variant=\"outlined\"\n                  startIcon={<PublishIcon />}\n                  type=\"submit\"\n                >\n                  update\n                </Button>\n              </Tooltip>\n            </Toolbar>\n          </AppBar>\n          <List>\n            <ListItem style={{ paddingBottom: 0 }}>\n              <ListItemText primary=\"Memo Heading\" />\n            </ListItem>\n            <ListItem>\n              <TextField\n                id=\"outlined-basic\"\n                label=\"Memo Heading\"\n                variant=\"outlined\"\n                fullWidth\n                value={memoHeading}\n                ref={register(\"memoTitle\", { required: true, minLength: 10 })}\n                error={errors.memoTitle ? true : false}\n                autoFocus={errors.memoTitle ? true : false}\n                onChange={(e) => {\n                  setMemoHeading(e.target.value);\n                  setValue(\"memoTitle\", e.target.value, {\n                    shouldValidate: true,\n                  });\n                }}\n                helperText={\n                  errors.memoTitle\n                    ? errors.memoTitle.type === \"required\"\n                      ? \"Memo Title is required.\"\n                      : \"Memo Title minimum lenght is 10.\"\n                    : \"Memo Title here.\"\n                }\n              />\n            </ListItem>\n            <Divider className={classes.devider} />\n            <ListItem style={{ paddingBottom: 0 }}>\n              <ListItemText primary=\"Memo Body\" />\n              <p style={{ textAlign: \"right\" }}>\n                <small>* Markdown enabled</small>\n              </p>\n            </ListItem>\n            <ListItem>\n              <TextField\n                id=\"bodyTextarea\"\n                label=\"Memo Body\"\n                variant=\"outlined\"\n                rows=\"7\"\n                multiline={true}\n                fullWidth\n                aria-label=\"textarea\"\n                value={textAreaContent}\n                onChange={(e) => {\n                  updateMarkdown(e);\n                  setValue(\"memoBody\", e.target.value, {\n                    shouldValidate: true,\n                  });\n                }}\n                ref={register(\"memoBody\", {\n                  required: true,\n                  minLength: 12,\n                })}\n                autoFocus={errors.memoBody ? true : false}\n                error={errors.memoBody ? true : false}\n                helperText={\n                  errors.memoBody\n                    ? errors.memoBody.type === \"required\"\n                      ? \"Memo body is required.\"\n                      : \"Memo body Minimum lenght is 12.\"\n                    : \"Memo Body here.\"\n                }\n              />\n            </ListItem>\n            <Divider className={classes.devider} />\n            <ListItem style={{ paddingBottom: 0 }}>\n              <ListItemText primary=\"Memo Body Preview\" />\n              <p style={{ textAlign: \"right\" }}>\n                Scrollable\n                <Switch\n                  id=\"mdSwitch\"\n                  onChange={switchHandler}\n                  color=\"primary\"\n                  style={{ paddingBottom: 0 }}\n                  checked={mdScrollable}\n                  onClick={switchHandler}\n                />\n              </p>\n            </ListItem>\n            <ListItem>\n              <Paper\n                id=\"markdown-preview\"\n                variant=\"outlined\"\n                style={{\n                  minHeight: textAreaHeight,\n                  margin: \".13rem\",\n                  width: \"100vw\",\n                  overflowY: \"visible\",\n                  paddingLeft: \".7rem\",\n                }}\n              >\n                <ReactMarkdown children={textAreaContent} />\n              </Paper>\n            </ListItem>\n            <Divider className={classes.devider} />\n            <ListItem style={{ paddingBottom: 0 }}>\n              <ListItemText primary=\"Add Memo to\" />\n            </ListItem>\n            <ListItem>\n              <FormControl\n                variant=\"outlined\"\n                fullWidth\n                className={classes.formControl}\n              >\n                <InputLabel id=\"demo-simple-select-outlined-label\">\n                  Add to\n                </InputLabel>\n                <Select\n                  labelId=\"demo-simple-select-outlined-label\"\n                  id=\"demo-simple-select-outlined\"\n                  value={addMemoTo}\n                  onChange={handleSelectChange}\n                  label=\"Add to\"\n                >\n                  <MenuItem value=\"allMemos\">\n                    <AllInboxIcon /> All Memos\n                  </MenuItem>\n                  <MenuItem disabled=\"true\" value=\"hiddenMemos\">\n                    <Badge\n                      badgeContent={\"Coming soon\"}\n                      color=\"primary\"\n                      variant=\"standard\"\n                    >\n                      <VisibilityOffIcon /> Hidden\n                    </Badge>\n                  </MenuItem>\n                  <MenuItem disabled=\"true\" value=\"secureMemos\">\n                    <Badge\n                      badgeContent={\"Coming soon\"}\n                      color=\"primary\"\n                      variant=\"standard\"\n                    >\n                      <LockIcon /> Secure\n                    </Badge>\n                  </MenuItem>\n                </Select>\n              </FormControl>\n            </ListItem>\n            <Divider className={classes.devider} />\n          </List>\n        </form>\n      </Dialog>\n    </div>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Fab from \"@material-ui/core/Fab\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport MoreIcon from \"@material-ui/icons/MoreVert\";\nimport TemporaryDrawer from \"./TemporaryDrawer\";\nimport EditMemo from \"./EditMemo\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport ReactMarkdown from \"react-markdown\";\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport $ from \"jquery\";\n\nconst useStyles = makeStyles((theme) => ({\n  text: {\n    padding: theme.spacing(2, 2, 0),\n  },\n  paper: {\n    paddingBottom: 50,\n  },\n  list: {\n    marginBottom: theme.spacing(2),\n    minHeight: \"80vh\",\n    padding: \"1.5rem\",\n  },\n  subheader: {\n    backgroundColor: theme.palette.background.paper,\n  },\n  appBar: {\n    top: \"auto\",\n    bottom: 0,\n  },\n  grow: {\n    flexGrow: 1,\n  },\n  fabButton: {\n    position: \"absolute\",\n    zIndex: 1,\n    top: -30,\n    left: 0,\n    right: 0,\n    margin: \"0 auto\",\n  },\n}));\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nexport default function BottomAppBar(props) {\n  const classes = useStyles();\n  const [drawer, setDrawer] = useState(false);\n  const [editMemo, setEditMemo] = useState(false);\n  const [snackBar, setSnackBar] = useState(false);\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [memoData, setMemoData] = React.useState(\"\");\n  const [openAlert, setOpenAlert] = React.useState(false);\n\n  const handleAlertOpen = () => {\n    setOpenAlert(true);\n  };\n\n  const handleAlertClose = () => {\n    setOpenAlert(false);\n  };\n\n  const handleMenuClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleMenuClose = () => {\n    setAnchorEl(null);\n  };\n\n  const handleSnackBarClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n\n    setSnackBar(false);\n  };\n\n  const showSnackBar = (message, severity) => {\n    return (\n      <Snackbar\n        anchorOrigin={{ vertical: \"bottom\", horizontal: \"left\" }}\n        open={snackBar}\n        autoHideDuration={6000}\n        onClose={handleSnackBarClose}\n      >\n        <Alert onClose={handleSnackBarClose} severity={severity}>\n          {message}\n        </Alert>\n      </Snackbar>\n    );\n  };\n\n  useEffect(() => {\n    var memoId = window.location.href.substring(\n      window.location.href.lastIndexOf(\"/\") + 1\n    );\n    $.ajax({\n      url: \"/get-user-memo\",\n      data: {\n        userId: props.getLoggedInUserData().userId,\n        memoId: memoId,\n        memoType: \"allMemos\",\n      },\n      method: \"post\",\n      success: (memoData) => {\n        if (memoData.memoId) {\n          let memoId = memoData.memoId;\n          let memoDate = memoData.memoDate;\n          delete memoData.memoId;\n          delete memoData.memoDate;\n          memoData = props.decryptToOrgObj(memoData);\n          memoData.memoId = memoId;\n          memoData.memoDate = memoDate;\n          setMemoData(memoData);\n        } else {\n          window.location.href = \"/\";\n        }\n      },\n    });\n  });\n\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <Paper square className={classes.paper}>\n        <Typography className={classes.text} variant=\"h5\" gutterBottom>\n          {memoData.memoTitle}\n        </Typography>\n        <List style={{ overflowX: \"scroll\" }} className={classes.list}>\n          <ReactMarkdown children={memoData.memoBody} />\n        </List>\n      </Paper>\n      <AppBar position=\"fixed\" color=\"primary\" className={classes.appBar}>\n        <Toolbar>\n          <IconButton\n            onClick={() => {\n              drawer ? setDrawer(false) : setDrawer(true);\n              document.getElementById(\"openDrawer\").click();\n            }}\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n          >\n            <MenuIcon />\n          </IconButton>\n          <Tooltip title=\"Edit this Memo\" arrow>\n            <Fab\n              id=\"addBtn\"\n              color=\"secondary\"\n              aria-label=\"add\"\n              className={classes.fabButton}\n              onClick={() => {\n                editMemo\n                  ? setTimeout(() => {\n                      setEditMemo(false);\n                    }, 500)\n                  : setEditMemo(true);\n              }}\n            >\n              <EditIcon />\n            </Fab>\n          </Tooltip>\n          <div className={classes.grow} />\n          <Tooltip title=\"Search\" arrow>\n            <IconButton color=\"inherit\">\n              <SearchIcon />\n            </IconButton>\n          </Tooltip>\n          <Tooltip title=\"Options\" arrow>\n            <IconButton\n              aria-controls=\"simple-menu\"\n              edge=\"end\"\n              color=\"inherit\"\n              aria-aria-haspopup=\"true\"\n              onClick={handleMenuClick}\n            >\n              <MoreIcon />\n            </IconButton>\n          </Tooltip>\n          <Menu\n            id=\"simple-menu\"\n            anchorEl={anchorEl}\n            keepMounted\n            open={Boolean(anchorEl)}\n            onClose={handleMenuClose}\n          >\n            <MenuItem\n              id=\"editBtn\"\n              onClick={() => {\n                handleMenuClose();\n                editMemo\n                  ? setTimeout(() => {\n                      setEditMemo(false);\n                    }, 500)\n                  : setEditMemo(true);\n              }}\n            >\n              <EditIcon fontSize=\"small\" />\n              Edit\n            </MenuItem>\n            <MenuItem\n              onClick={() => {\n                handleMenuClose();\n                handleAlertOpen();\n              }}\n            >\n              <DeleteIcon fontSize=\"small\" />\n              Delete\n            </MenuItem>\n            <MenuItem onClick={handleMenuClose}>\n              <HomeIcon fontSize=\"small\" />\n              Home\n            </MenuItem>\n          </Menu>\n        </Toolbar>\n      </AppBar>\n      <TemporaryDrawer anchor=\"left\" active={drawer} />\n      {snackBar\n        ? showSnackBar(\"Memo updated successsfully..!\", \"success\")\n        : null}\n      {editMemo ? (\n        <EditMemo\n          memoTitle={memoData.memoTitle}\n          memoBody={memoData.memoBody}\n          memoId={memoData.memoId}\n          memoDate={memoData.memoDate}\n          memoType={memoData.memoType}\n          showSnackBar={setSnackBar}\n          updateUserMemo={props.updateUserMemo}\n        />\n      ) : null}\n      {openAlert ? (\n        <Dialog\n          open={openAlert}\n          onClose={handleAlertClose}\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n        >\n          <DialogTitle id=\"alert-dialog-title\">\n            {\"Are you sure to delete this memo ?\"}\n          </DialogTitle>\n          <DialogContent>\n            <DialogContentText id=\"alert-dialog-description\">\n              Once deleted you will not able to undo or recover it. It will\n              permanently deleted.. Make sure that want move forward.. If so\n              click the OK button down below..!\n            </DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={handleAlertClose} color=\"primary\">\n              Nop.. Don't delete this memo.!\n            </Button>\n            <Button\n              onClick={() => {\n                handleAlertClose();\n                props.dltUserMemo({\n                  memoId: memoData.memoId,\n                  memoType: memoData.memoType,\n                });\n              }}\n              color=\"secondary\"\n              autoFocus\n            >\n              Ok, Delete this memo.. I am sure..!\n            </Button>\n          </DialogActions>\n        </Dialog>\n      ) : null}\n    </React.Fragment>\n  );\n}\n","import React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport { useHistory } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n  wrapper: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    background: \"whitesmoke\",\n    flexDirection: \"column\",\n    marginTop: \"5rem\",\n  },\n}));\n\nfunction NotFound(props) {\n  var classes = useStyles();\n  var history = useHistory();\n  return (\n    <div className={classes.wrapper}>\n      <Typography variant=\"h1\" component=\"h2\" gutterBottom>\n        404\n      </Typography>\n      <Typography variant=\"h4\" gutterBottom>\n        <b>Ooops..!</b>\n      </Typography>\n      <Typography variant=\"h4\" gutterBottom>\n        THAT PAGE DOESN'T EXIST OR IS UNAVAILABLE.\n      </Typography>\n      <div\n        style={{\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          flexDirection: \"row\",\n        }}\n      >\n        <Button\n          variant=\"outlined\"\n          color=\"primary\"\n          onClick={() => {\n            history.push(\"/\");\n          }}\n        >\n          Take Me Home\n        </Button>\n        <Button\n          style={{ marginLeft: \"2rem\" }}\n          variant=\"outlined\"\n          onClick={() => {\n            window.location.href = \"https://github.com/Muhammed-Rahif\";\n          }}\n        >\n          Contact Developer\n        </Button>\n      </div>\n    </div>\n  );\n}\n\nexport default NotFound;\n","import React, { Component, useEffect } from \"react\";\n// import logo from './logo.svg';\nimport \"./App.css\";\n\nimport $ from \"jquery\";\nconst CryptoJS = require(\"crypto-js\");\nvar store = require(\"store\");\n\nimport SignIn from \"./Components/SignIn\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport SignUp from \"./Components/SignUp\";\nimport HomeViewMemos from \"./Components/HomeViewMemos\";\nimport MyProfile from \"./Components/MyProfile\";\nimport AboutUs from \"./Components/AboutUs\";\nimport ViewMemo from \"./Components/ViewMemo\";\nimport EditMemo from \"./Components/EditMemo\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport { Redirect } from \"react-router\";\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport NotFound from \"./Components/NotFound\";\nconst clientStorageKey = \"SecureMemoStorage\";\nconst encKey = \"secure memo key\";\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userData: false,\n      userLoggedIn: false,\n      myMemos: [],\n      snackbar: {\n        openSnackbar: false,\n        msg: \"\",\n        type: \"success\",\n        position: { vertical: \"bottom\", horizontal: \"left\" },\n      },\n      backdropOpen: false,\n    };\n  }\n\n  BackdropClose = () => {\n    this.setState({ backdropOpen: false });\n  };\n  backdropToggle = () => {\n    this.setState({ backdropOpen: !this.state.backdropOpen });\n  };\n\n  encryptObj = (obj) => {\n    let encObj = {};\n    Object.keys(obj).map((itm) => {\n      encObj[itm] = CryptoJS.AES.encrypt(obj[itm], encKey).toString();\n    });\n    return encObj;\n  };\n\n  encUnSaltStr = (str) => {\n    return CryptoJS.AES.encrypt(str, CryptoJS.enc.Utf8.parse(encKey), {\n      iv: { words: [0, 0, 0, 0], sigBytes: 16 },\n    }).toString();\n  };\n\n  decryptToOrgObj = (obj) => {\n    let decObj = {};\n    Object.keys(obj).map((itm) => {\n      decObj[itm] = CryptoJS.AES.decrypt(obj[itm], encKey).toString(\n        CryptoJS.enc.Utf8\n      );\n      decObj[itm] = decObj[itm].replace(/['\"]+/g, \"\");\n    });\n    return decObj;\n  };\n\n  signUpUser = (userData) => {\n    this.backdropToggle();\n    var userEmail = userData.email;\n    delete userData.email;\n    userData = this.encryptObj(userData);\n    userData.email = this.encUnSaltStr(userEmail);\n    $.ajax({\n      method: \"post\",\n      url: \"./signup-user\",\n      data: userData,\n      success: (response) => {\n        if (response.status) {\n          this.backdropToggle();\n          this.setState({ userData: response.userData });\n          this.setState({ userLoggedIn: true });\n          this.verifyUserLogin();\n          <Redirect push to=\"./\" />;\n        } else {\n          this.backdropToggle();\n          this.setState({\n            snackbar: {\n              openSnackbar: true,\n              msg: `Can't sign up : ${response.errorMsg}`,\n              type: \"error\",\n              position: {\n                vertical: \"top\",\n                horizontal: \"center\",\n              },\n            },\n          });\n        }\n      },\n    });\n  };\n\n  signInUser = (userData) => {\n    this.backdropToggle();\n    var userEmail = userData.email;\n    delete userData.email;\n    userData = this.encryptObj(userData);\n    userData.email = this.encUnSaltStr(userEmail);\n    $.ajax({\n      method: \"post\",\n      url: \"./signin-user\",\n      data: userData,\n      success: (response) => {\n        if (response.status) {\n          this.backdropToggle();\n          this.setState({ userData: response.userData });\n          this.setState({ userLoggedIn: true });\n          this.verifyUserLogin();\n          <Redirect push to=\"./\" />;\n        } else {\n          this.backdropToggle();\n          this.setState({\n            snackbar: {\n              openSnackbar: true,\n              msg: `Can't sign in : ${response.errorMsg}`,\n              type: \"error\",\n              position: {\n                vertical: \"top\",\n                horizontal: \"center\",\n              },\n            },\n          });\n        }\n      },\n    });\n  };\n\n  logoutUser = () => {\n    this.setState({ userLoggedIn: false, userData: null });\n    store.remove(clientStorageKey);\n    window.location.reload();\n  };\n\n  getLoggedInUserData = () => {\n    let userData = store.get(clientStorageKey);\n    return userData;\n  };\n\n  createUserMemo = (memoData) => {\n    this.backdropToggle();\n    memoData = this.encryptObj(memoData);\n    var userData = this.getLoggedInUserData();\n    Object.assign(userData, memoData);\n    $.ajax({\n      method: \"post\",\n      url: \"./create-user-memo\",\n      data: userData,\n      success: (response) => {\n        this.backdropToggle();\n        if (response.status) {\n          this.setState({\n            snackbar: {\n              openSnackbar: true,\n              msg: response.firstMemo\n                ? \"Successfully saved your first memo.!\"\n                : \"Successfully saved your memo.!\",\n              type: \"success\",\n              position: {\n                vertical: \"bottom\",\n                horizontal: \"left\",\n              },\n            },\n          });\n        } else {\n          this.setState({\n            snackbar: {\n              openSnackbar: true,\n              msg: \"Oops..! Something went wrong, Try again.\",\n              type: \"error\",\n              position: {\n                vertical: \"bottom\",\n                horizontal: \"left\",\n              },\n            },\n          });\n        }\n      },\n    });\n  };\n\n  updateUserMemo = (memoData) => {\n    this.backdropToggle();\n    let memoId = memoData.memoId;\n    delete memoData.memoId;\n    memoData = this.encryptObj(memoData);\n    memoData.memoId = memoId;\n    var userData = this.getLoggedInUserData();\n    Object.assign(userData, memoData);\n    $.ajax({\n      method: \"post\",\n      url: \"/update-user-memo\",\n      data: userData,\n      success: (response) => {\n        this.backdropToggle();\n        if (response.status) {\n          this.setState({\n            snackbar: {\n              openSnackbar: true,\n              msg: \"Successfully updated your memo.!\",\n              type: \"success\",\n              position: {\n                vertical: \"bottom\",\n                horizontal: \"left\",\n              },\n            },\n          });\n        } else {\n          this.setState({\n            snackbar: {\n              openSnackbar: true,\n              msg: \"Oops..! Something went wrong, Try again.\",\n              type: \"error\",\n              position: {\n                vertical: \"bottom\",\n                horizontal: \"left\",\n              },\n            },\n          });\n        }\n      },\n    });\n  };\n\n  getUserMemo = (userId, memoId) => {\n    alert(\"editUserMemo\");\n  };\n\n  dltUserMemo = (memoData) => {\n    this.backdropToggle();\n    var userData = this.getLoggedInUserData();\n    Object.assign(userData, memoData);\n    $.ajax({\n      method: \"post\",\n      url: \"/delete-user-memo\",\n      data: userData,\n      success: (response) => {\n        this.backdropToggle();\n        if (response.status) {\n          this.setState({\n            snackbar: {\n              openSnackbar: true,\n              msg: \"Successfully deleted.!\",\n              type: \"success\",\n              position: {\n                vertical: \"bottom\",\n                horizontal: \"left\",\n              },\n            },\n          });\n          window.location.href = \"/\";\n        } else {\n          this.setState({\n            snackbar: {\n              openSnackbar: true,\n              msg: \"Oops..! Something went wrong, Try again.\",\n              type: \"error\",\n              position: {\n                vertical: \"bottom\",\n                horizontal: \"left\",\n              },\n            },\n          });\n        }\n      },\n    });\n  };\n\n  SnackbarClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n\n    this.setState({ snackbar: { openSnackbar: false } });\n  };\n\n  verifyUserLogin = () => {\n    let userData = this.state.userData;\n    let userLocalStorage = store.get(clientStorageKey);\n    if (userLocalStorage) {\n      this.setState({\n        userData: userLocalStorage,\n        userLoggedIn: true,\n      });\n    } else {\n      store.set(clientStorageKey, userData);\n    }\n  };\n\n  componentDidMount = () => {\n    this.verifyUserLogin();\n  };\n\n  render() {\n    return (\n      <Router>\n        {/* Backdrop */}\n        <Backdrop style={{ zIndex: 999999 }} open={this.state.backdropOpen}>\n          <CircularProgress color=\"inherit\" />\n        </Backdrop>\n        {/* Alert a snackbar */}\n        {this.state.snackbar.openSnackbar ? (\n          <Snackbar\n            open={this.state.snackbar.openSnackbar}\n            autoHideDuration={6000}\n            style={{ position: \"absolute\" }}\n            onClose={this.SnackbarClose}\n            anchorOrigin={this.state.snackbar.position}\n          >\n            <Alert\n              onClose={this.SnackbarClose}\n              severity={this.state.snackbar.type}\n            >\n              {this.state.snackbar.msg}\n            </Alert>\n          </Snackbar>\n        ) : null}\n        <Switch>\n          <Route exact path=\"/\" component={SignIn}>\n            {this.state.userLoggedIn ? (\n              <Redirect push to=\"./all-memos\" />\n            ) : (\n              <Redirect push to=\"./signup\" />\n            )}\n          </Route>\n          <Route path=\"/signin\">\n            {this.state.userLoggedIn ? (\n              <Redirect push to=\"./\" />\n            ) : (\n              <SignIn signInUser={this.signInUser} />\n            )}\n          </Route>\n          <Route path=\"/signup\">\n            {this.state.userLoggedIn ? (\n              <Redirect push to=\"./\" />\n            ) : (\n              <SignUp signUpUser={this.signUpUser} />\n            )}\n          </Route>\n          <Route path=\"/all-memos\">\n            {this.state.userLoggedIn ? (\n              <HomeViewMemos\n                decryptToOrgObj={this.decryptToOrgObj}\n                getLoggedInUserData={this.getLoggedInUserData}\n                createUserMemo={this.createUserMemo}\n                logoutUser={this.logoutUser}\n              />\n            ) : (\n              <SignIn signInUser={this.signInUser} />\n            )}\n          </Route>\n          <Route path=\"/my-profile\">\n            {this.state.userLoggedIn ? (\n              <MyProfile />\n            ) : (\n              <SignIn signInUser={this.signInUser} />\n            )}\n          </Route>\n          <Route path=\"/view-memo/:id\">\n            {this.state.userLoggedIn ? (\n              <ViewMemo\n                dltUserMemo={this.dltUserMemo}\n                getLoggedInUserData={this.getLoggedInUserData}\n                decryptToOrgObj={this.decryptToOrgObj}\n                updateUserMemo={this.updateUserMemo}\n              />\n            ) : (\n              <SignIn signInUser={this.signInUser} />\n            )}\n          </Route>\n          <Route path=\"/about-us\">\n            <AboutUs />\n          </Route>\n          {/* 404 page */}\n          <Route path=\"/404\" component={NotFound} />\n          <Route path=\"/\" component={NotFound} />\n          <Route path=\"/*\" component={NotFound} />\n          <Route component={NotFound} />\n        </Switch>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}