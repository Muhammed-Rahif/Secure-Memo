{"version":3,"sources":["Components/SignIn.js","Components/SignUp.js","Components/TemporaryDrawer.js","Components/CreateMemo.js","Components/HomeViewMemos.js","Components/AboutUs.js","Components/EditMemo.js","Components/ViewMemo.js","App.js","index.js"],"names":["Copyright","Typography","variant","color","align","Link","href","Date","getFullYear","createMuiTheme","palette","type","useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","secondary","main","form","width","submit","SignIn","props","classes","useForm","reValidateMode","register","handleSubmit","errors","formState","Container","component","maxWidth","CssBaseline","className","Avatar","onSubmit","formData","signInUser","TextField","fullWidth","id","label","autoComplete","autoFocus","required","pattern","error","email","helperText","minLength","password","Button","Grid","container","justify","item","Box","mt","SignUp","signUpUser","xs","sm","firstName","lastName","list","fullList","profileSection","height","justifyContent","padding","bgImage","backgroundImage","filter","backgroundPosition","backgroundRepeat","backgroundSize","profileIconStyles","root","orange","getContrastText","deepOrange","purple","deepPurple","small","large","TemporaryDrawer","anchor","profileIconClasses","React","useState","top","left","bottom","right","state","setState","history","useHistory","toggleDrawer","open","event","key","useEffect","active","document","getElementById","click","Fragment","style","hidden","onClick","Drawer","onClose","clsx","role","onKeyDown","List","Divider","ListItem","button","ListItemIcon","ListItemText","primary","push","appBar","position","title","marginLeft","flex","devider","Transition","forwardRef","ref","Slide","direction","FullScreenDialog","setOpen","textAreaHeight","setTextAreaHeight","mdScrollable","setMdScrollable","textAreaContent","setTextAreaContent","defaultValues","memoType","setValue","setTimeout","clientHeight","handleClose","console","log","Dialog","fullScreen","TransitionComponent","createUserMemo","AppBar","Toolbar","Tooltip","arrow","IconButton","edge","aria-label","startIcon","paddingBottom","memoTitle","onChange","e","target","value","shouldValidate","textAlign","rows","multiline","$","val","updateMarkdown","memoBody","Switch","checked","overflowY","changePreviewScrollable","Paper","minHeight","overflowX","paddingLeft","children","FormControl","formControl","InputLabel","Select","defaultValue","labelId","MenuItem","text","marginBottom","subheader","background","grow","flexGrow","fabButton","zIndex","BottomAppBar","drawer","setDrawer","createMemo","setCreateMemo","anchorEl","setAnchorEl","Array","memos","setMemos","handleMenuClose","ajax","url","data","userId","getLoggedInUserData","method","success","allMemos","square","gutterBottom","ListSubheader","map","itm","memoId","memoDate","decryptToOrgObj","substring","window","location","ListItemAvatar","alt","charAt","toUpperCase","whiteSpace","overflow","textOverflow","Fab","aria-controls","aria-aria-haspopup","currentTarget","keepMounted","Boolean","logoutUser","footer","grey","StickyFooter","prefersDarkMode","useMediaQuery","useMemo","ThemeProvider","addMemoTo","setAddMemoTo","memoHeading","setMemoHeading","showSnackBar","Alert","elevation","message","severity","snackBar","setSnackBar","handleSnackBarClose","reason","fontSize","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","CryptoJS","require","clientStorageKey","encKey","App","BackdropClose","backdropOpen","backdropToggle","encryptObj","obj","encObj","Object","keys","AES","encrypt","toString","encUnSaltStr","str","enc","Utf8","parse","iv","words","sigBytes","decObj","decrypt","replace","userData","userEmail","response","status","userLoggedIn","verifyUserLogin","snackbar","openSnackbar","msg","errorMsg","localStorage","setItem","reload","JSON","getItem","memoData","assign","firstMemo","updateUserMemo","alert","getUserMemo","dltUserMemo","editUserMemo","SnackbarClose","userLocalStorage","stringify","componentDidMount","myMemos","this","Backdrop","CircularProgress","exact","path","to","Component","ReactDOM","render"],"mappings":"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","file":"static/js/main.f0995d87.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Link from \"@material-ui/core/Link\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\n\nimport { useForm } from \"react-hook-form\";\nimport { createMuiTheme } from \"@material-ui/core/styles\";\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {\"Copyright © \"}\n      <Link color=\"inherit\" href=\"./\">\n        Secure Memo\n      </Link>{\" \"}\n      {new Date().getFullYear()}\n      {\".\"}\n    </Typography>\n  );\n}\n\nconst darkTheme = createMuiTheme({\n  palette: {\n    type: \"dark\",\n  },\n});\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport default function SignIn(props) {\n  const classes = useStyles();\n  var emailPattern = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm({ reValidateMode: \"onChange\" });\n  const onSubmit = (formData) => {\n    props.signInUser(formData);\n  };\n  \n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign in\n        </Typography>\n        <form className={classes.form} onSubmit={handleSubmit(onSubmit)}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            fullWidth\n            id=\"email\"\n            label=\"Email Address\"\n            autoComplete=\"off\"\n            autoFocus\n            {...register(\"email\", {\n              required: true,\n              pattern: emailPattern,\n            })}\n            error={errors.email ? true : false}\n            helperText={\n              errors.email\n                ? errors.email.type === \"required\"\n                  ? \"Email address is required.\"\n                  : \"Type a valid email address.\"\n                : \"Type your email address.\"\n            }\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            fullWidth\n            label=\"Password\"\n            type=\"password\"\n            id=\"password\"\n            autoComplete=\"off\"\n            {...register(\"password\", { required: true, minLength: 8 })}\n            error={errors.password ? true : false}\n            helperText={\n              errors.password\n                ? errors.password.type === \"required\"\n                  ? \"Password is required.\"\n                  : \"Minimum lenght is 8.\"\n                : \"Type your password.\"\n            }\n          />\n          {/* <FormControlLabel\n            control={<Checkbox value=\"remember\" color=\"primary\" />}\n            label=\"Remember me\"\n          /> */}\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Sign In\n          </Button>\n          <Grid container justify=\"flex-end\">\n            {/* <Grid item xs>\n              <Link href=\"\" aria-disabled variant=\"body2\">\n                Forgot password?\n              </Link>\n            </Grid> */}\n            <Grid item>\n              <Link href=\"/signup\" variant=\"body2\">\n                {\"Don't have an account? Sign Up\"}\n              </Link>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n      <Box mt={8}>\n        <Copyright />\n      </Box>\n    </Container>\n  );\n}\n","import React, { useState } from \"react\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Link from \"@material-ui/core/Link\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\n\nimport { useForm } from \"react-hook-form\";\nimport { FormatIndentIncreaseTwoTone } from \"@material-ui/icons\";\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {\"Copyright © \"}\n      <Link color=\"inherit\" href=\"./\">\n        Secure Memo\n      </Link>{\" \"}\n      {new Date().getFullYear()}\n      {\".\"}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\n\nexport default function SignUp(props) {\n  const classes = useStyles();\n  var emailPattern = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm({ reValidateMode: \"onChange\" });\n\n  const onSubmit = (formData) => {\n    props.signUpUser(formData)\n  };\n  \n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign up\n        </Typography>\n        <form className={classes.form} onSubmit={handleSubmit(onSubmit)}>\n          <Grid container spacing={2}>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                autoComplete=\"fname\"\n                variant=\"outlined\"\n                fullWidth\n                id=\"firstName\"\n                label=\"First Name\"\n                autoFocus\n                autoComplete=\"off\"\n                {...register(\"firstName\", { required: true, minLength: 3 })}\n                error={errors.firstName ? true : false}\n                helperText={\n                  errors.firstName\n                    ? errors.firstName.type === \"required\"\n                      ? \"First name is required.\"\n                      : \" Minimum lenght 3.\"\n                    : \"Type your first name.\"\n                }\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                variant=\"outlined\"\n                fullWidth\n                id=\"lastName\"\n                label=\"Last Name\"\n                autoComplete=\"off\"\n                {...register(\"lastName\", { required: true, minLength: 3 })}\n                error={errors.lastName ? true : false}\n                helperText={\n                  errors.lastName\n                    ? errors.lastName.type === \"required\"\n                      ? \"Last name is required.\"\n                      : \" Minimum lenght 3.\"\n                    : \"Type your last name.\"\n                }\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                fullWidth\n                id=\"email\"\n                label=\"Email Address\"\n                autoComplete=\"off\"\n                {...register(\"email\", {\n                  required: true,\n                  pattern: emailPattern,\n                })}\n                error={errors.email ? true : false}\n                helperText={\n                  errors.email\n                    ? errors.email.type === \"required\"\n                      ? \"Email address is required.\"\n                      : \"Type a valid email address.\"\n                    : \"Type your email address.\"\n                }\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                fullWidth\n                label=\"Password\"\n                type=\"password\"\n                id=\"password\"\n                autoComplete=\"off\"\n                {...register(\"password\", { required: true, minLength: 8 })}\n                error={errors.password ? true : false}\n                helperText={\n                  errors.password\n                    ? errors.password.type === \"required\"\n                      ? \"Password is required.\"\n                      : \"Minimum lenght is 8.\"\n                    : \"Type your password.\"\n                }\n              />\n            </Grid>\n            {/* <Grid item xs={12}>\n              <FormControlLabel\n                control={<Checkbox value=\"allowExtraEmails\" color=\"primary\" />}\n                label=\"I want to receive inspiration, marketing promotions and updates via email.\"\n              />\n            </Grid> */}\n          </Grid>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Sign Up\n          </Button>\n          <Grid container justify=\"flex-end\">\n            <Grid item>\n              <Link href=\"/signin\" variant=\"body2\">\n                Already have an account? Sign in\n              </Link>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n      <Box mt={5}>\n        <Copyright />\n      </Box>\n    </Container>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport clsx from \"clsx\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport Button from \"@material-ui/core/Button\";\nimport List from \"@material-ui/core/List\";\nimport Divider from \"@material-ui/core/Divider\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport InboxIcon from \"@material-ui/icons/MoveToInbox\";\nimport MailIcon from \"@material-ui/icons/Mail\";\nimport AllInboxIcon from \"@material-ui/icons/AllInbox\";\nimport VisibilityOffIcon from \"@material-ui/icons/VisibilityOff\";\nimport LockIcon from \"@material-ui/icons/Lock\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport { deepOrange, deepPurple } from \"@material-ui/core/colors\";\nimport InfoIcon from \"@material-ui/icons/Info\";\nimport { useHistory } from \"react-router-dom\";\n\nconst useStyles = makeStyles({\n  list: {\n    width: 250,\n  },\n  fullList: {\n    width: \"auto\",\n  },\n  profileSection: {\n    width: \"100%\",\n    height: \"10rem\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    padding: \"0 !important\",\n  },\n  bgImage: {\n    backgroundImage: \"url('../profile-bg.jpg')\",\n    filter: \"opacity(75%)\",\n    height: \"100%\",\n    width: \"100%\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    display: \"flex\",\n    backgroundPosition: \"center\",\n    backgroundRepeat: \"no-repeat\",\n    backgroundSize: \"cover\",\n  },\n});\n\nconst profileIconStyles = makeStyles((theme) => ({\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(1),\n    },\n  },\n  orange: {\n    color: theme.palette.getContrastText(deepOrange[500]),\n    backgroundColor: deepOrange[500],\n  },\n  purple: {\n    color: theme.palette.getContrastText(deepPurple[500]),\n    backgroundColor: deepPurple[500],\n  },\n  small: {\n    width: theme.spacing(3),\n    height: theme.spacing(3),\n  },\n  large: {\n    width: theme.spacing(7),\n    height: theme.spacing(7),\n  },\n}));\n\nexport default function TemporaryDrawer(props) {\n  const anchor = props.anchor;\n  const classes = useStyles();\n  const profileIconClasses = profileIconStyles();\n  const [state, setState] = React.useState({\n    top: false,\n    left: false,\n    bottom: false,\n    right: false,\n  });\n  const history = useHistory();\n\n  const toggleDrawer = (anchor, open) => (event) => {\n    if (\n      event.type === \"keydown\" &&\n      (event.key === \"Tab\" || event.key === \"Shift\")\n    ) {\n      return;\n    }\n\n    setState({ ...state, [anchor]: open });\n  };\n\n  const list = (anchor) => (\n    <div\n      className={clsx(classes.list, {\n        [classes.fullList]: anchor === \"top\" || anchor === \"bottom\",\n      })}\n      role=\"presentation\"\n      onClick={toggleDrawer(anchor, false)}\n      onKeyDown={toggleDrawer(anchor, false)}\n    >\n      <List className={classes.profileSection}>\n        <div className={classes.bgImage}>\n          <Avatar\n            className={[profileIconClasses.orange, profileIconClasses.large]}\n          >\n            OP\n          </Avatar>\n        </div>\n      </List>\n      <Divider />\n      <List>\n        <ListItem button key=\"All Memos\">\n          <ListItemIcon>\n            <AllInboxIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"All Memos\" />\n        </ListItem>\n        <ListItem button key=\"Hidden Memos\">\n          <ListItemIcon>\n            <VisibilityOffIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Hidden Memos\" />\n        </ListItem>\n        <ListItem button key=\"Secure Memos\">\n          <ListItemIcon>\n            <LockIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Secure Memos\" />\n        </ListItem>\n        <Divider />\n        <ListItem\n          onClick={() => {\n            history.push(\"/about-us\");\n          }}\n          button\n          key=\"Secure Memos\"\n        >\n          <ListItemIcon>\n            <InfoIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"About Us\" />\n        </ListItem>\n      </List>\n    </div>\n  );\n  useEffect(() => {\n    if (props.active) {\n      document.getElementById(\"openDrawer\").click();\n    }\n  }, []);\n  return (\n    <div>\n      {\n        <React.Fragment key={anchor}>\n          <Button\n            style={{ display: \"none\" }}\n            hidden\n            id=\"openDrawer\"\n            onClick={toggleDrawer(anchor, true)}\n          >\n            {anchor}\n          </Button>\n          <Drawer\n            anchor={anchor}\n            open={state[anchor]}\n            onClose={toggleDrawer(anchor, false)}\n          >\n            {list(anchor)}\n          </Drawer>\n        </React.Fragment>\n      }\n    </div>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport List from \"@material-ui/core/List\";\nimport Divider from \"@material-ui/core/Divider\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport Slide from \"@material-ui/core/Slide\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport AllInboxIcon from \"@material-ui/icons/AllInbox\";\nimport VisibilityOffIcon from \"@material-ui/icons/VisibilityOff\";\nimport LockIcon from \"@material-ui/icons/Lock\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport Paper from \"@material-ui/core/Paper\";\nimport ReactMarkdown from \"react-markdown\";\nimport Switch from \"@material-ui/core/Switch\";\nimport $ from \"jquery\";\n\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    position: \"relative\",\n  },\n  title: {\n    marginLeft: theme.spacing(2),\n    flex: 1,\n  },\n  devider: {\n    maxWidth: \"95%\",\n    margin: \"auto\",\n  },\n}));\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport default function FullScreenDialog(props) {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const [textAreaHeight, setTextAreaHeight] = React.useState(null);\n  const [mdScrollable, setMdScrollable] = React.useState(false);\n  const [textAreaContent, setTextAreaContent] = React.useState(\"\");\n  const {\n    register,\n    setValue,\n    handleSubmit,\n    formState: { errors },\n  } = useForm({\n    reValidateMode: \"onChange\",\n    defaultValues: { memoType: \"allMemos\" },\n  });\n\n  const onSubmit = (formData) => {\n    console.log(formData);\n    props.createUserMemo(formData);\n    handleClose();\n  };\n\n  const changePreviewScrollable = (event) => {\n    setMdScrollable(event.target.checked);\n    if (mdScrollable) {\n      document.getElementById(\"markdown-preview\").style.overflowY = \"visible\";\n      document.getElementById(\"markdown-preview\").style.height = \"auto\";\n    } else {\n      document.getElementById(\"markdown-preview\").style.overflowY = \"scroll\";\n      document.getElementById(\"markdown-preview\").style.height = textAreaHeight;\n    }\n  };\n\n  useEffect(() => {\n    setOpen(true);\n    setTimeout(() => {\n      setTextAreaHeight(\n        document.getElementById(\"bodyTextarea\").clientHeight +\n          (document.getElementById(\"bodyTextarea\").clientHeight * 2.5) / 10 +\n          \"px\"\n      );\n    }, 500);\n  }, []);\n\n  const handleClose = () => {\n    document.getElementById(\"addBtn\").click();\n    setOpen(false);\n  };\n\n  const updateMarkdown = (e) => {\n    setTextAreaContent($(\"#bodyTextarea\").val());\n    setTextAreaContent(e.target.value);\n  };\n\n  const switchHandler = (event) => {\n    setMdScrollable(document.getElementById(\"mdSwitch\").checked);\n    changePreviewScrollable(event);\n  };\n\n  console.log(errors);\n  console.log(textAreaContent);\n  return (\n    <div>\n      <Dialog\n        fullScreen\n        open={open}\n        onClose={handleClose}\n        TransitionComponent={Transition}\n      >\n        <form\n          className={classes.form}\n          autoComplete=\"off\"\n          onSubmit={handleSubmit(onSubmit)}\n        >\n          <AppBar className={classes.appBar}>\n            <Toolbar>\n              <Tooltip title=\"Cancel\" arrow>\n                <IconButton\n                  edge=\"start\"\n                  color=\"inherit\"\n                  onClick={handleClose}\n                  aria-label=\"close\"\n                >\n                  <CloseIcon />\n                </IconButton>\n              </Tooltip>\n              <Typography variant=\"h6\" className={classes.title}>\n                Create a new Memo\n              </Typography>\n              <Tooltip title=\"Save Memo\" arrow>\n                <Button\n                  autoFocus\n                  color=\"inherit\"\n                  variant=\"outlined\"\n                  startIcon={<SaveIcon />}\n                  type=\"submit\"\n                >\n                  save\n                </Button>\n              </Tooltip>\n            </Toolbar>\n          </AppBar>\n          <List>\n            <ListItem style={{ paddingBottom: 0 }}>\n              <ListItemText primary=\"Memo Heading\" />\n            </ListItem>\n            <ListItem>\n              <TextField\n                id=\"outlined-basic\"\n                label=\"Memo Heading\"\n                variant=\"outlined\"\n                fullWidth\n                ref={register(\"memoTitle\", { required: true, minLength: 10 })}\n                error={errors.memoTitle ? true : false}\n                autoFocus={errors.memoTitle ? true : false}\n                onChange={(e) => {\n                  setValue(\"memoTitle\", e.target.value, {\n                    shouldValidate: true,\n                  });\n                }}\n                helperText={\n                  errors.memoTitle\n                    ? errors.memoTitle.type === \"required\"\n                      ? \"Memo Title is required.\"\n                      : \"Memo Title minimum lenght is 10.\"\n                    : \"Memo Title here.\"\n                }\n              />\n            </ListItem>\n            <Divider className={classes.devider} />\n            <ListItem style={{ paddingBottom: 0 }}>\n              <ListItemText primary=\"Memo Body\" />\n              <p style={{ textAlign: \"right\" }}>\n                <small>* Markdown enabled</small>\n              </p>\n            </ListItem>\n            <ListItem>\n              <TextField\n                id=\"bodyTextarea\"\n                label=\"Memo Body\"\n                variant=\"outlined\"\n                rows=\"7\"\n                multiline={true}\n                value={textAreaContent}\n                fullWidth\n                aria-label=\"textarea\"\n                onChange={(e) => {\n                  updateMarkdown(e);\n                  setValue(\"memoBody\", e.target.value, {\n                    shouldValidate: true,\n                  });\n                }}\n                ref={register(\"memoBody\", {\n                  required: true,\n                  minLength: 12,\n                })}\n                autoFocus={errors.memoBody ? true : false}\n                error={errors.memoBody ? true : false}\n                helperText={\n                  errors.memoBody\n                    ? errors.memoBody.type === \"required\"\n                      ? \"Memo body is required.\"\n                      : \"Memo body Minimum lenght is 12.\"\n                    : \"Memo Body here.\"\n                }\n              />\n            </ListItem>\n            <ListItem style={{ paddingBottom: 0 }}>\n              <ListItemText primary=\"Memo Body Preview\" />\n              <p style={{ textAlign: \"right\" }}>\n                Scrollable\n                <Switch\n                  id=\"mdSwitch\"\n                  onChange={switchHandler}\n                  color=\"primary\"\n                  checked={mdScrollable}\n                />\n              </p>\n            </ListItem>\n            <ListItem>\n              <Paper\n                id=\"markdown-preview\"\n                variant=\"outlined\"\n                style={{\n                  minHeight: textAreaHeight,\n                  margin: \".13rem\",\n                  width: \"100vw\",\n                  overflowX: \"scroll\",\n                  overflowY: \"visible\",\n                  paddingLeft: \".7rem\",\n                }}\n              >\n                <ReactMarkdown children={textAreaContent} />\n              </Paper>\n            </ListItem>\n            <Divider className={classes.devider} />\n            <ListItem style={{ paddingBottom: 0 }}>\n              <ListItemText primary=\"Add Memo to\" />\n            </ListItem>\n            <ListItem>\n              <FormControl\n                variant=\"outlined\"\n                fullWidth\n                className={classes.formControl}\n              >\n                <InputLabel id=\"demo-simple-select-outlined-label\">\n                  Add to\n                </InputLabel>\n                <Select\n                  defaultValue=\"allMemos\"\n                  labelId=\"demo-simple-select-outlined-label\"\n                  id=\"demo-simple-select-outlined\"\n                  label=\"Add to\"\n                  onChange={(e) => {\n                    setValue(\"memoType\", e.target.value, {\n                      shouldValidate: true,\n                    });\n                  }}\n                  {...register(\"memoType\", { required: true })}\n                  autoFocus={errors.memoType ? true : false}\n                  error={errors.memoType ? true : false}\n                  helperText=\"Memo will add to all memos section by default.\"\n                >\n                  <MenuItem value=\"allMemos\">\n                    <AllInboxIcon /> All Memos\n                  </MenuItem>\n                  <MenuItem value=\"hiddenMemos\">\n                    <VisibilityOffIcon /> Hidden\n                  </MenuItem>\n                  <MenuItem value=\"secureMemos\">\n                    <LockIcon /> Secure\n                  </MenuItem>\n                </Select>\n              </FormControl>\n            </ListItem>\n            <Divider className={classes.devider} />\n          </List>\n        </form>\n      </Dialog>\n    </div>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Fab from \"@material-ui/core/Fab\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport MoreIcon from \"@material-ui/icons/MoreVert\";\nimport TemporaryDrawer from \"./TemporaryDrawer\";\nimport CreateMemo from \"./CreateMemo\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport $ from \"jquery\";\n\n// {messages.map(({ id, primary, secondary, person }) => (\n//   <React.Fragment key={id}>\n//     {id === 1 && (\n//       <ListSubheader className={classes.subheader}>\n//         Today\n//       </ListSubheader>\n//     )}\n//     {id === 3 && (\n//       <ListSubheader className={classes.subheader}>\n//         Yesterday\n//       </ListSubheader>\n//     )}\n//     <ListItem button>\n//       <ListItemAvatar>\n//         <Avatar alt=\"Profile Picture\">\n//           {primary.charAt(0).toUpperCase()}\n//         </Avatar>\n//       </ListItemAvatar>\n//       <ListItemText\n//         onClick={() => {\n//           window.location.href = \"./view-memo/1234\";\n//         }}\n//         primary={primary}\n//         secondary={secondary}\n//       />\n//     </ListItem>\n//   </React.Fragment>\n// ))}\n\nconst useStyles = makeStyles((theme) => ({\n  text: {\n    padding: theme.spacing(2, 2, 0),\n  },\n  paper: {\n    paddingBottom: 50,\n  },\n  list: {\n    marginBottom: theme.spacing(2),\n    minHeight: \"80vh\",\n  },\n  subheader: {\n    backgroundColor: theme.palette.background.paper,\n  },\n  appBar: {\n    top: \"auto\",\n    bottom: 0,\n  },\n  grow: {\n    flexGrow: 1,\n  },\n  fabButton: {\n    position: \"absolute\",\n    zIndex: 1,\n    top: -30,\n    left: 0,\n    right: 0,\n    margin: \"0 auto\",\n  },\n}));\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nexport default function BottomAppBar(props) {\n  const classes = useStyles();\n  const [drawer, setDrawer] = useState(false);\n  const [createMemo, setCreateMemo] = useState(false);\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [memos, setMemos] = useState(new Array());\n\n  const handleMenuClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleMenuClose = () => {\n    setAnchorEl(null);\n  };\n\n  React.useEffect(() => {\n    $.ajax({\n      url: \"./get-user-memos\",\n      data: {\n        userId: props.getLoggedInUserData().userId,\n        memoType: \"allMemos\",\n      },\n      method: \"post\",\n      success: (allMemos) => {\n        setMemos(allMemos);\n        console.log(memos);\n      },\n    });\n  });\n\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <Paper square className={classes.paper}>\n        <Typography className={classes.text} variant=\"h5\" gutterBottom>\n          All Memos\n        </Typography>\n        <List className={classes.list}>\n          <ListSubheader className={classes.subheader}>Today</ListSubheader>\n          {memos.map((itm) => {\n            let memoId = itm.memoId;\n            let memoDate = itm.memoDate;\n            delete itm.memoId;\n            delete itm.memoDate;\n            itm = props.decryptToOrgObj(itm);\n            console.log(itm);\n            itm.memoBody = itm.memoBody.substring(0, 45);\n            return (\n              <ListItem\n                onClick={() => {\n                  window.location.href = `./view-memo/${memoId}`;\n                }}\n                button\n              >\n                <ListItemAvatar>\n                  <Avatar alt=\"Profile Picture\">\n                    {itm.memoTitle.charAt(0).toUpperCase()}\n                  </Avatar>\n                </ListItemAvatar>\n                <ListItemText\n                  style={{\n                    whiteSpace: \"nowrap\",\n                    overflow: \"hidden\",\n                    textOverflow: \"ellipsis\",\n                    maxWidth: \"65vw\",\n                  }}\n                  primary={itm.memoTitle}\n                  secondary={itm.memoBody}\n                />\n              </ListItem>\n            );\n          })}\n        </List>\n      </Paper>\n      <AppBar position=\"fixed\" color=\"primary\" className={classes.appBar}>\n        <Toolbar>\n          <IconButton\n            onClick={() => {\n              drawer ? setDrawer(false) : setDrawer(true);\n              document.getElementById(\"openDrawer\").click();\n            }}\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n          >\n            <MenuIcon />\n          </IconButton>\n          <Tooltip title=\"Create new Memo\" arrow>\n            <Fab\n              id=\"addBtn\"\n              color=\"secondary\"\n              aria-label=\"add\"\n              className={classes.fabButton}\n              onClick={() => {\n                createMemo\n                  ? setTimeout(() => {\n                      setCreateMemo(false);\n                    }, 500)\n                  : setCreateMemo(true);\n              }}\n            >\n              <AddIcon />\n            </Fab>\n          </Tooltip>\n          <div className={classes.grow} />\n          <Tooltip title=\"Search\" arrow>\n            <IconButton color=\"inherit\">\n              <SearchIcon />\n            </IconButton>\n          </Tooltip>\n          <Tooltip title=\"Options\" arrow>\n            <IconButton\n              aria-controls=\"simple-menu\"\n              edge=\"end\"\n              color=\"inherit\"\n              aria-aria-haspopup=\"true\"\n              onClick={handleMenuClick}\n            >\n              <MoreIcon />\n            </IconButton>\n          </Tooltip>\n          <Menu\n            id=\"simple-menu\"\n            anchorEl={anchorEl}\n            keepMounted\n            open={Boolean(anchorEl)}\n            onClose={handleMenuClose}\n          >\n            <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\n            <MenuItem onClick={handleMenuClose}>My account</MenuItem>\n            <MenuItem\n              onClick={() => {\n                handleMenuClose();\n                props.logoutUser();\n              }}\n            >\n              Logout\n            </MenuItem>\n          </Menu>\n        </Toolbar>\n      </AppBar>\n      <TemporaryDrawer anchor=\"left\" active={drawer} />\n      {createMemo ? <CreateMemo createUserMemo={props.createUserMemo} /> : null}\n    </React.Fragment>\n  );\n}\n","import React from \"react\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport Link from \"@material-ui/core/Link\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\">\n      {\"Copyright © \"}\n      <Link color=\"inherit\" href=\"./\">\n        Secure Memo\n      </Link>{\" \"}\n      {new Date().getFullYear()}\n      {\".\"}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    minHeight: \"100vh\",\n  },\n  main: {\n    marginTop: theme.spacing(8),\n    marginBottom: theme.spacing(2),\n  },\n  footer: {\n    padding: theme.spacing(3, 2),\n    marginTop: \"auto\",\n    backgroundColor:\n      theme.palette.type === \"dark\"\n        ? theme.palette.grey[200]\n        : theme.palette.grey[800],\n  },\n}));\n\nexport default function StickyFooter() {\n  const classes = useStyles();\n\n  const prefersDarkMode = useMediaQuery(\"(prefers-color-scheme: dark)\");\n\n  const theme = React.useMemo(\n    () =>\n      createMuiTheme({\n        palette: {\n          type: prefersDarkMode ? \"dark\" : \"light\",\n        },\n      }),\n    [prefersDarkMode]\n  );\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <div className={classes.root}>\n        <CssBaseline />\n        <Container component=\"main\" className={classes.main} maxWidth=\"sm\">\n          <Typography variant=\"h2\" component=\"h1\" gutterBottom>\n            <Link href=\"./\" style={{color:\"white\"}}>Secure Memo</Link>\n          </Typography>\n          <Typography variant=\"h5\" component=\"h2\" gutterBottom>\n            {\"This website created and maintained by \"}\n            <Link href=\"https://github.com/Muhammed-Rahif\" variant=\"h5\" style={{color:\"white\"}}>\n              <b>Muhammed Rahif.</b>\n            </Link>\n            <br />\n          </Typography>\n          <Typography variant=\"subtitle1\" component=\"h3\">\n            {\"I hope you will contact me for any inquiries...\"}\n          </Typography>\n          <Typography variant=\"body1\">Have a nice day.</Typography>\n        </Container>\n        <footer className={classes.footer}>\n          <Container maxWidth=\"sm\">\n            <Typography variant=\"body1\">\n              Made with{\" \"}\n              <Link variant=\"body1\" href=\"https://material-ui.com/\" style={{color:\"white\"}}>\n                React Material UI\n              </Link>\n            </Typography>\n            <Copyright />\n          </Container>\n        </footer>\n      </div>\n    </ThemeProvider>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport List from \"@material-ui/core/List\";\nimport Divider from \"@material-ui/core/Divider\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport Slide from \"@material-ui/core/Slide\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport AllInboxIcon from \"@material-ui/icons/AllInbox\";\nimport VisibilityOffIcon from \"@material-ui/icons/VisibilityOff\";\nimport LockIcon from \"@material-ui/icons/Lock\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport PublishIcon from \"@material-ui/icons/Publish\";\nimport Paper from \"@material-ui/core/Paper\";\nimport ReactMarkdown from \"react-markdown\";\nimport Switch from \"@material-ui/core/Switch\";\n\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    position: \"relative\",\n  },\n  title: {\n    marginLeft: theme.spacing(2),\n    flex: 1,\n  },\n  devider: {\n    maxWidth: \"95%\",\n    margin: \"auto\",\n  },\n}));\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport default function FullScreenDialog(props) {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  //   const [openSuccesSnackBar, setOpenSuccesSnackBar] = React.useState(false);\n  const [addMemoTo, setAddMemoTo] = React.useState(\"allMemos\");\n  const [textAreaHeight, setTextAreaHeight] = React.useState(null);\n  const [mdScrollable, setMdScrollable] = React.useState(false);\n  const [memoHeading, setMemoHeading] = React.useState(\n    \"Some memo heading content\"\n  );\n  const [textAreaContent, setTextAreaContent] = React.useState(\n    \"Some memo body content\"\n  );\n\n  const changePreviewScrollable = (event) => {\n    setMdScrollable(event.target.checked);\n    if (mdScrollable) {\n      document.getElementById(\"markdown-preview\").style.overflowY = \"visible\";\n      document.getElementById(\"markdown-preview\").style.height = \"auto\";\n    } else {\n      document.getElementById(\"markdown-preview\").style.overflowY = \"scroll\";\n      document.getElementById(\"markdown-preview\").style.height = textAreaHeight;\n    }\n  };\n\n  useEffect(() => {\n    setOpen(true);\n    setAddMemoTo(\"hiddenMemos\");\n    setTimeout(() => {\n      setTextAreaHeight(\n        document.getElementById(\"bodyTextarea\").clientHeight +\n          (document.getElementById(\"bodyTextarea\").clientHeight * 2.5) / 10 +\n          \"px\"\n      );\n    }, 500);\n  }, []);\n\n  const handleClose = () => {\n    document.getElementById(\"editBtn\").click();\n    setOpen(false);\n  };\n\n  const handleSelectChange = (event) => {\n    setAddMemoTo(event.target.value);\n  };\n\n  const updateMarkdown = () => {\n    setTextAreaContent(document.getElementById(\"bodyTextarea\").value);\n  };\n\n  const switchHandler = (event) => {\n    setMdScrollable(document.getElementById(\"mdSwitch\").checked);\n    changePreviewScrollable(event);\n  };\n\n  return (\n    <div>\n      <Dialog\n        fullScreen\n        open={open}\n        onClose={handleClose}\n        TransitionComponent={Transition}\n      >\n        <AppBar className={classes.appBar}>\n          <Toolbar>\n            <Tooltip title=\"Cancel\" arrow>\n              <IconButton\n                edge=\"start\"\n                color=\"inherit\"\n                onClick={handleClose}\n                aria-label=\"close\"\n              >\n                <CloseIcon />\n              </IconButton>\n            </Tooltip>\n            <Typography variant=\"h6\" className={classes.title}>\n              Edit Memo\n            </Typography>\n            <Tooltip title=\"Save Memo\" arrow>\n              <Button\n                autoFocus\n                color=\"inherit\"\n                onClick={() => {\n                  handleClose();\n                  props.showSnackBar(true);\n                }}\n                variant=\"outlined\"\n                startIcon={<PublishIcon />}\n              >\n                update\n              </Button>\n            </Tooltip>\n          </Toolbar>\n        </AppBar>\n        <List>\n          <form className={classes.form} autoComplete=\"off\">\n            <ListItem style={{ paddingBottom: 0 }}>\n              <ListItemText primary=\"Memo Heading\" />\n            </ListItem>\n            <ListItem>\n              <TextField\n                id=\"outlined-basic\"\n                label=\"Memo Heading\"\n                variant=\"outlined\"\n                fullWidth\n                value={memoHeading}\n                onChange={() => {\n                  setMemoHeading(event.target.value);\n                }}\n              />\n            </ListItem>\n            <Divider className={classes.devider} />\n            <ListItem style={{ paddingBottom: 0 }}>\n              <ListItemText primary=\"Memo Body\" />\n              <p style={{ textAlign: \"right\" }}>\n                <small>* Markdown enabled</small>\n              </p>\n            </ListItem>\n            <ListItem>\n              <TextField\n                id=\"bodyTextarea\"\n                label=\"Memo Body\"\n                variant=\"outlined\"\n                rows=\"7\"\n                multiline={true}\n                fullWidth\n                aria-label=\"textarea\"\n                value={textAreaContent}\n                onChange={updateMarkdown}\n              />\n            </ListItem>\n            <Divider className={classes.devider} />\n            <ListItem style={{ paddingBottom: 0 }}>\n              <ListItemText primary=\"Memo Body Preview\" />\n              <p style={{ textAlign: \"right\" }}>\n                Scrollable\n                <Switch\n                  id=\"mdSwitch\"\n                  onChange={switchHandler}\n                  color=\"primary\"\n                  style={{ paddingBottom: 0 }}\n                  checked={mdScrollable}\n                />\n              </p>\n            </ListItem>\n            <ListItem>\n              <Paper\n                id=\"markdown-preview\"\n                variant=\"outlined\"\n                style={{\n                  minHeight: textAreaHeight,\n                  margin: \".13rem\",\n                  width: \"100vw\",\n                  overflowY: \"visible\",\n                  paddingLeft: \".7rem\",\n                }}\n              >\n                <ReactMarkdown children={textAreaContent} />\n              </Paper>\n            </ListItem>\n            <Divider className={classes.devider} />\n            <ListItem style={{ paddingBottom: 0 }}>\n              <ListItemText primary=\"Add Memo to\" />\n            </ListItem>\n            <ListItem>\n              <FormControl\n                variant=\"outlined\"\n                fullWidth\n                className={classes.formControl}\n              >\n                <InputLabel id=\"demo-simple-select-outlined-label\">\n                  Add to\n                </InputLabel>\n                <Select\n                  labelId=\"demo-simple-select-outlined-label\"\n                  id=\"demo-simple-select-outlined\"\n                  value={addMemoTo}\n                  onChange={handleSelectChange}\n                  label=\"Add to\"\n                >\n                  <MenuItem value=\"allMemos\">\n                    <AllInboxIcon /> All Memos\n                  </MenuItem>\n                  <MenuItem value=\"hiddenMemos\">\n                    <VisibilityOffIcon /> Hidden\n                  </MenuItem>\n                  <MenuItem value=\"secureMemos\">\n                    <LockIcon /> Secure\n                  </MenuItem>\n                </Select>\n              </FormControl>\n            </ListItem>\n            <Divider className={classes.devider} />\n          </form>\n        </List>\n      </Dialog>\n    </div>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Fab from \"@material-ui/core/Fab\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport MoreIcon from \"@material-ui/icons/MoreVert\";\nimport TemporaryDrawer from \"./TemporaryDrawer\";\nimport EditMemo from \"./EditMemo\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport ReactMarkdown from \"react-markdown\";\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\n\n\nconst useStyles = makeStyles((theme) => ({\n  text: {\n    padding: theme.spacing(2, 2, 0),\n  },\n  paper: {\n    paddingBottom: 50,\n  },\n  list: {\n    marginBottom: theme.spacing(2),\n    minHeight: \"80vh\",\n    padding: \"1.5rem\",\n  },\n  subheader: {\n    backgroundColor: theme.palette.background.paper,\n  },\n  appBar: {\n    top: \"auto\",\n    bottom: 0,\n  },\n  grow: {\n    flexGrow: 1,\n  },\n  fabButton: {\n    position: \"absolute\",\n    zIndex: 1,\n    top: -30,\n    left: 0,\n    right: 0,\n    margin: \"0 auto\",\n  },\n}));\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nexport default function BottomAppBar() {\n  const classes = useStyles();\n  const [drawer, setDrawer] = useState(false);\n  const [createMemo, setCreateMemo] = useState(false);\n  const [snackBar, setSnackBar] = useState(false);\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const handleMenuClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleMenuClose = () => {\n    setAnchorEl(null);\n  };\n\n  const handleSnackBarClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n\n    setSnackBar(false);\n  };\n\n  const showSnackBar = (message, severity) => {\n    return (\n      <Snackbar\n        anchorOrigin={{ vertical: \"bottom\", horizontal: \"left\" }}\n        open={snackBar}\n        autoHideDuration={6000}\n        onClose={handleSnackBarClose}\n      >\n        <Alert onClose={handleSnackBarClose} severity={severity}>\n          {message}\n        </Alert>\n      </Snackbar>\n    );\n  };\n\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <Paper square className={classes.paper}>\n        <Typography className={classes.text} variant=\"h5\" gutterBottom>\n          Your Memo Heading\n        </Typography>\n        <List className={classes.list}>\n          <ReactMarkdown />\n        </List>\n      </Paper>\n      <AppBar position=\"fixed\" color=\"primary\" className={classes.appBar}>\n        <Toolbar>\n          <IconButton\n            onClick={() => {\n              drawer ? setDrawer(false) : setDrawer(true);\n              document.getElementById(\"openDrawer\").click();\n            }}\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n          >\n            <MenuIcon />\n          </IconButton>\n          <Tooltip title=\"Edit this Memo\" arrow>\n            <Fab\n              id=\"addBtn\"\n              color=\"secondary\"\n              aria-label=\"add\"\n              className={classes.fabButton}\n              onClick={() => {\n                createMemo\n                  ? setTimeout(() => {\n                      setCreateMemo(false);\n                    }, 500)\n                  : setCreateMemo(true);\n              }}\n            >\n              <EditIcon />\n            </Fab>\n          </Tooltip>\n          <div className={classes.grow} />\n          <Tooltip title=\"Search\" arrow>\n            <IconButton color=\"inherit\">\n              <SearchIcon />\n            </IconButton>\n          </Tooltip>\n          <Tooltip title=\"Options\" arrow>\n            <IconButton\n              aria-controls=\"simple-menu\"\n              edge=\"end\"\n              color=\"inherit\"\n              aria-aria-haspopup=\"true\"\n              onClick={handleMenuClick}\n            >\n              <MoreIcon />\n            </IconButton>\n          </Tooltip>\n          <Menu\n            id=\"simple-menu\"\n            anchorEl={anchorEl}\n            keepMounted\n            open={Boolean(anchorEl)}\n            onClose={handleMenuClose}\n          >\n            <MenuItem\n            id=\"editBtn\"\n              onClick={() => {\n                handleMenuClose();\n                createMemo\n                  ? setTimeout(() => {\n                      setCreateMemo(false);\n                    }, 500)\n                  : setCreateMemo(true);\n              }}\n            >\n              <EditIcon fontSize=\"small\" />\n              Edit\n            </MenuItem>\n            <MenuItem onClick={handleMenuClose}>\n              <DeleteIcon fontSize=\"small\" />\n              Delete\n            </MenuItem>\n            <MenuItem onClick={handleMenuClose}>\n              <HomeIcon fontSize=\"small\" />\n              Home\n            </MenuItem>\n          </Menu>\n        </Toolbar>\n      </AppBar>\n      <TemporaryDrawer anchor=\"left\" active={drawer} />\n      {snackBar ? showSnackBar(\"Memo updated successsfully..!\", \"success\") : null}\n      {createMemo ? <EditMemo showSnackBar={setSnackBar} /> : null}\n    </React.Fragment>\n  );\n}\n","import React, { Component, useEffect } from \"react\";\n// import logo from './logo.svg';\nimport \"./App.css\";\n\nimport $ from \"jquery\";\nconst CryptoJS = require(\"crypto-js\");\n\nimport SignIn from \"./Components/SignIn\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport SignUp from \"./Components/SignUp\";\nimport HomeViewMemos from \"./Components/HomeViewMemos\";\nimport MyProfile from \"./Components/MyProfile\";\nimport AboutUs from \"./Components/AboutUs\";\nimport ViewMemo from \"./Components/ViewMemo\";\nimport EditMemo from \"./Components/EditMemo\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport { Redirect } from \"react-router\";\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nconst clientStorageKey = \"SecureMemoStorage\";\nconst encKey = \"secure memo key\";\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userData: null,\n      userLoggedIn: false,\n      myMemos: [],\n      snackbar: {\n        openSnackbar: false,\n        msg: \"\",\n        type: \"success\",\n        position: { vertical: \"left\", horizontal: \"bottom\" },\n      },\n      backdropOpen: false,\n    };\n  }\n\n  BackdropClose = () => {\n    this.setState({ backdropOpen: false });\n  };\n  backdropToggle = () => {\n    this.setState({ backdropOpen: !this.state.backdropOpen });\n  };\n\n  encryptObj = (obj) => {\n    let encObj = {};\n    Object.keys(obj).map((itm) => {\n      encObj[itm] = CryptoJS.AES.encrypt(obj[itm], encKey).toString();\n    });\n    return encObj;\n  };\n\n  encUnSaltStr = (str) => {\n    return CryptoJS.AES.encrypt(str, CryptoJS.enc.Utf8.parse(encKey), {\n      iv: { words: [0, 0, 0, 0], sigBytes: 16 },\n    }).toString();\n  };\n\n  decryptToOrgObj = (obj) => {\n    let decObj = {};\n    Object.keys(obj).map((itm) => {\n      console.log(obj[itm]);\n      decObj[itm] = CryptoJS.AES.decrypt(obj[itm], encKey).toString(\n        CryptoJS.enc.Utf8\n      );\n      decObj[itm] = decObj[itm].replace(/['\"]+/g, \"\");\n    });\n    return decObj;\n  };\n\n  signUpUser = (userData) => {\n    this.backdropToggle();\n    var userEmail = userData.email;\n    delete userData.email;\n    userData = this.encryptObj(userData);\n    userData.email = this.encUnSaltStr(userEmail);\n    $.ajax({\n      method: \"post\",\n      url: \"./signup-user\",\n      data: userData,\n      success: (response) => {\n        if (response.status) {\n          this.backdropToggle();\n          this.setState({ userData: response.userData });\n          this.setState({ userLoggedIn: true });\n          this.verifyUserLogin();\n          <Redirect push to=\"./\" />;\n        } else {\n          this.backdropToggle();\n          this.setState({\n            snackbar: {\n              openSnackbar: true,\n              msg: `Can't sign up : ${response.errorMsg}`,\n              type: \"error\",\n              position: {\n                vertical: \"center\",\n                horizontal: \"top\",\n              },\n            },\n          });\n        }\n      },\n    });\n  };\n\n  signInUser = (userData) => {\n    this.backdropToggle();\n    var userEmail = userData.email;\n    delete userData.email;\n    userData = this.encryptObj(userData);\n    userData.email = this.encUnSaltStr(userEmail);\n    console.log(userData);\n    $.ajax({\n      method: \"post\",\n      url: \"./signin-user\",\n      data: userData,\n      success: (response) => {\n        if (response.status) {\n          this.backdropToggle();\n          this.setState({ userData: response.userData });\n          this.setState({ userLoggedIn: true });\n          this.verifyUserLogin();\n          <Redirect push to=\"./\" />;\n        } else {\n          this.backdropToggle();\n          this.setState({\n            snackbar: {\n              openSnackbar: true,\n              msg: `Can't sign in : ${response.errorMsg}`,\n              type: \"error\",\n              position: {\n                vertical: \"center\",\n                horizontal: \"top\",\n              },\n            },\n          });\n        }\n      },\n    });\n  };\n\n  logoutUser = () => {\n    this.setState({ userLoggedIn: false, userData: null });\n    window.localStorage.setItem(clientStorageKey, \"null\");\n    window.location.reload();\n  };\n\n  getLoggedInUserData = () => {\n    return JSON.parse(window.localStorage.getItem(clientStorageKey));\n  };\n\n  createUserMemo = (memoData) => {\n    this.backdropToggle();\n    memoData = this.encryptObj(memoData);\n    var userData = this.getLoggedInUserData();\n    Object.assign(userData, memoData);\n    console.log(userData);\n    $.ajax({\n      method: \"post\",\n      url: \"./create-user-memo\",\n      data: userData,\n      success: (response) => {\n        this.backdropToggle();\n        if (response.status) {\n          this.setState({\n            snackbar: {\n              openSnackbar: true,\n              msg: response.firstMemo\n                ? \"Successfully saved your first memo.!\"\n                : \"Successfully saved your memo.!\",\n              type: \"success\",\n              position: {\n                vertical: \"left\",\n                horizontal: \"bottom\",\n              },\n            },\n          });\n        } else {\n          this.setState({\n            snackbar: {\n              openSnackbar: true,\n              msg: \"Oops..! Something went wrong, Try again.\",\n              type: \"error\",\n              position: {\n                vertical: \"left\",\n                horizontal: \"bottom\",\n              },\n            },\n          });\n        }\n      },\n    });\n  };\n\n  updateUserMemo = (userId, memoId, memoData) => {\n    alert(\"updateUserMemo\");\n  };\n\n  getUserMemo = (userId, memoId) => {\n    alert(\"editUserMemo\");\n  };\n\n  dltUserMemo = (userId, memoId) => {\n    alert(\"dltUserMemo\");\n  };\n\n  editUserMemo = (userId, memoId) => {\n    alert(\"editUserMemo\");\n  };\n\n  SnackbarClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n\n    this.setState({ snackbar: { openSnackbar: false } });\n  };\n\n  verifyUserLogin = () => {\n    let userData = this.state.userData;\n    let userLocalStorage = JSON.parse(\n      window.localStorage.getItem(clientStorageKey)\n    );\n    console.log(userData);\n    if (userLocalStorage) {\n      console.log(userData);\n      this.setState({\n        userData: userLocalStorage,\n        userLoggedIn: true,\n      });\n    } else {\n      window.localStorage.setItem(clientStorageKey, JSON.stringify(userData));\n    }\n    console.log(this.state.userData);\n  };\n\n  componentDidMount = () => {\n    this.verifyUserLogin();\n  };\n\n  render() {\n    console.log(JSON.parse(window.localStorage.getItem(clientStorageKey)));\n    console.log(this.state.userLoggedIn);\n\n    return (\n      <Router>\n        {/* Backdrop */}\n        <Backdrop style={{ zIndex: 999999 }} open={this.state.backdropOpen}>\n          <CircularProgress color=\"inherit\" />\n        </Backdrop>\n        {/* Alert a snackbar */}\n        {this.state.snackbar.openSnackbar ? (\n          <Snackbar\n            open={this.state.snackbar.openSnackbar}\n            autoHideDuration={6000}\n            style={{position:\"absolute\"}}\n            onClose={this.SnackbarClose}\n            anchorOrigin={this.state.snackbar.position}\n          >\n            <Alert\n              onClose={this.SnackbarClose}\n              severity={this.state.snackbar.type}\n            >\n              {this.state.snackbar.msg}\n            </Alert>\n          </Snackbar>\n        ) : null}\n        <Switch>\n          <Route exact path=\"/\" component={SignIn}>\n            {this.state.userLoggedIn ? (\n              <HomeViewMemos\n                decryptToOrgObj={this.decryptToOrgObj}\n                getLoggedInUserData={this.getLoggedInUserData}\n                createUserMemo={this.createUserMemo}\n                logoutUser={this.logoutUser}\n              />\n            ) : (\n              <Redirect push to=\"./signup\" />\n            )}\n          </Route>\n          <Route path=\"/signin\">\n            {this.state.userLoggedIn ? (\n              <Redirect push to=\"./\" />\n            ) : (\n              <SignIn signInUser={this.signInUser} />\n            )}\n          </Route>\n          <Route path=\"/signup\">\n            {this.state.userLoggedIn ? (\n              <Redirect push to=\"./\" />\n            ) : (\n              <SignUp signUpUser={this.signUpUser} />\n            )}\n          </Route>\n          <Route path=\"/my-memos\">\n            <HomeViewMemos logoutUser={this.logoutUser} />\n          </Route>\n          <Route path=\"/my-profile\">\n            <MyProfile />\n          </Route>\n          <Route path=\"/about-us\">\n            <AboutUs />\n          </Route>\n          <Route path=\"/view-memo/:id\">\n            <ViewMemo />\n          </Route>\n          <Route path=\"/edit-memo/:id\">\n            <EditMemo />\n          </Route>\n        </Switch>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}