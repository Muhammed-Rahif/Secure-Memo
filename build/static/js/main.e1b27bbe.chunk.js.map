{"version":3,"sources":["Components/SignIn.js","Components/SignUp.js","Components/TemporaryDrawer.js","Components/CreateMemo.js","Components/HomeViewMemos.js","Components/MyProfile.js","Components/AboutUs.js","Components/EditMemo.js","Components/ViewMemo.js","Components/NotFound.js","App.js","index.js"],"names":["Copyright","Typography","variant","color","align","Link","href","Date","getFullYear","createMuiTheme","palette","type","useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","secondary","main","form","width","submit","SignIn","props","classes","useForm","reValidateMode","register","handleSubmit","errors","formState","Container","component","maxWidth","CssBaseline","className","Avatar","onSubmit","formData","signInUser","TextField","fullWidth","id","label","autoComplete","autoFocus","required","pattern","error","email","helperText","minLength","password","Button","Grid","container","justify","item","Box","mt","SignUp","signUpUser","xs","sm","firstName","lastName","store","require","list","fullList","profileSection","height","justifyContent","padding","bg","background","profileIconStyles","root","orange","getContrastText","deepOrange","purple","deepPurple","small","large","TemporaryDrawer","anchor","React","useState","userData","setUserData","profileIconClasses","top","left","bottom","right","state","setState","history","useHistory","toggleDrawer","open","event","key","useEffect","$","ajax","url","method","data","userId","get","success","active","document","getElementById","click","Fragment","style","hidden","onClick","Drawer","onClose","clsx","role","onKeyDown","List","charAt","toUpperCase","Divider","ListItem","push","button","ListItemIcon","ListItemText","primary","disabled","Badge","badgeContent","appBar","position","title","marginLeft","flex","devider","Transition","forwardRef","ref","Slide","direction","FullScreenDialog","setOpen","textAreaHeight","setTextAreaHeight","mdScrollable","setMdScrollable","textAreaContent","setTextAreaContent","defaultValues","memoType","modified","setValue","setTimeout","clientHeight","handleClose","Dialog","fullScreen","TransitionComponent","createUserMemo","AppBar","Toolbar","Tooltip","arrow","IconButton","edge","aria-label","startIcon","paddingBottom","memoTitle","onChange","e","target","value","shouldValidate","textAlign","rows","multiline","val","updateMarkdown","memoBody","Switch","checked","overflowY","changePreviewScrollable","Paper","minHeight","overflowX","paddingLeft","children","FormControl","formControl","InputLabel","Select","defaultValue","labelId","MenuItem","text","marginBottom","subheader","grow","flexGrow","fabButton","zIndex","BottomAppBar","drawer","setDrawer","createMemo","setCreateMemo","anchorEl","setAnchorEl","Array","memos","setMemos","loadingMemos","setLoadingMemos","handleMenuClose","getLoggedInUserData","allMemos","reverse","dateText","square","gutterBottom","CircularProgress","length","map","itm","indx","memoId","memoDate","prototype","addDays","days","date","this","valueOf","setDate","getDate","nowDate","yestDate","decryptToOrgObj","substring","tempDate","dateOptions","year","weekday","month","day","toLocaleDateString","ListSubheader","getDateComponent","window","location","ListItemAvatar","alt","whiteSpace","overflow","textOverflow","Fab","aria-controls","aria-haspopup","currentTarget","keepMounted","Boolean","logoutUser","menuButton","marginRight","toolbar","paddingTop","headerDiv","backgroundPosition","backgroundRepeat","backgroundSize","bodyDiv","textFields","ProminentAppBar","imgBg","noWrap","focused","footer","grey","StickyFooter","prefersDarkMode","useMediaQuery","useMemo","ThemeProvider","addMemoTo","setAddMemoTo","memoHeading","setMemoHeading","switchHandler","console","log","updateUserMemo","Alert","elevation","message","severity","editMemo","setEditMemo","snackBar","setSnackBar","memoData","setMemoData","openAlert","setOpenAlert","loadingMemo","setLoadingMemo","handleAlertClose","handleSnackBarClose","reason","lastIndexOf","fontSize","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","showSnackBar","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","dltUserMemo","wrapper","NotFound","CryptoJS","clientStorageKey","encKey","App","backdropClose","backdropOpen","backdropToggle","encryptObj","obj","encObj","Object","keys","AES","encrypt","toString","encUnSaltStr","str","enc","Utf8","parse","iv","words","sigBytes","decObj","decrypt","replace","userEmail","response","status","set","userLoggedIn","verifyUserLogin","snackbar","openSnackbar","msg","errorMsg","undefined","remove","reload","assign","firstMemo","getUserMemo","alert","SnackbarClose","componentWillMount","myMemos","Backdrop","exact","path","to","Component","ReactDOM","render"],"mappings":"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","file":"static/js/main.e1b27bbe.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Link from \"@material-ui/core/Link\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\n\nimport { useForm } from \"react-hook-form\";\nimport { createMuiTheme } from \"@material-ui/core/styles\";\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {\"Copyright © \"}\n      <Link color=\"inherit\" href=\"./\">\n        Secure Memo\n      </Link>{\" \"}\n      {new Date().getFullYear()}\n      {\".\"}\n    </Typography>\n  );\n}\n\nconst darkTheme = createMuiTheme({\n  palette: {\n    type: \"dark\",\n  },\n});\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport default function SignIn(props) {\n  const classes = useStyles();\n  var emailPattern = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm({ reValidateMode: \"onChange\" });\n  const onSubmit = (formData) => {\n    props.signInUser(formData);\n  };\n  \n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign in\n        </Typography>\n        <form className={classes.form} onSubmit={handleSubmit(onSubmit)}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            fullWidth\n            id=\"email\"\n            label=\"Email Address\"\n            autoComplete=\"off\"\n            autoFocus\n            {...register(\"email\", {\n              required: true,\n              pattern: emailPattern,\n            })}\n            error={errors.email ? true : false}\n            helperText={\n              errors.email\n                ? errors.email.type === \"required\"\n                  ? \"Email address is required.\"\n                  : \"Type a valid email address.\"\n                : \"Type your email address.\"\n            }\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            fullWidth\n            label=\"Password\"\n            type=\"password\"\n            id=\"password\"\n            autoComplete=\"off\"\n            {...register(\"password\", { required: true, minLength: 8 })}\n            error={errors.password ? true : false}\n            helperText={\n              errors.password\n                ? errors.password.type === \"required\"\n                  ? \"Password is required.\"\n                  : \"Minimum lenght is 8.\"\n                : \"Type your password.\"\n            }\n          />\n          {/* <FormControlLabel\n            control={<Checkbox value=\"remember\" color=\"primary\" />}\n            label=\"Remember me\"\n          /> */}\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Sign In\n          </Button>\n          <Grid container justify=\"flex-end\">\n            {/* <Grid item xs>\n              <Link href=\"\" aria-disabled variant=\"body2\">\n                Forgot password?\n              </Link>\n            </Grid> */}\n            <Grid item>\n              <Link href=\"/signup\" variant=\"body2\">\n                {\"Don't have an account? Sign Up\"}\n              </Link>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n      <Box mt={8}>\n        <Copyright />\n      </Box>\n    </Container>\n  );\n}\n","import React, { useState } from \"react\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Link from \"@material-ui/core/Link\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\n\nimport { useForm } from \"react-hook-form\";\nimport { FormatIndentIncreaseTwoTone } from \"@material-ui/icons\";\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {\"Copyright © \"}\n      <Link color=\"inherit\" href=\"./\">\n        Secure Memo\n      </Link>{\" \"}\n      {new Date().getFullYear()}\n      {\".\"}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\n\nexport default function SignUp(props) {\n  const classes = useStyles();\n  var emailPattern = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm({ reValidateMode: \"onChange\" });\n\n  const onSubmit = (formData) => {\n    props.signUpUser(formData)\n  };\n  \n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign up\n        </Typography>\n        <form className={classes.form} onSubmit={handleSubmit(onSubmit)}>\n          <Grid container spacing={2}>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                autoComplete=\"fname\"\n                variant=\"outlined\"\n                fullWidth\n                id=\"firstName\"\n                label=\"First Name\"\n                autoFocus\n                autoComplete=\"off\"\n                {...register(\"firstName\", { required: true, minLength: 3 })}\n                error={errors.firstName ? true : false}\n                helperText={\n                  errors.firstName\n                    ? errors.firstName.type === \"required\"\n                      ? \"First name is required.\"\n                      : \" Minimum lenght 3.\"\n                    : \"Type your first name.\"\n                }\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                variant=\"outlined\"\n                fullWidth\n                id=\"lastName\"\n                label=\"Last Name\"\n                autoComplete=\"off\"\n                {...register(\"lastName\", { required: true, minLength: 3 })}\n                error={errors.lastName ? true : false}\n                helperText={\n                  errors.lastName\n                    ? errors.lastName.type === \"required\"\n                      ? \"Last name is required.\"\n                      : \" Minimum lenght 3.\"\n                    : \"Type your last name.\"\n                }\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                fullWidth\n                id=\"email\"\n                label=\"Email Address\"\n                autoComplete=\"off\"\n                {...register(\"email\", {\n                  required: true,\n                  pattern: emailPattern,\n                })}\n                error={errors.email ? true : false}\n                helperText={\n                  errors.email\n                    ? errors.email.type === \"required\"\n                      ? \"Email address is required.\"\n                      : \"Type a valid email address.\"\n                    : \"Type your email address.\"\n                }\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                fullWidth\n                label=\"Password\"\n                type=\"password\"\n                id=\"password\"\n                autoComplete=\"off\"\n                {...register(\"password\", { required: true, minLength: 8 })}\n                error={errors.password ? true : false}\n                helperText={\n                  errors.password\n                    ? errors.password.type === \"required\"\n                      ? \"Password is required.\"\n                      : \"Minimum lenght is 8.\"\n                    : \"Type your password.\"\n                }\n              />\n            </Grid>\n            {/* <Grid item xs={12}>\n              <FormControlLabel\n                control={<Checkbox value=\"allowExtraEmails\" color=\"primary\" />}\n                label=\"I want to receive inspiration, marketing promotions and updates via email.\"\n              />\n            </Grid> */}\n          </Grid>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Sign Up\n          </Button>\n          <Grid container justify=\"flex-end\">\n            <Grid item>\n              <Link href=\"/signin\" variant=\"body2\">\n                Already have an account? Sign in\n              </Link>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n      <Box mt={5}>\n        <Copyright />\n      </Box>\n    </Container>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport clsx from \"clsx\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport Button from \"@material-ui/core/Button\";\nimport List from \"@material-ui/core/List\";\nimport Divider from \"@material-ui/core/Divider\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport InboxIcon from \"@material-ui/icons/MoveToInbox\";\nimport MailIcon from \"@material-ui/icons/Mail\";\nimport AllInboxIcon from \"@material-ui/icons/AllInbox\";\nimport VisibilityOffIcon from \"@material-ui/icons/VisibilityOff\";\nimport LockIcon from \"@material-ui/icons/Lock\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport { deepOrange, deepPurple } from \"@material-ui/core/colors\";\nimport InfoIcon from \"@material-ui/icons/Info\";\nimport { useHistory } from \"react-router-dom\";\nimport Badge from \"@material-ui/core/Badge\";\nconst clientStorageKey = \"SecureMemoStorage\";\nimport PersonIcon from '@material-ui/icons/Person';\nimport $ from \"jquery\";\nvar store = require(\"store\");\n\nconst useStyles = makeStyles({\n  list: {\n    width: 250,\n  },\n  fullList: {\n    width: \"auto\",\n  },\n  profileSection: {\n    width: \"100%\",\n    height: \"10rem\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    padding: \"0 !important\",\n  },\n  bg: {\n    background: \"#3f51b5\",\n    height: \"100%\",\n    width: \"100%\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    color: \"white\",\n  },\n});\n\nconst profileIconStyles = makeStyles((theme) => ({\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(1),\n    },\n  },\n  orange: {\n    color: theme.palette.getContrastText(deepOrange[500]),\n    backgroundColor: deepOrange[500],\n  },\n  purple: {\n    color: theme.palette.getContrastText(deepPurple[500]),\n    backgroundColor: deepPurple[500],\n  },\n  small: {\n    width: theme.spacing(3),\n    height: theme.spacing(3),\n  },\n  large: {\n    width: theme.spacing(7),\n    height: theme.spacing(7),\n  },\n}));\n\nexport default function TemporaryDrawer(props) {\n  const anchor = props.anchor;\n  const [userData, setUserData] = React.useState();\n  const classes = useStyles();\n  const profileIconClasses = profileIconStyles();\n  const [state, setState] = React.useState({\n    top: false,\n    left: false,\n    bottom: false,\n    right: false,\n  });\n  const history = useHistory();\n\n  const toggleDrawer = (anchor, open) => (event) => {\n    if (\n      event.type === \"keydown\" &&\n      (event.key === \"Tab\" || event.key === \"Shift\")\n    ) {\n      return;\n    }\n\n    setState({ ...state, [anchor]: open });\n  };\n\n  const getUserData = () => {\n    $.ajax({\n      url: \"/get-user-data\",\n      method: \"post\",\n      data: {\n        userId: store.get(clientStorageKey).userId,\n      },\n      success: (userData) => {\n        setUserData(userData);\n      },\n    });\n  };\n\n  React.useEffect(() => {\n    setUserData(getUserData());\n  }, []);\n\n  const list = (anchor) => (\n    <div\n      className={clsx(classes.list, {\n        [classes.fullList]: anchor === \"top\" || anchor === \"bottom\",\n      })}\n      role=\"presentation\"\n      onClick={toggleDrawer(anchor, false)}\n      onKeyDown={toggleDrawer(anchor, false)}\n    >\n      <List className={classes.profileSection}>\n        <div className={classes.bg}>\n          <Avatar\n            className={[profileIconClasses.orange, profileIconClasses.large]}\n          >\n            {userData\n              ? userData.firstName.charAt(0).toUpperCase() +\n                userData.lastName.charAt(0)\n              : null}\n          </Avatar>\n          <p>\n            {userData ? userData.firstName + \" \" + userData.lastName : null}\n          </p>\n        </div>\n      </List>\n      <Divider />\n      <List>\n        <ListItem\n          onClick={() => {\n            history.push(\"/all-memos\");\n          }}\n          button\n          key=\"All Memos\"\n        >\n          <ListItemIcon>\n            <AllInboxIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"All Memos\" />\n        </ListItem>\n        <ListItem\n          onClick={() => {\n            history.push(\"/my-profile\");\n          }}\n          button\n          key=\"My Profile\"\n        >\n          <ListItemIcon>\n            <PersonIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"My Profile\" />\n        </ListItem>\n        <ListItem disabled=\"true\" button key=\"Hidden Memos\">\n          <ListItemIcon>\n            <VisibilityOffIcon />\n          </ListItemIcon>\n          <Badge\n            badgeContent={\"Coming soon\"}\n            color=\"primary\"\n            variant=\"standard\"\n          >\n            <ListItemText primary=\"Hidden Memos\" />\n          </Badge>\n        </ListItem>\n        <ListItem disabled=\"true\" button key=\"Secure Memos\">\n          <ListItemIcon>\n            <LockIcon />\n          </ListItemIcon>\n          <Badge\n            badgeContent={\"Coming soon\"}\n            color=\"primary\"\n            variant=\"standard\"\n          >\n            <ListItemText primary=\"Secure Memos\" />\n          </Badge>\n        </ListItem>\n        <Divider />\n        <ListItem\n          onClick={() => {\n            history.push(\"/about-us\");\n          }}\n          button\n          key=\"Secure Memos\"\n        >\n          <ListItemIcon>\n            <InfoIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"About Us\" />\n        </ListItem>\n      </List>\n    </div>\n  );\n  useEffect(() => {\n    if (props.active) {\n      document.getElementById(\"openDrawer\").click();\n    }\n  }, []);\n  return (\n    <div>\n      {\n        <React.Fragment key={anchor}>\n          <Button\n            style={{ display: \"none\" }}\n            hidden\n            id=\"openDrawer\"\n            onClick={toggleDrawer(anchor, true)}\n          >\n            {anchor}\n          </Button>\n          <Drawer\n            anchor={anchor}\n            open={state[anchor]}\n            onClose={toggleDrawer(anchor, false)}\n          >\n            {list(anchor)}\n          </Drawer>\n        </React.Fragment>\n      }\n    </div>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport List from \"@material-ui/core/List\";\nimport Divider from \"@material-ui/core/Divider\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport Slide from \"@material-ui/core/Slide\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport AllInboxIcon from \"@material-ui/icons/AllInbox\";\nimport VisibilityOffIcon from \"@material-ui/icons/VisibilityOff\";\nimport LockIcon from \"@material-ui/icons/Lock\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport Paper from \"@material-ui/core/Paper\";\nimport ReactMarkdown from \"react-markdown\";\nimport Switch from \"@material-ui/core/Switch\";\nimport $ from \"jquery\";\nimport { Badge } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    position: \"relative\",\n  },\n  title: {\n    marginLeft: theme.spacing(2),\n    flex: 1,\n  },\n  devider: {\n    maxWidth: \"95%\",\n    margin: \"auto\",\n  },\n}));\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport default function FullScreenDialog(props) {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const [textAreaHeight, setTextAreaHeight] = React.useState(null);\n  const [mdScrollable, setMdScrollable] = React.useState(false);\n  const [textAreaContent, setTextAreaContent] = React.useState(\"\");\n  const {\n    register,\n    setValue,\n    handleSubmit,\n    formState: { errors },\n  } = useForm({\n    reValidateMode: \"onChange\",\n    defaultValues: { memoType: \"allMemos\", modified: \"false\" },\n  });\n\n  const onSubmit = (formData) => {\n    props.createUserMemo(formData);\n    handleClose();\n  };\n\n  const changePreviewScrollable = (event) => {\n    setMdScrollable(event.target.checked);\n    if (mdScrollable) {\n      document.getElementById(\"markdown-preview\").style.overflowY = \"visible\";\n      document.getElementById(\"markdown-preview\").style.height = \"auto\";\n    } else {\n      document.getElementById(\"markdown-preview\").style.overflowY = \"scroll\";\n      document.getElementById(\"markdown-preview\").style.height = textAreaHeight;\n    }\n  };\n\n  useEffect(() => {\n    setOpen(true);\n    setTimeout(() => {\n      setTextAreaHeight(\n        document.getElementById(\"bodyTextarea\").clientHeight +\n          (document.getElementById(\"bodyTextarea\").clientHeight * 2.5) / 10 +\n          \"px\"\n      );\n    }, 500);\n  }, []);\n\n  const handleClose = () => {\n    document.getElementById(\"addBtn\").click();\n    setOpen(false);\n  };\n\n  const updateMarkdown = (e) => {\n    setTextAreaContent($(\"#bodyTextarea\").val());\n    setTextAreaContent(e.target.value);\n  };\n\n  const switchHandler = (event) => {\n    setMdScrollable(document.getElementById(\"mdSwitch\").checked);\n    changePreviewScrollable(event);\n  };\n\n  return (\n    <div>\n      <Dialog\n        fullScreen\n        open={open}\n        onClose={handleClose}\n        TransitionComponent={Transition}\n      >\n        <form\n          className={classes.form}\n          autoComplete=\"off\"\n          onSubmit={handleSubmit(onSubmit)}\n        >\n          <input hidden=\"true\" ref={register(\"modified\")} />\n          <AppBar className={classes.appBar}>\n            <Toolbar>\n              <Tooltip title=\"Cancel\" arrow>\n                <IconButton\n                  edge=\"start\"\n                  color=\"inherit\"\n                  onClick={handleClose}\n                  aria-label=\"close\"\n                >\n                  <CloseIcon />\n                </IconButton>\n              </Tooltip>\n              <Typography variant=\"h6\" className={classes.title}>\n                Create a new Memo\n              </Typography>\n              <Tooltip title=\"Save Memo\" arrow>\n                <Button\n                  autoFocus\n                  color=\"inherit\"\n                  variant=\"outlined\"\n                  startIcon={<SaveIcon />}\n                  type=\"submit\"\n                >\n                  save\n                </Button>\n              </Tooltip>\n            </Toolbar>\n          </AppBar>\n          <List>\n            <ListItem style={{ paddingBottom: 0 }}>\n              <ListItemText primary=\"Memo Heading\" />\n            </ListItem>\n            <ListItem>\n              <TextField\n                id=\"outlined-basic\"\n                label=\"Memo Heading\"\n                variant=\"outlined\"\n                fullWidth\n                ref={register(\"memoTitle\", { required: true, minLength: 10 })}\n                error={errors.memoTitle ? true : false}\n                autoFocus={errors.memoTitle ? true : false}\n                onChange={(e) => {\n                  setValue(\"memoTitle\", e.target.value, {\n                    shouldValidate: true,\n                  });\n                }}\n                helperText={\n                  errors.memoTitle\n                    ? errors.memoTitle.type === \"required\"\n                      ? \"Memo Title is required.\"\n                      : \"Memo Title minimum lenght is 10.\"\n                    : \"Memo Title here.\"\n                }\n              />\n            </ListItem>\n            <Divider className={classes.devider} />\n            <ListItem style={{ paddingBottom: 0 }}>\n              <ListItemText primary=\"Memo Body\" />\n              <p style={{ textAlign: \"right\" }}>\n                <small>* Markdown enabled</small>\n              </p>\n            </ListItem>\n            <ListItem>\n              <TextField\n                id=\"bodyTextarea\"\n                label=\"Memo Body\"\n                variant=\"outlined\"\n                rows=\"7\"\n                multiline={true}\n                value={textAreaContent}\n                fullWidth\n                aria-label=\"textarea\"\n                onChange={(e) => {\n                  updateMarkdown(e);\n                  setValue(\"memoBody\", e.target.value, {\n                    shouldValidate: true,\n                  });\n                }}\n                ref={register(\"memoBody\", {\n                  required: true,\n                  minLength: 12,\n                })}\n                autoFocus={errors.memoBody ? true : false}\n                error={errors.memoBody ? true : false}\n                helperText={\n                  errors.memoBody\n                    ? errors.memoBody.type === \"required\"\n                      ? \"Memo body is required.\"\n                      : \"Memo body Minimum lenght is 12.\"\n                    : \"Memo Body here.\"\n                }\n              />\n            </ListItem>\n            <ListItem style={{ paddingBottom: 0 }}>\n              <ListItemText primary=\"Memo Body Preview\" />\n              <p style={{ textAlign: \"right\" }}>\n                Scrollable\n                <Switch\n                  id=\"mdSwitch\"\n                  onChange={switchHandler}\n                  color=\"primary\"\n                  checked={mdScrollable}\n                />\n              </p>\n            </ListItem>\n            <ListItem>\n              <Paper\n                id=\"markdown-preview\"\n                variant=\"outlined\"\n                style={{\n                  minHeight: textAreaHeight,\n                  margin: \".13rem\",\n                  width: \"100vw\",\n                  overflowX: \"scroll\",\n                  overflowY: \"visible\",\n                  paddingLeft: \".7rem\",\n                }}\n              >\n                <ReactMarkdown children={textAreaContent} />\n              </Paper>\n            </ListItem>\n            <Divider className={classes.devider} />\n            <ListItem style={{ paddingBottom: 0 }}>\n              <ListItemText primary=\"Add Memo to\" />\n            </ListItem>\n            <ListItem>\n              <FormControl\n                variant=\"outlined\"\n                fullWidth\n                className={classes.formControl}\n              >\n                <InputLabel id=\"demo-simple-select-outlined-label\">\n                  Add to\n                </InputLabel>\n                <Select\n                  defaultValue=\"allMemos\"\n                  labelId=\"demo-simple-select-outlined-label\"\n                  id=\"demo-simple-select-outlined\"\n                  label=\"Add to\"\n                  onChange={(e) => {\n                    setValue(\"memoType\", e.target.value, {\n                      shouldValidate: true,\n                    });\n                  }}\n                  {...register(\"memoType\", { required: true })}\n                  autoFocus={errors.memoType ? true : false}\n                  error={errors.memoType ? true : false}\n                  helperText=\"Memo will add to all memos section by default.\"\n                >\n                  <MenuItem value=\"allMemos\">\n                    <AllInboxIcon /> All Memos\n                  </MenuItem>\n                  <MenuItem disabled=\"true\" value=\"hiddenMemos\">\n                    <Badge\n                      badgeContent={\"Coming soon\"}\n                      color=\"primary\"\n                      variant=\"standard\"\n                    >\n                      <VisibilityOffIcon /> Hidden\n                    </Badge>\n                  </MenuItem>\n                  <MenuItem disabled=\"true\" value=\"secureMemos\">\n                    <Badge\n                      badgeContent={\"Coming soon\"}\n                      color=\"primary\"\n                      variant=\"standard\"\n                    >\n                      <LockIcon /> Secure\n                    </Badge>\n                  </MenuItem>\n                </Select>\n              </FormControl>\n            </ListItem>\n            <Divider className={classes.devider} />\n          </List>\n        </form>\n      </Dialog>\n    </div>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Fab from \"@material-ui/core/Fab\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport MoreIcon from \"@material-ui/icons/MoreVert\";\nimport TemporaryDrawer from \"./TemporaryDrawer\";\nimport CreateMemo from \"./CreateMemo\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nconst clientStorageKey = \"SecureMemoStorage\";\nimport $ from \"jquery\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { useHistory } from \"react-router\";\n\n// {messages.map(({ id, primary, secondary, person }) => (\n//   <React.Fragment key={id}>\n//     {id === 1 && (\n//       <ListSubheader className={classes.subheader}>\n//         Today\n//       </ListSubheader>\n//     )}\n//     {id === 3 && (\n//       <ListSubheader className={classes.subheader}>\n//         Yesterday\n//       </ListSubheader>\n//     )}\n//     <ListItem button>\n//       <ListItemAvatar>\n//         <Avatar alt=\"Profile Picture\">\n//           {primary.charAt(0).toUpperCase()}\n//         </Avatar>\n//       </ListItemAvatar>\n//       <ListItemText\n//         onClick={() => {\n//           window.location.href = \"./view-memo/1234\";\n//         }}\n//         primary={primary}\n//         secondary={secondary}\n//       />\n//     </ListItem>\n//   </React.Fragment>\n// ))}\n\nconst useStyles = makeStyles((theme) => ({\n  text: {\n    padding: theme.spacing(2, 2, 0),\n  },\n  paper: {\n    paddingBottom: 50,\n  },\n  list: {\n    marginBottom: theme.spacing(2),\n    minHeight: \"80vh\",\n  },\n  subheader: {\n    backgroundColor: theme.palette.background.paper,\n  },\n  appBar: {\n    top: \"auto\",\n    bottom: 0,\n  },\n  grow: {\n    flexGrow: 1,\n  },\n  fabButton: {\n    position: \"absolute\",\n    zIndex: 1,\n    top: -30,\n    left: 0,\n    right: 0,\n    margin: \"0 auto\",\n  },\n}));\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nexport default function BottomAppBar(props) {\n  const classes = useStyles();\n  const [drawer, setDrawer] = useState(false);\n  const [createMemo, setCreateMemo] = useState(false);\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [memos, setMemos] = useState(new Array());\n  const [loadingMemos, setLoadingMemos] = useState(true);\n  var history = useHistory();\n\n  const handleMenuClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleMenuClose = () => {\n    setAnchorEl(null);\n  };\n\n  React.useEffect(() => {\n    let userData = props.getLoggedInUserData();\n    $.ajax({\n      url: \"/get-user-memos\",\n      data: {\n        userId: userData.userId,\n        memoType: \"allMemos\",\n      },\n      method: \"post\",\n      success: (allMemos) => {\n        allMemos.reverse();\n        setMemos(allMemos);\n        setLoadingMemos(false);\n      },\n    });\n  });\n\n  var dateText = null;\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <Paper square className={classes.paper}>\n        <Typography className={classes.text} variant=\"h5\" gutterBottom>\n          All Memos\n        </Typography>\n        {loadingMemos ? (\n          <div\n            style={{\n              display: \"flex\",\n              alignItems: \"center\",\n              justifyContent: \"center\",\n              margin: \"2.5rem\",\n            }}\n          >\n            <CircularProgress />\n          </div>\n        ) : null}\n        <List className={classes.list}>\n          {memos.length === 0 && !loadingMemos? (\n            <ListItem>\n              <ListItemText\n                style={{\n                  whiteSpace: \"nowrap\",\n                  overflow: \"hidden\",\n                  textOverflow: \"ellipsis\",\n                  maxWidth: \"65vw\",\n                }}\n                primary=\"Nothing to show!\"\n                secondary=\"No memos created yet..\"\n              />\n            </ListItem>\n          ) : (\n            memos.map((itm, indx) => {\n              let memoId = itm.memoId;\n              let memoDate = itm.memoDate;\n              memoDate = new Date(memoDate);\n              Date.prototype.addDays = function (days) {\n                var date = new Date(this.valueOf());\n                date.setDate(date.getDate() + days);\n                return date;\n              };\n              let nowDate = new Date();\n              let yestDate = new Date();\n              yestDate = yestDate.addDays(-1);\n              delete itm.memoId;\n              delete itm.memoDate;\n              itm = props.decryptToOrgObj(itm);\n              itm.memoBody = itm.memoBody.substring(0, 45);\n              var getDateComponent = () => {\n                var dateOptions = {\n                  year: \"numeric\",\n                  weekday: \"long\",\n                  month: \"long\",\n                  day: \"numeric\",\n                };\n                let tempDate;\n                if (\n                  memoDate.toLocaleDateString(\"en-US\", dateOptions) ===\n                  nowDate.toLocaleDateString(\"en-US\", dateOptions)\n                ) {\n                  tempDate = \"Today\";\n                } else if (\n                  memoDate.toLocaleDateString(\"en-US\", dateOptions) ===\n                  yestDate.toLocaleDateString(\"en-US\", dateOptions)\n                ) {\n                  tempDate = \"Yesterday\";\n                } else {\n                  tempDate = memoDate.toLocaleDateString(\"en-US\", dateOptions);\n                }\n                if (dateText !== tempDate) {\n                  dateText = tempDate;\n                  return (\n                    <ListSubheader className={classes.subheader}>\n                      {tempDate}\n                    </ListSubheader>\n                  );\n                }\n              };\n              return (\n                <React.Fragment key={indx}>\n                  {getDateComponent()}\n                  <ListItem\n                    onClick={() => {\n                      window.location.href = `./view-memo/${memoId}`;\n                    }}\n                    button\n                  >\n                    <ListItemAvatar>\n                      <Avatar alt=\"Profile Picture\">\n                        {itm.memoTitle.charAt(0).toUpperCase()}\n                      </Avatar>\n                    </ListItemAvatar>\n                    <ListItemText\n                      style={{\n                        whiteSpace: \"nowrap\",\n                        overflow: \"hidden\",\n                        textOverflow: \"ellipsis\",\n                        maxWidth: \"65vw\",\n                      }}\n                      primary={itm.memoTitle}\n                      secondary={itm.memoBody}\n                    />\n                  </ListItem>\n                </React.Fragment>\n              );\n            })\n          )}\n        </List>\n      </Paper>\n      <AppBar position=\"fixed\" color=\"primary\" className={classes.appBar}>\n        <Toolbar>\n          <IconButton\n            onClick={() => {\n              drawer ? setDrawer(false) : setDrawer(true);\n              document.getElementById(\"openDrawer\").click();\n            }}\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n          >\n            <MenuIcon />\n          </IconButton>\n          <Tooltip title=\"Create new Memo\" arrow>\n            <Fab\n              id=\"addBtn\"\n              color=\"secondary\"\n              aria-label=\"add\"\n              className={classes.fabButton}\n              onClick={() => {\n                createMemo\n                  ? setTimeout(() => {\n                      setCreateMemo(false);\n                    }, 500)\n                  : setCreateMemo(true);\n              }}\n            >\n              <AddIcon />\n            </Fab>\n          </Tooltip>\n          <div className={classes.grow} />\n          <Tooltip title=\"Search\" arrow>\n            <IconButton color=\"inherit\">\n              <SearchIcon />\n            </IconButton>\n          </Tooltip>\n          <Tooltip title=\"Options\" arrow>\n            <IconButton\n              aria-controls=\"simple-menu\"\n              edge=\"end\"\n              color=\"inherit\"\n              aria-haspopup=\"true\"\n              onClick={handleMenuClick}\n            >\n              <MoreIcon />\n            </IconButton>\n          </Tooltip>\n          <Menu\n            id=\"simple-menu\"\n            anchorEl={anchorEl}\n            keepMounted\n            open={Boolean(anchorEl)}\n            onClose={handleMenuClose}\n          >\n            <MenuItem\n              onClick={() => {\n                handleMenuClose();\n                history.push(\"/my-profile\");\n              }}\n            >\n              My Profile\n            </MenuItem>\n            <MenuItem\n              onClick={() => {\n                handleMenuClose();\n                history.push(\"/my-account\");\n              }}\n            >\n              My account\n            </MenuItem>\n            <MenuItem\n              onClick={() => {\n                handleMenuClose();\n                props.logoutUser();\n              }}\n            >\n              Logout\n            </MenuItem>\n          </Menu>\n        </Toolbar>\n      </AppBar>\n      <TemporaryDrawer anchor=\"left\" active={drawer} />\n      {createMemo ? <CreateMemo createUserMemo={props.createUserMemo} /> : null}\n    </React.Fragment>\n  );\n}\n","import React from \"react\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport MoreIcon from \"@material-ui/icons/MoreVert\";\nimport TemporaryDrawer from \"./TemporaryDrawer\";\nimport { Menu, MenuItem } from \"@material-ui/core\";\nimport { useHistory } from \"react-router-dom\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport { deepOrange, deepPurple } from \"@material-ui/core/colors\";\nimport TextField from \"@material-ui/core/TextField\";\nimport $ from \"jquery\";\nconst clientStorageKey = \"SecureMemoStorage\";\nimport store from \"store\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  toolbar: {\n    alignItems: \"center\",\n    paddingTop: theme.spacing(1),\n    paddingBottom: theme.spacing(2),\n  },\n  title: {\n    textAlign: \"center\",\n  },\n  headerDiv: {\n    flexGrow: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  bg: {\n    backgroundPosition: \"center\",\n    backgroundRepeat: \"no-repeat\",\n    backgroundSize: \"cover\",\n  },\n  orange: {\n    color: theme.palette.getContrastText(deepOrange[500]),\n    backgroundColor: deepOrange[500],\n  },\n  purple: {\n    color: theme.palette.getContrastText(deepPurple[500]),\n    backgroundColor: deepPurple[500],\n  },\n  bodyDiv: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    padding: \"3rem\",\n    flexDirection: \"column\",\n  },\n  textFields: {\n    margin: \".73rem\",\n  },\n}));\n\nexport default function ProminentAppBar(props) {\n  const classes = useStyles();\n  const [drawer, setDrawer] = React.useState(false);\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [userData, setUserData] = React.useState();\n  const history = useHistory();\n\n  const handleMenuClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleMenuClose = () => {\n    setAnchorEl(null);\n  };\n\n  const getUserData = () => {\n    $.ajax({\n      url: \"/get-user-data\",\n      method: \"post\",\n      data: {\n        userId: store.get(clientStorageKey).userId,\n      },\n      success: (userData) => {\n        setUserData(userData);\n      },\n    });\n  };\n\n  React.useEffect(() => {\n    setUserData(getUserData());\n  }, []);\n\n  return (\n    <div className={classes.root}>\n      <AppBar className={classes.imgBg} position=\"static\">\n        <Toolbar className={classes.toolbar}>\n          <IconButton\n            edge=\"start\"\n            className={classes.menuButton}\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={() => {\n              drawer ? setDrawer(false) : setDrawer(true);\n              document.getElementById(\"openDrawer\").click();\n            }}\n          >\n            <MenuIcon />\n          </IconButton>\n          <div className={classes.headerDiv}>\n            <Typography className={classes.title} variant=\"h5\" noWrap>\n              My Profile\n            </Typography>\n          </div>\n          <IconButton aria-label=\"search\" color=\"inherit\">\n            <SearchIcon />\n          </IconButton>\n          <IconButton\n            aria-label=\"display more actions\"\n            edge=\"end\"\n            color=\"inherit\"\n            onClick={handleMenuClick}\n          >\n            <MoreIcon />\n          </IconButton>\n          <Menu\n            id=\"simple-menu\"\n            anchorEl={anchorEl}\n            keepMounted\n            open={Boolean(anchorEl)}\n            onClose={handleMenuClose}\n          >\n            <MenuItem\n              onClick={() => {\n                handleMenuClose();\n                history.push(\"/\");\n              }}\n            >\n              Home\n            </MenuItem>\n            <MenuItem\n              onClick={() => {\n                handleMenuClose();\n                history.push(\"/my-account\");\n              }}\n            >\n              My account\n            </MenuItem>\n            <MenuItem\n              onClick={() => {\n                handleMenuClose();\n                props.logoutUser();\n              }}\n            >\n              Logout\n            </MenuItem>\n          </Menu>\n        </Toolbar>\n      </AppBar>\n      <div className={classes.bodyDiv}>\n        <TextField\n          id=\"outlined-basic\"\n          label=\"First Name\"\n          variant=\"outlined\"\n          value={userData ? userData.firstName : \"\"}\n          fullWidth\n          className={classes.textFields}\n          focused=\"true\"\n        />\n        <TextField\n          id=\"outlined-basic\"\n          label=\"Last Name\"\n          variant=\"outlined\"\n          value={userData ? userData.lastName : \"\"}\n          fullWidth\n          className={classes.textFields}\n          focused=\"true\"\n        />\n        <TextField\n          id=\"outlined-basic\"\n          label=\"Email\"\n          variant=\"outlined\"\n          value=\"example@email.in\"\n          fullWidth\n          className={classes.textFields}\n          focused=\"true\"\n          type=\"password\"\n        />\n        <TextField\n          id=\"outlined-basic\"\n          label=\"Password\"\n          variant=\"outlined\"\n          value=\"12345678\"\n          fullWidth\n          type=\"password\"\n          className={classes.textFields}\n          focused=\"true\"\n        />\n      </div>\n      <TemporaryDrawer anchor=\"left\" active={drawer} />\n    </div>\n  );\n}\n","import React from \"react\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport Link from \"@material-ui/core/Link\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\">\n      {\"Copyright © \"}\n      <Link color=\"inherit\" href=\"./\">\n        Secure Memo\n      </Link>{\" \"}\n      {new Date().getFullYear()}\n      {\".\"}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    minHeight: \"100vh\",\n  },\n  main: {\n    marginTop: theme.spacing(8),\n    marginBottom: theme.spacing(2),\n  },\n  footer: {\n    padding: theme.spacing(3, 2),\n    marginTop: \"auto\",\n    backgroundColor:\n      theme.palette.type === \"dark\"\n        ? theme.palette.grey[200]\n        : theme.palette.grey[800],\n  },\n}));\n\nexport default function StickyFooter() {\n  const classes = useStyles();\n\n  const prefersDarkMode = useMediaQuery(\"(prefers-color-scheme: dark)\");\n\n  const theme = React.useMemo(\n    () =>\n      createMuiTheme({\n        palette: {\n          type: prefersDarkMode ? \"dark\" : \"light\",\n        },\n      }),\n    [prefersDarkMode]\n  );\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <div className={classes.root}>\n        <CssBaseline />\n        <Container component=\"main\" className={classes.main} maxWidth=\"sm\">\n          <Typography variant=\"h2\" component=\"h1\" gutterBottom>\n            <Link href=\"./\" style={{color:\"white\"}}>Secure Memo</Link>\n          </Typography>\n          <Typography variant=\"h5\" component=\"h2\" gutterBottom>\n            {\"This website created and maintained by \"}\n            <Link href=\"https://github.com/Muhammed-Rahif\" variant=\"h5\" style={{color:\"white\"}}>\n              <b>Muhammed Rahif.</b>\n            </Link>\n            <br />\n          </Typography>\n          <Typography variant=\"subtitle1\" component=\"h3\">\n            {\"I hope you will contact me for any inquiries...\"}\n          </Typography>\n          <Typography variant=\"body1\">Have a nice day.</Typography>\n        </Container>\n        <footer className={classes.footer}>\n          <Container maxWidth=\"sm\">\n            <Typography variant=\"body1\">\n              Made with{\" \"}\n              <Link variant=\"body1\" href=\"https://material-ui.com/\" style={{color:\"white\"}}>\n                React Material UI\n              </Link>\n            </Typography>\n            <Copyright />\n          </Container>\n        </footer>\n      </div>\n    </ThemeProvider>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport List from \"@material-ui/core/List\";\nimport Divider from \"@material-ui/core/Divider\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport Slide from \"@material-ui/core/Slide\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport AllInboxIcon from \"@material-ui/icons/AllInbox\";\nimport VisibilityOffIcon from \"@material-ui/icons/VisibilityOff\";\nimport LockIcon from \"@material-ui/icons/Lock\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport PublishIcon from \"@material-ui/icons/Publish\";\nimport Paper from \"@material-ui/core/Paper\";\nimport ReactMarkdown from \"react-markdown\";\nimport Switch from \"@material-ui/core/Switch\";\nimport { Badge } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    position: \"relative\",\n  },\n  title: {\n    marginLeft: theme.spacing(2),\n    flex: 1,\n  },\n  devider: {\n    maxWidth: \"95%\",\n    margin: \"auto\",\n  },\n}));\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport default function FullScreenDialog(props) {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  //   const [openSuccesSnackBar, setOpenSuccesSnackBar] = React.useState(false);\n  const [addMemoTo, setAddMemoTo] = React.useState(props.memoType);\n  const [textAreaHeight, setTextAreaHeight] = React.useState(null);\n  const [mdScrollable, setMdScrollable] = React.useState(false);\n  const [memoHeading, setMemoHeading] = React.useState(props.memoTitle);\n  const [textAreaContent, setTextAreaContent] = React.useState(props.memoBody);\n  const {\n    register,\n    setValue,\n    handleSubmit,\n    formState: { errors },\n  } = useForm({\n    reValidateMode: \"onChange\",\n    defaultValues: {\n      memoBody: props.memoBody,\n      memoTitle: props.memoTitle,\n      memoType: props.memoType,\n      modified: \"true\",\n      memoId: props.memoId,\n    },\n  });\n\n  const onSubmit = (formData) => {\n    console.log(formData);\n    props.updateUserMemo(formData);\n    handleClose();\n  };\n\n  const changePreviewScrollable = (event) => {\n    setMdScrollable(event.target.checked);\n    if (mdScrollable) {\n      document.getElementById(\"markdown-preview\").style.overflowY = \"visible\";\n      document.getElementById(\"markdown-preview\").style.height = \"auto\";\n    } else {\n      document.getElementById(\"markdown-preview\").style.overflowY = \"scroll\";\n      document.getElementById(\"markdown-preview\").style.height = textAreaHeight;\n    }\n  };\n\n  useEffect(() => {\n    setOpen(true);\n    setTimeout(() => {\n      setTextAreaHeight(\n        document.getElementById(\"bodyTextarea\").clientHeight +\n          (document.getElementById(\"bodyTextarea\").clientHeight * 2.5) / 10 +\n          \"px\"\n      );\n    }, 500);\n  }, []);\n\n  const handleClose = () => {\n    document.getElementById(\"editBtn\").click();\n    setOpen(false);\n  };\n\n  const handleSelectChange = (event) => {\n    setAddMemoTo(event.target.value);\n  };\n\n  const updateMarkdown = () => {\n    setTextAreaContent(document.getElementById(\"bodyTextarea\").value);\n  };\n\n  const switchHandler = (event) => {\n    setMdScrollable(document.getElementById(\"mdSwitch\").checked);\n    changePreviewScrollable(event);\n  };\n\n  return (\n    <div>\n      <Dialog\n        fullScreen\n        open={open}\n        onClose={handleClose}\n        TransitionComponent={Transition}\n      >\n        <form\n          className={classes.form}\n          autoComplete=\"off\"\n          onSubmit={handleSubmit(onSubmit)}\n        >\n          <input hidden=\"true\" ref={register(\"modified\")} />\n          <input hidden=\"true\" ref={register(\"memoId\")} />\n          <AppBar className={classes.appBar}>\n            <Toolbar>\n              <Tooltip title=\"Cancel\" arrow>\n                <IconButton\n                  edge=\"start\"\n                  color=\"inherit\"\n                  onClick={handleClose}\n                  aria-label=\"close\"\n                >\n                  <CloseIcon />\n                </IconButton>\n              </Tooltip>\n              <Typography variant=\"h6\" className={classes.title}>\n                Edit Memo\n              </Typography>\n              <Tooltip title=\"Update Memo\" arrow>\n                <Button\n                  autoFocus\n                  color=\"inherit\"\n                  variant=\"outlined\"\n                  startIcon={<PublishIcon />}\n                  type=\"submit\"\n                >\n                  update\n                </Button>\n              </Tooltip>\n            </Toolbar>\n          </AppBar>\n          <List>\n            <ListItem style={{ paddingBottom: 0 }}>\n              <ListItemText primary=\"Memo Heading\" />\n            </ListItem>\n            <ListItem>\n              <TextField\n                id=\"outlined-basic\"\n                label=\"Memo Heading\"\n                variant=\"outlined\"\n                fullWidth\n                value={memoHeading}\n                ref={register(\"memoTitle\", { required: true, minLength: 10 })}\n                error={errors.memoTitle ? true : false}\n                autoFocus={errors.memoTitle ? true : false}\n                onChange={(e) => {\n                  setMemoHeading(e.target.value);\n                  setValue(\"memoTitle\", e.target.value, {\n                    shouldValidate: true,\n                  });\n                }}\n                helperText={\n                  errors.memoTitle\n                    ? errors.memoTitle.type === \"required\"\n                      ? \"Memo Title is required.\"\n                      : \"Memo Title minimum lenght is 10.\"\n                    : \"Memo Title here.\"\n                }\n              />\n            </ListItem>\n            <Divider className={classes.devider} />\n            <ListItem style={{ paddingBottom: 0 }}>\n              <ListItemText primary=\"Memo Body\" />\n              <p style={{ textAlign: \"right\" }}>\n                <small>* Markdown enabled</small>\n              </p>\n            </ListItem>\n            <ListItem>\n              <TextField\n                id=\"bodyTextarea\"\n                label=\"Memo Body\"\n                variant=\"outlined\"\n                rows=\"7\"\n                multiline={true}\n                fullWidth\n                aria-label=\"textarea\"\n                value={textAreaContent}\n                onChange={(e) => {\n                  updateMarkdown(e);\n                  setValue(\"memoBody\", e.target.value, {\n                    shouldValidate: true,\n                  });\n                }}\n                ref={register(\"memoBody\", {\n                  required: true,\n                  minLength: 12,\n                })}\n                autoFocus={errors.memoBody ? true : false}\n                error={errors.memoBody ? true : false}\n                helperText={\n                  errors.memoBody\n                    ? errors.memoBody.type === \"required\"\n                      ? \"Memo body is required.\"\n                      : \"Memo body Minimum lenght is 12.\"\n                    : \"Memo Body here.\"\n                }\n              />\n            </ListItem>\n            <Divider className={classes.devider} />\n            <ListItem style={{ paddingBottom: 0 }}>\n              <ListItemText primary=\"Memo Body Preview\" />\n              <p style={{ textAlign: \"right\" }}>\n                Scrollable\n                <Switch\n                  id=\"mdSwitch\"\n                  onChange={switchHandler}\n                  color=\"primary\"\n                  style={{ paddingBottom: 0 }}\n                  checked={mdScrollable}\n                  onClick={switchHandler}\n                />\n              </p>\n            </ListItem>\n            <ListItem>\n              <Paper\n                id=\"markdown-preview\"\n                variant=\"outlined\"\n                style={{\n                  minHeight: textAreaHeight,\n                  margin: \".13rem\",\n                  width: \"100vw\",\n                  overflowY: \"visible\",\n                  paddingLeft: \".7rem\",\n                }}\n              >\n                <ReactMarkdown children={textAreaContent} />\n              </Paper>\n            </ListItem>\n            <Divider className={classes.devider} />\n            <ListItem style={{ paddingBottom: 0 }}>\n              <ListItemText primary=\"Add Memo to\" />\n            </ListItem>\n            <ListItem>\n              <FormControl\n                variant=\"outlined\"\n                fullWidth\n                className={classes.formControl}\n              >\n                <InputLabel id=\"demo-simple-select-outlined-label\">\n                  Add to\n                </InputLabel>\n                <Select\n                  labelId=\"demo-simple-select-outlined-label\"\n                  id=\"demo-simple-select-outlined\"\n                  value={addMemoTo}\n                  onChange={handleSelectChange}\n                  label=\"Add to\"\n                >\n                  <MenuItem value=\"allMemos\">\n                    <AllInboxIcon /> All Memos\n                  </MenuItem>\n                  <MenuItem disabled=\"true\" value=\"hiddenMemos\">\n                    <Badge\n                      badgeContent={\"Coming soon\"}\n                      color=\"primary\"\n                      variant=\"standard\"\n                    >\n                      <VisibilityOffIcon /> Hidden\n                    </Badge>\n                  </MenuItem>\n                  <MenuItem disabled=\"true\" value=\"secureMemos\">\n                    <Badge\n                      badgeContent={\"Coming soon\"}\n                      color=\"primary\"\n                      variant=\"standard\"\n                    >\n                      <LockIcon /> Secure\n                    </Badge>\n                  </MenuItem>\n                </Select>\n              </FormControl>\n            </ListItem>\n            <Divider className={classes.devider} />\n          </List>\n        </form>\n      </Dialog>\n    </div>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Fab from \"@material-ui/core/Fab\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport MoreIcon from \"@material-ui/icons/MoreVert\";\nimport TemporaryDrawer from \"./TemporaryDrawer\";\nimport EditMemo from \"./EditMemo\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport ReactMarkdown from \"react-markdown\";\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport $ from \"jquery\";\nimport { useHistory } from \"react-router-dom\";\nimport { CircularProgress } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  text: {\n    padding: theme.spacing(2, 2, 0),\n  },\n  paper: {\n    paddingBottom: 50,\n  },\n  list: {\n    marginBottom: theme.spacing(2),\n    minHeight: \"80vh\",\n    padding: \"1.5rem\",\n  },\n  subheader: {\n    backgroundColor: theme.palette.background.paper,\n  },\n  appBar: {\n    top: \"auto\",\n    bottom: 0,\n  },\n  grow: {\n    flexGrow: 1,\n  },\n  fabButton: {\n    position: \"absolute\",\n    zIndex: 1,\n    top: -30,\n    left: 0,\n    right: 0,\n    margin: \"0 auto\",\n  },\n}));\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nexport default function BottomAppBar(props) {\n  const classes = useStyles();\n  const [drawer, setDrawer] = useState(false);\n  const [editMemo, setEditMemo] = useState(false);\n  const [snackBar, setSnackBar] = useState(false);\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [memoData, setMemoData] = React.useState(\"\");\n  const [openAlert, setOpenAlert] = React.useState(false);\n  const [loadingMemo, setLoadingMemo] = React.useState(true);\n  var history = useHistory();\n\n  const handleAlertOpen = () => {\n    setOpenAlert(true);\n  };\n\n  const handleAlertClose = () => {\n    setOpenAlert(false);\n  };\n\n  const handleMenuClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleMenuClose = () => {\n    setAnchorEl(null);\n  };\n\n  const handleSnackBarClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n\n    setSnackBar(false);\n  };\n\n  const showSnackBar = (message, severity) => {\n    return (\n      <Snackbar\n        anchorOrigin={{ vertical: \"bottom\", horizontal: \"left\" }}\n        open={snackBar}\n        autoHideDuration={6000}\n        onClose={handleSnackBarClose}\n      >\n        <Alert onClose={handleSnackBarClose} severity={severity}>\n          {message}\n        </Alert>\n      </Snackbar>\n    );\n  };\n\n  useEffect(() => {\n    var memoId = window.location.href.substring(\n      window.location.href.lastIndexOf(\"/\") + 1\n    );\n    $.ajax({\n      url: \"/get-user-memo\",\n      data: {\n        userId: props.getLoggedInUserData().userId,\n        memoId: memoId,\n        memoType: \"allMemos\",\n      },\n      method: \"post\",\n      success: (memoData) => {\n        if (memoData.memoId) {\n          let memoId = memoData.memoId;\n          let memoDate = memoData.memoDate;\n          delete memoData.memoId;\n          delete memoData.memoDate;\n          memoData = props.decryptToOrgObj(memoData);\n          memoData.memoId = memoId;\n          memoData.memoDate = memoDate;\n          setMemoData(memoData);\n          setLoadingMemo(false);\n        }\n      },\n    });\n  });\n\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <Paper square className={classes.paper}>\n        {loadingMemo ? (\n          <div\n            style={{\n              display: \"flex\",\n              alignItems: \"center\",\n              justifyContent: \"center\",\n              margin: \"2.5rem\",\n            }}\n          >\n            <CircularProgress />\n          </div>\n        ) : null}\n        <Typography className={classes.text} variant=\"h5\" gutterBottom>\n          {memoData.memoTitle}\n        </Typography>\n        <List style={{ overflowX: \"scroll\" }} className={classes.list}>\n          <ReactMarkdown children={memoData.memoBody} />\n        </List>\n      </Paper>\n      <AppBar position=\"fixed\" color=\"primary\" className={classes.appBar}>\n        <Toolbar>\n          <IconButton\n            onClick={() => {\n              drawer ? setDrawer(false) : setDrawer(true);\n              document.getElementById(\"openDrawer\").click();\n            }}\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n          >\n            <MenuIcon />\n          </IconButton>\n          <Tooltip title=\"Edit this Memo\" arrow>\n            <Fab\n              id=\"addBtn\"\n              color=\"secondary\"\n              aria-label=\"add\"\n              className={classes.fabButton}\n              onClick={() => {\n                editMemo\n                  ? setTimeout(() => {\n                      setEditMemo(false);\n                    }, 500)\n                  : setEditMemo(true);\n              }}\n            >\n              <EditIcon />\n            </Fab>\n          </Tooltip>\n          <div className={classes.grow} />\n          <Tooltip title=\"Search\" arrow>\n            <IconButton color=\"inherit\">\n              <SearchIcon />\n            </IconButton>\n          </Tooltip>\n          <Tooltip title=\"Options\" arrow>\n            <IconButton\n              aria-controls=\"simple-menu\"\n              edge=\"end\"\n              color=\"inherit\"\n              aria-haspopup=\"true\"\n              onClick={handleMenuClick}\n            >\n              <MoreIcon />\n            </IconButton>\n          </Tooltip>\n          <Menu\n            id=\"simple-menu\"\n            anchorEl={anchorEl}\n            keepMounted\n            open={Boolean(anchorEl)}\n            onClose={handleMenuClose}\n          >\n            <MenuItem\n              id=\"editBtn\"\n              onClick={() => {\n                handleMenuClose();\n                editMemo\n                  ? setTimeout(() => {\n                      setEditMemo(false);\n                    }, 500)\n                  : setEditMemo(true);\n              }}\n            >\n              <EditIcon fontSize=\"small\" />\n              Edit\n            </MenuItem>\n            <MenuItem\n              onClick={() => {\n                handleMenuClose();\n                handleAlertOpen();\n              }}\n            >\n              <DeleteIcon fontSize=\"small\" />\n              Delete\n            </MenuItem>\n            <MenuItem\n              onClick={() => {\n                handleMenuClose();\n                history.push(\"/\");\n              }}\n            >\n              <HomeIcon fontSize=\"small\" />\n              Home\n            </MenuItem>\n          </Menu>\n        </Toolbar>\n      </AppBar>\n      <TemporaryDrawer anchor=\"left\" active={drawer} />\n      {snackBar\n        ? showSnackBar(\"Memo updated successsfully..!\", \"success\")\n        : null}\n      {editMemo ? (\n        <EditMemo\n          memoTitle={memoData.memoTitle}\n          memoBody={memoData.memoBody}\n          memoId={memoData.memoId}\n          memoDate={memoData.memoDate}\n          memoType={memoData.memoType}\n          showSnackBar={setSnackBar}\n          updateUserMemo={props.updateUserMemo}\n        />\n      ) : null}\n      {openAlert ? (\n        <Dialog\n          open={openAlert}\n          onClose={handleAlertClose}\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n        >\n          <DialogTitle id=\"alert-dialog-title\">\n            {\"Are you sure to delete this memo ?\"}\n          </DialogTitle>\n          <DialogContent>\n            <DialogContentText id=\"alert-dialog-description\">\n              Once deleted you will not able to undo or recover it. It will\n              permanently deleted.. Make sure that want move forward.. If so\n              click the OK button down below..!\n            </DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={handleAlertClose} color=\"primary\">\n              Nop.. Don't delete this memo.!\n            </Button>\n            <Button\n              onClick={() => {\n                handleAlertClose();\n                props.dltUserMemo({\n                  memoId: memoData.memoId,\n                  memoType: memoData.memoType,\n                });\n                window.location.href = \"/\";\n              }}\n              color=\"secondary\"\n              autoFocus\n            >\n              Ok, Delete this memo.. I am sure..!\n            </Button>\n          </DialogActions>\n        </Dialog>\n      ) : null}\n    </React.Fragment>\n  );\n}\n","import React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport { useHistory } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n  wrapper: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    background: \"whitesmoke\",\n    flexDirection: \"column\",\n    minHeight: \"100vh\",\n  },\n}));\n\nfunction NotFound(props) {\n  var classes = useStyles();\n  var history = useHistory();\n  return (\n    <div className={classes.wrapper}>\n      <Typography variant=\"h1\" component=\"h2\" gutterBottom>\n        404\n      </Typography>\n      <Typography variant=\"h5\" gutterBottom>\n        <b>Ooops..!</b>\n      </Typography>\n      <Typography variant=\"p\" gutterBottom>\n        THAT PAGE DOESN'T EXIST OR IS UNAVAILABLE.\n      </Typography>\n      <div\n        style={{\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          flexDirection: \"row\",\n        }}\n      >\n        <Button\n          variant=\"outlined\"\n          color=\"primary\"\n          onClick={() => {\n            history.push(\"/\");\n          }}\n        >\n          Take Me Home\n        </Button>\n        <Button\n          style={{ marginLeft: \"2rem\" }}\n          variant=\"outlined\"\n          onClick={() => {\n            window.location.href = \"https://github.com/Muhammed-Rahif\";\n          }}\n        >\n          Contact Developer\n        </Button>\n      </div>\n    </div>\n  );\n}\n\nexport default NotFound;\n","import React, { Component, useEffect } from \"react\";\n// import logo from './logo.svg';\nimport \"./App.css\";\n\nimport $ from \"jquery\";\nconst CryptoJS = require(\"crypto-js\");\nvar store = require(\"store\");\n\nimport SignIn from \"./Components/SignIn\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport SignUp from \"./Components/SignUp\";\nimport HomeViewMemos from \"./Components/HomeViewMemos\";\nimport MyProfile from \"./Components/MyProfile\";\nimport AboutUs from \"./Components/AboutUs\";\nimport ViewMemo from \"./Components/ViewMemo\";\nimport EditMemo from \"./Components/EditMemo\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport { Redirect } from \"react-router\";\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport NotFound from \"./Components/NotFound\";\nconst clientStorageKey = \"SecureMemoStorage\";\nconst encKey = \"secure memo key\";\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userData: undefined,\n      userLoggedIn: false,\n      myMemos: [],\n      snackbar: {\n        openSnackbar: false,\n        msg: \"\",\n        type: \"success\",\n        position: { vertical: \"bottom\", horizontal: \"left\" },\n      },\n      backdropOpen: false,\n    };\n  }\n\n  backdropClose = () => {\n    this.setState({ backdropOpen: false });\n  };\n  backdropToggle = () => {\n    this.setState({ backdropOpen: !this.state.backdropOpen });\n  };\n\n  encryptObj = (obj) => {\n    let encObj = {};\n    Object.keys(obj).map((itm) => {\n      encObj[itm] = CryptoJS.AES.encrypt(obj[itm], encKey).toString();\n    });\n    return encObj;\n  };\n\n  encUnSaltStr = (str) => {\n    return CryptoJS.AES.encrypt(str, CryptoJS.enc.Utf8.parse(encKey), {\n      iv: { words: [0, 0, 0, 0], sigBytes: 16 },\n    }).toString();\n  };\n\n  decryptToOrgObj = (obj) => {\n    let decObj = {};\n    Object.keys(obj).map((itm) => {\n      decObj[itm] = CryptoJS.AES.decrypt(obj[itm], encKey).toString(\n        CryptoJS.enc.Utf8\n      );\n      decObj[itm] = decObj[itm].replace(/['\"]+/g, \"\");\n    });\n    return decObj;\n  };\n\n  signUpUser = (userData) => {\n    this.backdropToggle();\n    var userEmail = userData.email;\n    delete userData.email;\n    userData = this.encryptObj(userData);\n    userData.email = this.encUnSaltStr(userEmail);\n    $.ajax({\n      method: \"post\",\n      url: \"/signup-user\",\n      data: userData,\n      success: (response) => {\n        if (response.status) {\n          this.backdropToggle();\n          store.set(clientStorageKey, response.userData);\n          this.setState({ userData: response.userData });\n          this.setState({ userLoggedIn: true });\n          this.verifyUserLogin();\n          <Redirect push to=\"./\" />;\n        } else {\n          this.backdropToggle();\n          this.setState({\n            snackbar: {\n              openSnackbar: true,\n              msg: `Can't sign up : ${response.errorMsg}`,\n              type: \"error\",\n              position: {\n                vertical: \"top\",\n                horizontal: \"center\",\n              },\n            },\n          });\n        }\n      },\n    });\n  };\n\n  signInUser = (userData) => {\n    this.backdropToggle();\n    var userEmail = userData.email;\n    delete userData.email;\n    userData = this.encryptObj(userData);\n    userData.email = this.encUnSaltStr(userEmail);\n    $.ajax({\n      method: \"post\",\n      url: \"/signin-user\",\n      data: userData,\n      success: (response) => {\n        if (response.status) {\n          this.backdropToggle();\n          store.set(clientStorageKey, response.userData);\n          this.setState({ userData: response.userData });\n          this.setState({ userLoggedIn: true });\n          this.verifyUserLogin();\n          <Redirect push to=\"./\" />;\n        } else {\n          this.backdropToggle();\n          this.setState({\n            snackbar: {\n              openSnackbar: true,\n              msg: `Can't sign in : ${response.errorMsg}`,\n              type: \"error\",\n              position: {\n                vertical: \"top\",\n                horizontal: \"center\",\n              },\n            },\n          });\n        }\n      },\n    });\n  };\n\n  logoutUser = () => {\n    this.setState({ userLoggedIn: false, userData: undefined });\n    store.remove(clientStorageKey);\n    window.location.reload();\n  };\n\n  getLoggedInUserData = () => {\n    let userData = store.get(clientStorageKey);\n    return userData;\n  };\n\n  createUserMemo = (memoData) => {\n    this.backdropToggle();\n    memoData = this.encryptObj(memoData);\n    var userData = this.getLoggedInUserData();\n    Object.assign(userData, memoData);\n    $.ajax({\n      method: \"post\",\n      url: \"/create-user-memo\",\n      data: userData,\n      success: (response) => {\n        this.backdropToggle();\n        if (response.status) {\n          this.setState({\n            snackbar: {\n              openSnackbar: true,\n              msg: response.firstMemo\n                ? \"Successfully saved your first memo.!\"\n                : \"Successfully saved your memo.!\",\n              type: \"success\",\n              position: {\n                vertical: \"bottom\",\n                horizontal: \"left\",\n              },\n            },\n          });\n        } else {\n          this.setState({\n            snackbar: {\n              openSnackbar: true,\n              msg: \"Oops..! Something went wrong, Try again.\",\n              type: \"error\",\n              position: {\n                vertical: \"bottom\",\n                horizontal: \"left\",\n              },\n            },\n          });\n        }\n      },\n    });\n  };\n\n  updateUserMemo = (memoData) => {\n    this.backdropToggle();\n    let memoId = memoData.memoId;\n    delete memoData.memoId;\n    memoData = this.encryptObj(memoData);\n    memoData.memoId = memoId;\n    var userData = this.getLoggedInUserData();\n    Object.assign(userData, memoData);\n    $.ajax({\n      method: \"post\",\n      url: \"/update-user-memo\",\n      data: userData,\n      success: (response) => {\n        this.backdropToggle();\n        if (response.status) {\n          this.setState({\n            snackbar: {\n              openSnackbar: true,\n              msg: \"Successfully updated your memo.!\",\n              type: \"success\",\n              position: {\n                vertical: \"bottom\",\n                horizontal: \"left\",\n              },\n            },\n          });\n        } else {\n          this.setState({\n            snackbar: {\n              openSnackbar: true,\n              msg: \"Oops..! Something went wrong, Try again.\",\n              type: \"error\",\n              position: {\n                vertical: \"bottom\",\n                horizontal: \"left\",\n              },\n            },\n          });\n        }\n      },\n    });\n  };\n\n  getUserMemo = (userId, memoId) => {\n    alert(\"editUserMemo\");\n  };\n\n  dltUserMemo = (memoData) => {\n    this.backdropToggle();\n    var userData = this.getLoggedInUserData();\n    Object.assign(userData, memoData);\n    $.ajax({\n      method: \"post\",\n      url: \"/delete-user-memo\",\n      data: userData,\n      success: (response) => {\n        this.backdropToggle();\n        if (response.status) {\n          this.setState({\n            snackbar: {\n              openSnackbar: true,\n              msg: \"Successfully deleted.!\",\n              type: \"success\",\n              position: {\n                vertical: \"bottom\",\n                horizontal: \"left\",\n              },\n            },\n          });\n          window.location.href = \"/\";\n        } else {\n          this.setState({\n            snackbar: {\n              openSnackbar: true,\n              msg: \"Oops..! Something went wrong, Try again.\",\n              type: \"error\",\n              position: {\n                vertical: \"bottom\",\n                horizontal: \"left\",\n              },\n            },\n          });\n        }\n      },\n    });\n  };\n\n  SnackbarClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n\n    this.setState({ snackbar: { openSnackbar: false } });\n  };\n\n  verifyUserLogin = () => {\n    if (store.get(clientStorageKey)) {\n      console.log(\"here\");\n      this.setState({\n        userData: store.get(clientStorageKey),\n        userLoggedIn: true,\n      });\n    } else {\n      store.set(clientStorageKey, this.state.userData);\n    }\n  };\n\n  componentWillMount = () => {\n    console.log(store.get(clientStorageKey));\n    this.verifyUserLogin();\n  };\n\n  render() {\n    console.log(this.state.userLoggedIn);\n    console.log(this.state.userData);\n    console.log(store.get(clientStorageKey));\n    return (\n      <Router>\n        {/* Backdrop */}\n        <Backdrop style={{ zIndex: 999999 }} open={this.state.backdropOpen}>\n          <CircularProgress color=\"inherit\" />\n        </Backdrop>\n        {/* Alert a snackbar */}\n        {this.state.snackbar.openSnackbar ? (\n          <Snackbar\n            open={this.state.snackbar.openSnackbar}\n            autoHideDuration={6000}\n            style={{ position: \"absolute\" }}\n            onClose={this.SnackbarClose}\n            anchorOrigin={this.state.snackbar.position}\n          >\n            <Alert\n              onClose={this.SnackbarClose}\n              severity={this.state.snackbar.type}\n            >\n              {this.state.snackbar.msg}\n            </Alert>\n          </Snackbar>\n        ) : null}\n        <Switch>\n          <Route exact path=\"/\" component={SignIn}>\n            {this.state.userLoggedIn ? (\n              <Redirect push to=\"/all-memos\" />\n            ) : (\n              <Redirect push to=\"/signup\" />\n            )}\n          </Route>\n          <Route path=\"/signin\">\n            {this.state.userLoggedIn ? (\n              <Redirect push to=\"/\" />\n            ) : (\n              <SignIn signInUser={this.signInUser} />\n            )}\n          </Route>\n          <Route path=\"/signup\">\n            {this.state.userLoggedIn ? (\n              <Redirect push to=\"/\" />\n            ) : (\n              <SignUp signUpUser={this.signUpUser} />\n            )}\n          </Route>\n          <Route path=\"/all-memos\">\n            {this.state.userLoggedIn ? (\n              <HomeViewMemos\n                decryptToOrgObj={this.decryptToOrgObj}\n                getLoggedInUserData={this.getLoggedInUserData}\n                createUserMemo={this.createUserMemo}\n                logoutUser={this.logoutUser}\n              />\n            ) : (\n              <Redirect push to=\"/signup\" />\n            )}\n          </Route>\n          <Route path=\"/my-profile\">\n            {this.state.userLoggedIn ? (\n              <MyProfile logoutUser={this.logoutUser} />\n            ) : (\n              <Redirect push to=\"/signup\" />\n            )}\n          </Route>\n          <Route path=\"/view-memo/:id\">\n            {this.state.userLoggedIn ? (\n              <ViewMemo\n                dltUserMemo={this.dltUserMemo}\n                getLoggedInUserData={this.getLoggedInUserData}\n                decryptToOrgObj={this.decryptToOrgObj}\n                updateUserMemo={this.updateUserMemo}\n              />\n            ) : (\n              <Redirect push to=\"/\" />\n            )}\n          </Route>\n          <Route path=\"/about-us\">\n            <AboutUs />\n          </Route>\n          {/* 404 page */}\n          <Route path=\"/404\" component={NotFound} />\n          <Route path=\"/\" component={NotFound} />\n          <Route path=\"/*\" component={NotFound} />\n          <Route component={NotFound} />\n        </Switch>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}